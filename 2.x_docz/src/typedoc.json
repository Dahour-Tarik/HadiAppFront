{
	"id": 0,
	"name": "chonky",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "ChonkyIconName",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 58,
					"name": "adobe",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 83,
							"character": 9
						}
					],
					"defaultValue": "\"adobe\""
				},
				{
					"id": 41,
					"name": "archive",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 58,
							"character": 11
						}
					],
					"defaultValue": "\"archive\""
				},
				{
					"id": 15,
					"name": "clearSelection",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 22,
							"character": 18
						}
					],
					"defaultValue": "\"clearSelection\""
				},
				{
					"id": 36,
					"name": "code",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 53,
							"character": 8
						}
					],
					"defaultValue": "\"code\""
				},
				{
					"id": 21,
					"name": "compact",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 32,
							"character": 11
						}
					],
					"defaultValue": "\"compact\""
				},
				{
					"id": 37,
					"name": "config",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 54,
							"character": 10
						}
					],
					"defaultValue": "\"config\""
				},
				{
					"id": 10,
					"name": "copy",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 17,
							"character": 8
						}
					],
					"defaultValue": "\"copy\""
				},
				{
					"id": 39,
					"name": "database",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 56,
							"character": 12
						}
					],
					"defaultValue": "\"database\""
				},
				{
					"id": 6,
					"name": "dndCanDrop",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 11,
							"character": 14
						}
					],
					"defaultValue": "\"dndCanDrop\""
				},
				{
					"id": 7,
					"name": "dndCannotDrop",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 12,
							"character": 17
						}
					],
					"defaultValue": "\"dndCannotDrop\""
				},
				{
					"id": 5,
					"name": "dndDragging",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 10,
							"character": 15
						}
					],
					"defaultValue": "\"dndDragging\""
				},
				{
					"id": 28,
					"name": "download",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 41,
							"character": 12
						}
					],
					"defaultValue": "\"download\""
				},
				{
					"id": 3,
					"name": "dropdown",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 6,
							"character": 12
						}
					],
					"defaultValue": "\"dropdown\""
				},
				{
					"id": 60,
					"name": "excel",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 87,
							"character": 9
						}
					],
					"defaultValue": "\"excel\""
				},
				{
					"id": 31,
					"name": "fallbackIcon",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 44,
							"character": 16
						}
					],
					"defaultValue": "\"fallbackIcon\""
				},
				{
					"id": 34,
					"name": "file",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 51,
							"character": 8
						}
					],
					"defaultValue": "\"file\""
				},
				{
					"id": 62,
					"name": "flash",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 89,
							"character": 9
						}
					],
					"defaultValue": "\"flash\""
				},
				{
					"id": 24,
					"name": "folder",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 37,
							"character": 10
						}
					],
					"defaultValue": "\"folder\""
				},
				{
					"id": 27,
					"name": "folderChainSeparator",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 40,
							"character": 24
						}
					],
					"defaultValue": "\"folderChainSeparator\""
				},
				{
					"id": 25,
					"name": "folderCreate",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 38,
							"character": 16
						}
					],
					"defaultValue": "\"folderCreate\""
				},
				{
					"id": 26,
					"name": "folderOpen",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 39,
							"character": 14
						}
					],
					"defaultValue": "\"folderOpen\""
				},
				{
					"id": 57,
					"name": "git",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 80,
							"character": 7
						}
					],
					"defaultValue": "\"git\""
				},
				{
					"id": 33,
					"name": "hidden",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 48,
							"character": 10
						}
					],
					"defaultValue": "\"hidden\""
				},
				{
					"id": 42,
					"name": "image",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 59,
							"character": 9
						}
					],
					"defaultValue": "\"image\""
				},
				{
					"id": 44,
					"name": "info",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 61,
							"character": 8
						}
					],
					"defaultValue": "\"info\""
				},
				{
					"id": 45,
					"name": "key",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 62,
							"character": 7
						}
					],
					"defaultValue": "\"key\""
				},
				{
					"id": 23,
					"name": "largeThumbnail",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 34,
							"character": 18
						}
					],
					"defaultValue": "\"largeThumbnail\""
				},
				{
					"id": 35,
					"name": "license",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 52,
							"character": 11
						}
					],
					"defaultValue": "\"license\""
				},
				{
					"id": 50,
					"name": "linux",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 69,
							"character": 9
						}
					],
					"defaultValue": "\"linux\""
				},
				{
					"id": 20,
					"name": "list",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 31,
							"character": 8
						}
					],
					"defaultValue": "\"list\""
				},
				{
					"id": 2,
					"name": "loading",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 5,
							"character": 11
						}
					],
					"defaultValue": "\"loading\""
				},
				{
					"id": 46,
					"name": "lock",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 63,
							"character": 8
						}
					],
					"defaultValue": "\"lock\""
				},
				{
					"id": 38,
					"name": "model",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 55,
							"character": 9
						}
					],
					"defaultValue": "\"model\""
				},
				{
					"id": 47,
					"name": "music",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 64,
							"character": 9
						}
					],
					"defaultValue": "\"music\""
				},
				{
					"id": 55,
					"name": "nodejs",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 76,
							"character": 10
						}
					],
					"defaultValue": "\"nodejs\""
				},
				{
					"id": 8,
					"name": "openFiles",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 15,
							"character": 13
						}
					],
					"defaultValue": "\"openFiles\""
				},
				{
					"id": 9,
					"name": "openParentFolder",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 16,
							"character": 20
						}
					],
					"defaultValue": "\"openParentFolder\""
				},
				{
					"id": 11,
					"name": "paste",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 18,
							"character": 9
						}
					],
					"defaultValue": "\"paste\""
				},
				{
					"id": 59,
					"name": "pdf",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 86,
							"character": 7
						}
					],
					"defaultValue": "\"pdf\""
				},
				{
					"id": 56,
					"name": "php",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 77,
							"character": 7
						}
					],
					"defaultValue": "\"php\""
				},
				{
					"id": 4,
					"name": "placeholder",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 7,
							"character": 15
						}
					],
					"defaultValue": "\"placeholder\""
				},
				{
					"id": 54,
					"name": "python",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 75,
							"character": 10
						}
					],
					"defaultValue": "\"python\""
				},
				{
					"id": 53,
					"name": "rust",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 74,
							"character": 8
						}
					],
					"defaultValue": "\"rust\""
				},
				{
					"id": 13,
					"name": "search",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 20,
							"character": 10
						}
					],
					"defaultValue": "\"search\""
				},
				{
					"id": 14,
					"name": "selectAllFiles",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 21,
							"character": 18
						}
					],
					"defaultValue": "\"selectAllFiles\""
				},
				{
					"id": 12,
					"name": "share",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 19,
							"character": 9
						}
					],
					"defaultValue": "\"share\""
				},
				{
					"id": 22,
					"name": "smallThumbnail",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 33,
							"character": 18
						}
					],
					"defaultValue": "\"smallThumbnail\""
				},
				{
					"id": 16,
					"name": "sortAsc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 25,
							"character": 11
						}
					],
					"defaultValue": "\"sortAsc\""
				},
				{
					"id": 17,
					"name": "sortDesc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 26,
							"character": 12
						}
					],
					"defaultValue": "\"sortDesc\""
				},
				{
					"id": 32,
					"name": "symlink",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 47,
							"character": 11
						}
					],
					"defaultValue": "\"symlink\""
				},
				{
					"id": 48,
					"name": "terminal",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 65,
							"character": 12
						}
					],
					"defaultValue": "\"terminal\""
				},
				{
					"id": 40,
					"name": "text",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 57,
							"character": 8
						}
					],
					"defaultValue": "\"text\""
				},
				{
					"id": 19,
					"name": "toggleOff",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 28,
							"character": 13
						}
					],
					"defaultValue": "\"toggleOff\""
				},
				{
					"id": 18,
					"name": "toggleOn",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 27,
							"character": 12
						}
					],
					"defaultValue": "\"toggleOn\""
				},
				{
					"id": 30,
					"name": "trash",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 43,
							"character": 9
						}
					],
					"defaultValue": "\"trash\""
				},
				{
					"id": 51,
					"name": "ubuntu",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 70,
							"character": 10
						}
					],
					"defaultValue": "\"ubuntu\""
				},
				{
					"id": 29,
					"name": "upload",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 42,
							"character": 10
						}
					],
					"defaultValue": "\"upload\""
				},
				{
					"id": 49,
					"name": "users",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 66,
							"character": 9
						}
					],
					"defaultValue": "\"users\""
				},
				{
					"id": 43,
					"name": "video",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 60,
							"character": 9
						}
					],
					"defaultValue": "\"video\""
				},
				{
					"id": 52,
					"name": "windows",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 71,
							"character": 11
						}
					],
					"defaultValue": "\"windows\""
				},
				{
					"id": 61,
					"name": "word",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 88,
							"character": 8
						}
					],
					"defaultValue": "\"word\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						58,
						41,
						15,
						36,
						21,
						37,
						10,
						39,
						6,
						7,
						5,
						28,
						3,
						60,
						31,
						34,
						62,
						24,
						27,
						25,
						26,
						57,
						33,
						42,
						44,
						45,
						23,
						35,
						50,
						20,
						2,
						46,
						38,
						47,
						55,
						8,
						9,
						11,
						59,
						56,
						4,
						54,
						53,
						13,
						14,
						12,
						22,
						16,
						17,
						32,
						48,
						40,
						19,
						18,
						30,
						51,
						29,
						49,
						43,
						52,
						61
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/icons.types.ts",
					"line": 3,
					"character": 26
				}
			]
		},
		{
			"id": 107,
			"name": "FileViewMode",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 109,
					"name": "Compact",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-view.types.ts",
							"line": 3,
							"character": 11
						}
					],
					"defaultValue": "\"compact\""
				},
				{
					"id": 110,
					"name": "Grid",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-view.types.ts",
							"line": 4,
							"character": 8
						}
					],
					"defaultValue": "\"grid\""
				},
				{
					"id": 108,
					"name": "List",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-view.types.ts",
							"line": 2,
							"character": 8
						}
					],
					"defaultValue": "\"list\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						109,
						110,
						108
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file-view.types.ts",
					"line": 1,
					"character": 24
				}
			]
		},
		{
			"id": 121,
			"name": "SortOrder",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 122,
					"name": "ASC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/sort.types.ts",
							"line": 8,
							"character": 7
						}
					],
					"defaultValue": "\"asc\""
				},
				{
					"id": 123,
					"name": "DESC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/sort.types.ts",
							"line": 9,
							"character": 8
						}
					],
					"defaultValue": "\"desc\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						122,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/sort.types.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 430,
			"name": "FileHelper",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 467,
					"name": "getChildrenCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 468,
							"name": "getChildrenCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 469,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 97,
							"character": 34
						}
					]
				},
				{
					"id": 464,
					"name": "getReadableDate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 465,
							"name": "getReadableDate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 466,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 75,
							"character": 33
						}
					]
				},
				{
					"id": 461,
					"name": "getReadableFileSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 462,
							"name": "getReadableFileSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 463,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 62,
							"character": 37
						}
					]
				},
				{
					"id": 443,
					"name": "isClickable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 444,
							"name": "isClickable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 445,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 28,
							"character": 29
						}
					]
				},
				{
					"id": 431,
					"name": "isDirectory",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 432,
							"name": "isDirectory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 433,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 8,
							"character": 29
						}
					]
				},
				{
					"id": 458,
					"name": "isDndOpenable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 459,
							"name": "isDndOpenable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 460,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 55,
							"character": 31
						}
					]
				},
				{
					"id": 452,
					"name": "isDraggable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 453,
							"name": "isDraggable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 454,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 43,
							"character": 29
						}
					]
				},
				{
					"id": 455,
					"name": "isDroppable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 456,
							"name": "isDroppable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 457,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 48,
							"character": 29
						}
					]
				},
				{
					"id": 440,
					"name": "isEncrypted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 441,
							"name": "isEncrypted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 442,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 23,
							"character": 29
						}
					]
				},
				{
					"id": 434,
					"name": "isHidden",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 435,
							"name": "isHidden",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 436,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 13,
							"character": 26
						}
					]
				},
				{
					"id": 446,
					"name": "isOpenable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "isOpenable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 448,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 33,
							"character": 28
						}
					]
				},
				{
					"id": 449,
					"name": "isSelectable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "isSelectable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 451,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 38,
							"character": 30
						}
					]
				},
				{
					"id": 437,
					"name": "isSymlink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 438,
							"name": "isSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 439,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "file",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "FileData"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/file-helper.ts",
							"line": 18,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						467,
						464,
						461,
						443,
						431,
						458,
						452,
						455,
						440,
						434,
						446,
						449,
						437
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/file-helper.ts",
					"line": 7,
					"character": 23
				}
			]
		},
		{
			"id": 417,
			"name": "Logger",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 424,
					"name": "debug",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 425,
							"name": "debug",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 426,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/logger.ts",
							"line": 12,
							"character": 23
						}
					]
				},
				{
					"id": 418,
					"name": "error",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 419,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 420,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/logger.ts",
							"line": 2,
							"character": 23
						}
					]
				},
				{
					"id": 427,
					"name": "formatBullets",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "formatBullets",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 429,
									"name": "bullets",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/logger.ts",
							"line": 17,
							"character": 31
						}
					]
				},
				{
					"id": 421,
					"name": "warn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 422,
							"name": "warn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 423,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/util/logger.ts",
							"line": 7,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						424,
						418,
						427,
						421
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/logger.ts",
					"line": 1,
					"character": 19
				}
			]
		},
		{
			"id": 1183,
			"name": "ThunkExtraArgument",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1184,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1185,
							"name": "new ThunkExtraArgument",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1183,
								"name": "ThunkExtraArgument"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 7,
							"character": 69
						}
					]
				},
				{
					"id": 1186,
					"name": "cachedCleanFileIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 12,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Nullable"
					},
					"defaultValue": "null"
				},
				{
					"id": 1189,
					"name": "cachedSearchResult",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 15,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set"
							}
						],
						"name": "Nullable"
					},
					"defaultValue": "null"
				},
				{
					"id": 1188,
					"name": "cachedSearchString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 14,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1187,
					"name": "cachedSearcher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "FuzzySearch"
							}
						],
						"name": "Nullable"
					},
					"defaultValue": "null"
				},
				{
					"id": 1190,
					"name": "getCachedSearch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1191,
							"name": "getCachedSearch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1192,
									"name": "cleanFileIds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1193,
									"name": "fileMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 99,
										"name": "FileMap"
									}
								},
								{
									"id": 1194,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set"
							},
							"implementationOf": {
								"type": "reference",
								"id": 233,
								"name": "ChonkyThunkExtraArgument.getCachedSearch"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/redux/middleware.ts",
							"line": 16,
							"character": 26
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 232,
						"name": "ChonkyThunkExtraArgument.getCachedSearch"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1184
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1186,
						1189,
						1188,
						1187
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1190
					]
				}
			],
			"sources": [
				{
					"fileName": "src/redux/middleware.ts",
					"line": 7,
					"character": 31
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 231,
					"name": "ChonkyThunkExtraArgument"
				}
			]
		},
		{
			"id": 1390,
			"name": "ChonkyDndDropResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1392,
					"name": "dropEffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/dnd.types.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							}
						]
					}
				},
				{
					"id": 1391,
					"name": "dropTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/dnd.types.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nilable"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1392,
						1391
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/dnd.types.ts",
					"line": 7,
					"character": 36
				}
			]
		},
		{
			"id": 66,
			"name": "ChonkyIconProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 69,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 100,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 70,
					"name": "fixedWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 101,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 67,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 98,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "ChonkyIconName"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 68,
					"name": "spin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 99,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 71,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 102,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "React.CSSProperties"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						69,
						70,
						67,
						68,
						71
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/icons.types.ts",
					"line": 97,
					"character": 32
				}
			]
		},
		{
			"id": 1431,
			"name": "ChonkyPresentationLayerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/ChonkyPresentationLayer.tsx",
					"line": 24,
					"character": 45
				}
			]
		},
		{
			"id": 231,
			"name": "ChonkyThunkExtraArgument",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 232,
					"name": "getCachedSearch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 233,
							"name": "getCachedSearch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 234,
									"name": "cleanFileIds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 235,
									"name": "fileMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 99,
										"name": "FileMap"
									}
								},
								{
									"id": 236,
									"name": "searchString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/redux.types.ts",
							"line": 79,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/redux.types.ts",
					"line": 78,
					"character": 41
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 1183,
					"name": "ThunkExtraArgument"
				}
			]
		},
		{
			"id": 1545,
			"name": "ClickableWrapperProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1549,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 33,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 1555,
						"name": "MouseClickEventHandler"
					}
				},
				{
					"id": 1550,
					"name": "onKeyboardClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 34,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 1559,
						"name": "KeyboardClickEventHandler"
					}
				},
				{
					"id": 1548,
					"name": "onSingleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 32,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 1555,
						"name": "MouseClickEventHandler"
					}
				},
				{
					"id": 1547,
					"name": "passthroughProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 30,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1551,
					"name": "setFocused",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 35,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1552,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1553,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1554,
													"name": "focused",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1546,
					"name": "wrapperTag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 29,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1549,
						1550,
						1548,
						1547,
						1551,
						1546
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 28,
					"character": 38
				}
			]
		},
		{
			"id": 204,
			"name": "ContextMenuConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 206,
					"name": "mouseX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/context-menu.types.ts",
							"line": 5,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 207,
					"name": "mouseY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/context-menu.types.ts",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 205,
					"name": "triggerFileId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/context-menu.types.ts",
							"line": 4,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						206,
						207,
						205
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/context-menu.types.ts",
					"line": 3,
					"character": 34
				}
			]
		},
		{
			"id": 1687,
			"name": "DnDFileEntryProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1689,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileEntry.tsx",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1690,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1691,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1692,
											"name": "dndState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 1475,
												"name": "DndEntryState"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReactElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/components/file-list/DnDFileEntry.tsx",
									"line": 12,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 1688,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileEntry.tsx",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1689,
						1688
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileEntry.tsx",
					"line": 10,
					"character": 34
				}
			]
		},
		{
			"id": 1397,
			"name": "DnDFileListDragLayerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
					"line": 14,
					"character": 42
				}
			]
		},
		{
			"id": 1570,
			"name": "DnDIndicatorProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1571,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryDndIndicator.tsx",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1572,
					"name": "dndState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryDndIndicator.tsx",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 1475,
						"name": "DndEntryState"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1571,
						1572
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryDndIndicator.tsx",
					"line": 14,
					"character": 34
				}
			]
		},
		{
			"id": 1475,
			"name": "DndEntryState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1478,
					"name": "dndCanDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1476,
					"name": "dndIsDragging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 6,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1477,
					"name": "dndIsOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 7,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1478,
						1476,
						1477
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file-list.types.ts",
					"line": 5,
					"character": 30
				}
			]
		},
		{
			"id": 1754,
			"name": "ErrorMessageData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1756,
					"name": "bullets",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/validation.types.ts",
							"line": 3,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1755,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/validation.types.ts",
							"line": 2,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1756,
						1755
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/validation.types.ts",
					"line": 1,
					"character": 33
				}
			]
		},
		{
			"id": 128,
			"name": "FileAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 140,
					"name": "__extraStateType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Field used to infer the type of extra state for this action. It is used solely\nfor Typescript type inference and action validation."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 80,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 139,
					"name": "__payloadType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Field used to infer the type of action payload. It is used solely for Typescript\ntype inference and action validation."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 75,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 133,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When button is defined and `toolbar` or `contextMenu` is set to `true`, a\nbutton will be added to the relevant UI component. Clicking on this button\nwill active this action. The appearance of the button will change based on\nthe action definition and the current Chonky state."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 40,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 141,
						"name": "FileActionButton"
					}
				},
				{
					"id": 138,
					"name": "effect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When effect is defined, it will be called right before dispatching the action to\nthe user defined action handler. If the effect function returns a promise, Chonky\nwill wait for the promise to resolve or fail before dispatching the action to the\nhandler. If this function returns `true`, the file action will NOT be dispatched\nthe the handler."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 70,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 161,
						"name": "FileActionEffect"
					}
				},
				{
					"id": 131,
					"name": "fileFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A predicate that determines whether a file should be included in the selection\nfor this action."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 27,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 95,
						"name": "FileFilter"
					}
				},
				{
					"id": 135,
					"name": "fileViewConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When `fileViewConfig` is specified, triggering this action will apply the\nprovided config to Chonky's file view."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 120,
						"name": "FileViewConfig"
					}
				},
				{
					"id": 132,
					"name": "hotkeys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "List of hotkeys that should trigger this action, defined using `hotkey-js`\nnotation.",
						"tags": [
							{
								"tag": "see",
								"text": "https://www.npmjs.com/package/hotkeys-js\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					}
				},
				{
					"id": 129,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unique file action ID. If you set the action ID to one of the built-in Chonky\naction action IDs, you custom action definition will override the built-in\ndefinition."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 16,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 136,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When `option` is specified, the action becomes an option toggle. When the action\nis activated, the boolean value of the option will be toggled."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 56,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 149,
						"name": "FileActionOption"
					}
				},
				{
					"id": 130,
					"name": "requiresSelection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When set to `true`, the action will only be active (dispatchable) when user\nselects one or more files. If `fileFilter` is defined, it will be applied to\nselection before checking if its empty."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 22,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 137,
					"name": "selectionTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When selection transform is defined, activating this action will update the file\nselection. If the transform function returns `null`, selection will be left\nuntouched."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 62,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"id": 152,
						"name": "FileSelectionTransform"
					}
				},
				{
					"id": 134,
					"name": "sortKeySelector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When `sortKeySelector` is specified, the action becomes a sorting toggle. When\nthis action is activated, it will sort files using the key selector, toggling\nbetween Ascending and Descending orders."
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 46,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 124,
						"name": "FileSortKeySelector"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						140,
						139,
						133,
						138,
						131,
						135,
						132,
						129,
						136,
						130,
						137,
						134
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 10,
					"character": 27
				}
			]
		},
		{
			"id": 141,
			"name": "FileActionButton",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 144,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 86,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 145,
					"name": "group",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 87,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 147,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 89,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "ChonkyIconName"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 148,
					"name": "iconOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 90,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 142,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 84,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 143,
					"name": "toolbar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 85,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 146,
					"name": "tooltip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 88,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						144,
						145,
						147,
						148,
						142,
						143,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 83,
					"character": 33
				}
			]
		},
		{
			"id": 200,
			"name": "FileActionGroup",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 202,
					"name": "fileActionIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-menus.types.ts",
							"line": 3,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 201,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-menus.types.ts",
							"line": 2,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						202,
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-menus.types.ts",
					"line": 1,
					"character": 32
				}
			]
		},
		{
			"id": 149,
			"name": "FileActionOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 151,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 95,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 150,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 94,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						151,
						150
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 93,
					"character": 33
				}
			]
		},
		{
			"id": 1223,
			"name": "FileBrowserHandle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "File browser methods exposed to developers via the `FileBrowser` ref."
			},
			"children": [
				{
					"id": 1224,
					"name": "getFileSelection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1225,
							"name": "getFileSelection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Method used to get the current file selection.",
								"returns": "An ES6 Set containing the IDs of the selected files.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 19,
							"character": 20
						}
					]
				},
				{
					"id": 1230,
					"name": "requestFileAction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1231,
							"name": "requestFileAction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Method used to programatically trigger file actions in Chonky."
							},
							"typeParameter": [
								{
									"id": 1232,
									"name": "Action",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								}
							],
							"parameters": [
								{
									"id": 1233,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A file action definition object"
									},
									"type": {
										"type": "typeParameter",
										"name": "Action",
										"constraint": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									}
								},
								{
									"id": 1234,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The payload expected by the action. If action does not expect\na payload, this should be set to `undefined`.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "__payloadType"
										},
										"objectType": {
											"type": "typeParameter",
											"name": "Action",
											"constraint": {
												"type": "reference",
												"id": 128,
												"name": "FileAction"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 37,
							"character": 21
						}
					]
				},
				{
					"id": 1226,
					"name": "setFileSelection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1227,
							"name": "setFileSelection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Method used to set the current file selection."
							},
							"parameters": [
								{
									"id": 1228,
									"name": "selection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "An ES6 Set containing the IDs of files that should be selected.\nIDs of files that are not present in the `files` array will be ignored."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set"
									}
								},
								{
									"id": 1229,
									"name": "reset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 29,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1224,
						1230,
						1226
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file-browser.types.ts",
					"line": 14,
					"character": 34
				}
			]
		},
		{
			"id": 1235,
			"name": "FileBrowserProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Props for the `FileBrowser` component that is exposed to library users."
			},
			"children": [
				{
					"id": 1249,
					"name": "clearSelectionOnOutsideClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines whether the file selection should be cleared when user clicks\nanywhere outside of Chonky. By default, selection is cleared on outside click\nunless the click target is a button."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 141,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1248,
					"name": "defaultFileViewActionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The ID of the file-view-setting action to activate by default. This field can\nbe used to specify the default file view in Chonky."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 134,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1247,
					"name": "defaultSortActionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The ID of the sort-selector-setting action to activate by default. This field can\nbe used to specify the default sort order in Chonky."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 128,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1244,
					"name": "disableDefaultFileActions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The value that determines what default file actions will be disabled. You can\nset this to `true` to disable all default file actions, or explicitly pass an\narray of default file action IDs that you want to disable."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 109,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1245,
					"name": "disableDragAndDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The flag that completely disables drag & drop functionality for this instance\nof Chonky."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 115,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1246,
					"name": "disableDragAndDropProvider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The flag that is used to disable `react-dnd` context provider inside of this\ninstance of Chonky, while keeping other drag & drop functionality in tact.\nUseful when you want to provide your own `react-dnd` context."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 122,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1243,
					"name": "disableSelection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The flag that completely disables file selection functionality. If any handlers\ndepend on file selections, their input will always have empty file selections."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 102,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1242,
					"name": "doubleClickDelay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Maximum delay between the two clicks in a double click, in milliseconds."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 96,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1239,
					"name": "fileActions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An array of file actions that will be available to your users at runtime.\nThese actions will be activated in addition to default actions. If you don't\nwant default file actions to be enabled, see `disableDefaultFileActions` prop."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 79,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1237,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "List of files that will be displayed in the main container. The provided value\n**must** be an array, where each element is either `null` or an object that\nsatisfies the `FileData` type. If an element is `null`, a loading placeholder\nwill be displayed in its place."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 64,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 94,
						"name": "FileArray"
					}
				},
				{
					"id": 1238,
					"name": "folderChain",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The current folder hierarchy. This should be an array of `files`, every\nelement should either be `null` or an object of `FileData` type. The first\nelement should represent the top-level directory, and the last element\nshould be the current folder."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 72,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 94,
								"name": "FileArray"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1250,
					"name": "iconComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon component that will be used in this instance of Chonky. Note that this\nwill only affect the current instance of Chonky. If you wanna set the icon\ncomponent for all Chonky instances, use the global config."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 148,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 66,
								"name": "ChonkyIconProps"
							}
						],
						"name": "ElementType"
					}
				},
				{
					"id": 1236,
					"name": "instanceId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An ID used to identify this particular Chonky instance. Useful when there are\nmultiple Chonky instances on the same page, and they need to interact with\neach other. When no instance ID is provided, a random hash is used in its place.\nNote that instance ID should remain static. Any changes to \"instanceId\" after\ninitial FileBrowser mount will be ignored."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 56,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1240,
					"name": "onFileAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An action handler that will be called every time a file action is dispatched."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 84,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 195,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1251,
										"name": "ChonkyActionUnion"
									}
								],
								"name": "GenericFileActionHandler"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1241,
					"name": "thumbnailGenerator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The function that determines the thumbnail image URL for a file. It gets a file\nobject as the input, and should return a `string` or `null`. It can also\nreturn a promise that resolves into a `string` or `null`."
					},
					"sources": [
						{
							"fileName": "src/types/file-browser.types.ts",
							"line": 91,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 227,
								"name": "ThumbnailGenerator"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1249,
						1248,
						1247,
						1244,
						1245,
						1246,
						1243,
						1242,
						1239,
						1237,
						1238,
						1250,
						1236,
						1240,
						1241
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file-browser.types.ts",
					"line": 48,
					"character": 33
				}
			]
		},
		{
			"id": 1465,
			"name": "FileContextMenuProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileContextMenu.tsx",
					"line": 18,
					"character": 37
				}
			]
		},
		{
			"id": 72,
			"name": "FileData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 92,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 93,
							"name": "property",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 87,
					"name": "childrenCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 22,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 88,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 25,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 84,
					"name": "dndOpenable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 18,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 82,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 83,
					"name": "droppable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 75,
					"name": "ext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 8,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 91,
					"name": "folderChainIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 28,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1,
										"name": "ChonkyIconName"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 89,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 26,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "ChonkyIconName"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 73,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 6,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 76,
					"name": "isDir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 10,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 79,
					"name": "isEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 13,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 77,
					"name": "isHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 78,
					"name": "isSymlink",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 86,
					"name": "modDate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Date"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 74,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 80,
					"name": "openable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 81,
					"name": "selectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 85,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 20,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 90,
					"name": "thumbnailUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 27,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						87,
						88,
						84,
						82,
						83,
						75,
						91,
						89,
						73,
						76,
						79,
						77,
						78,
						86,
						74,
						80,
						81,
						85,
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file.types.ts",
					"line": 5,
					"character": 25
				}
			]
		},
		{
			"id": 1676,
			"name": "FileEntryNameProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1678,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntryName.tsx",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1677,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntryName.tsx",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1678,
						1677
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntryName.tsx",
					"line": 14,
					"character": 35
				}
			]
		},
		{
			"id": 1577,
			"name": "FileEntryPreviewProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1578,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryPreview.tsx",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1580,
					"name": "dndState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryPreview.tsx",
							"line": 30,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 1475,
						"name": "DndEntryState"
					}
				},
				{
					"id": 1579,
					"name": "entryState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryPreview.tsx",
							"line": 29,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 1581,
						"name": "FileEntryState"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1578,
						1580,
						1579
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 27,
					"character": 38
				}
			]
		},
		{
			"id": 1479,
			"name": "FileEntryProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1483,
					"name": "dndState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 1475,
						"name": "DndEntryState"
					}
				},
				{
					"id": 1480,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1482,
					"name": "focused",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1481,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/file-list.types.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1483,
						1480,
						1482,
						1481
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/file-list.types.ts",
					"line": 11,
					"character": 31
				}
			]
		},
		{
			"id": 63,
			"name": "FileIconData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 65,
					"name": "colorCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 94,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 64,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/icons.types.ts",
							"line": 93,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "ChonkyIconName"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						65,
						64
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/icons.types.ts",
					"line": 92,
					"character": 29
				}
			]
		},
		{
			"id": 1670,
			"name": "FileListEmptyProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1672,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileListEmpty.tsx",
							"line": 15,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1671,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileListEmpty.tsx",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1672,
						1671
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileListEmpty.tsx",
					"line": 13,
					"character": 35
				}
			]
		},
		{
			"id": 1718,
			"name": "FileListGridProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1720,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 26,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1719,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 25,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1720,
						1719
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 24,
					"character": 34
				}
			]
		},
		{
			"id": 1736,
			"name": "FileListListProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1738,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/ListContainer.tsx",
							"line": 19,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1737,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/ListContainer.tsx",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1738,
						1737
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/ListContainer.tsx",
					"line": 17,
					"character": 34
				}
			]
		},
		{
			"id": 1743,
			"name": "FileListProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileList.tsx",
					"line": 25,
					"character": 30
				}
			]
		},
		{
			"id": 1660,
			"name": "FileNavbarProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileNavbar.tsx",
					"line": 17,
					"character": 32
				}
			]
		},
		{
			"id": 1566,
			"name": "FileThumbnailProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1567,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileThumbnail.tsx",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1568,
					"name": "thumbnailUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileThumbnail.tsx",
							"line": 15,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1567,
						1568
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileThumbnail.tsx",
					"line": 13,
					"character": 35
				}
			]
		},
		{
			"id": 1668,
			"name": "FileToolbarProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileToolbar.tsx",
					"line": 11,
					"character": 33
				}
			]
		},
		{
			"id": 1652,
			"name": "FolderChainButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1654,
					"name": "current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FolderChainButton.tsx",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1653,
					"name": "first",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FolderChainButton.tsx",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1655,
					"name": "item",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FolderChainButton.tsx",
							"line": 21,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1467,
						"name": "FolderChainItem"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1654,
						1653,
						1655
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FolderChainButton.tsx",
					"line": 18,
					"character": 39
				}
			]
		},
		{
			"id": 1467,
			"name": "FolderChainItem",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1469,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FileNavbar-hooks.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1468,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FileNavbar-hooks.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1470,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/FileNavbar-hooks.ts",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1471,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1472,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1469,
						1468,
						1470
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FileNavbar-hooks.ts",
					"line": 11,
					"character": 32
				}
			]
		},
		{
			"id": 1721,
			"name": "GridConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1723,
					"name": "columnCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 31,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1726,
					"name": "columnWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 34,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1724,
					"name": "gutter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 32,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1722,
					"name": "rowCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 30,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1725,
					"name": "rowHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/GridContainer.tsx",
							"line": 33,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1723,
						1726,
						1724,
						1722,
						1725
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 29,
					"character": 20
				}
			]
		},
		{
			"id": 1428,
			"name": "HotkeyListenerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1429,
					"name": "fileActionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/HotkeyListener.tsx",
							"line": 16,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1429
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/HotkeyListener.tsx",
					"line": 15,
					"character": 36
				}
			]
		},
		{
			"id": 1539,
			"name": "KeyboardClickEvent",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1542,
					"name": "altKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1543,
					"name": "ctrlKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1540,
					"name": "enterKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1544,
					"name": "shiftKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1541,
					"name": "spaceKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1542,
						1543,
						1540,
						1544,
						1541
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 19,
					"character": 35
				}
			]
		},
		{
			"id": 477,
			"name": "KeyboardClickFilePayload",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 482,
					"name": "altKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 19,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 483,
					"name": "ctrlKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 480,
					"name": "enterKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 478,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 72,
						"name": "FileData"
					}
				},
				{
					"id": 479,
					"name": "fileDisplayIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 16,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 484,
					"name": "shiftKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 481,
					"name": "spaceKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						482,
						483,
						480,
						478,
						479,
						484,
						481
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 14,
					"character": 41
				}
			]
		},
		{
			"id": 1535,
			"name": "MouseClickEvent",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1536,
					"name": "altKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 13,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1537,
					"name": "ctrlKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1538,
					"name": "shiftKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1536,
						1537,
						1538
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 12,
					"character": 32
				}
			]
		},
		{
			"id": 470,
			"name": "MouseClickFilePayload",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 473,
					"name": "altKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 8,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 476,
					"name": "clickType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "single"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							}
						]
					}
				},
				{
					"id": 474,
					"name": "ctrlKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 9,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 471,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 72,
						"name": "FileData"
					}
				},
				{
					"id": 472,
					"name": "fileDisplayIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 7,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 475,
					"name": "shiftKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						473,
						476,
						474,
						471,
						472,
						475
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 5,
					"character": 38
				}
			]
		},
		{
			"id": 493,
			"name": "OpenFileContextMenuPayload",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 494,
					"name": "clientX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 46,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 495,
					"name": "clientY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 47,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 496,
					"name": "triggerFileId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 48,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						494,
						495,
						496
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 45,
					"character": 43
				}
			]
		},
		{
			"id": 490,
			"name": "OpenFilesPayload",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 492,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 42,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 72,
							"name": "FileData"
						}
					}
				},
				{
					"id": 491,
					"name": "targetFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 41,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 72,
						"name": "FileData"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						492,
						491
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 40,
					"character": 33
				}
			]
		},
		{
			"id": 964,
			"name": "SanitizeFiles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 965,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 966,
							"name": "mode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "stringLiteral",
								"value": "files"
							}
						},
						{
							"id": 967,
							"name": "rawArray",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 94,
										"name": "FileArray"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 968,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 970,
									"name": "errorMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 10,
											"character": 21
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 969,
									"name": "sanitizedArray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 9,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 94,
										"name": "FileArray"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										970,
										969
									]
								}
							],
							"sources": [
								{
									"fileName": "src/redux/files-transforms.ts",
									"line": 8,
									"character": 47
								}
							]
						}
					}
				},
				{
					"id": 971,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 972,
							"name": "mode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "stringLiteral",
								"value": "folderChain"
							}
						},
						{
							"id": 973,
							"name": "rawArray",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 94,
												"name": "FileArray"
											}
										],
										"name": "Nullable"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 974,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 976,
									"name": "errorMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 14,
											"character": 21
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 975,
									"name": "sanitizedArray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 13,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 94,
										"name": "FileArray"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										976,
										975
									]
								}
							],
							"sources": [
								{
									"fileName": "src/redux/files-transforms.ts",
									"line": 12,
									"character": 63
								}
							]
						}
					}
				},
				{
					"id": 977,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 978,
							"name": "mode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "stringLiteral",
								"value": "fileActions"
							}
						},
						{
							"id": 979,
							"name": "rawArray",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 980,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 982,
									"name": "errorMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 18,
											"character": 21
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 981,
									"name": "sanitizedArray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 17,
											"character": 22
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										982,
										981
									]
								}
							],
							"sources": [
								{
									"fileName": "src/redux/files-transforms.ts",
									"line": 16,
									"character": 56
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/files-transforms.ts",
					"line": 7,
					"character": 23
				}
			]
		},
		{
			"id": 212,
			"name": "SelectionModifiers",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 223,
					"name": "clearSelection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/selection.types.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 224,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types/selection.types.ts",
									"line": 8,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 213,
					"name": "selectFiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/selection.types.ts",
							"line": 6,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 214,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 215,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 216,
											"name": "fileIds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 217,
											"name": "reset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types/selection.types.ts",
									"line": 6,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 218,
					"name": "toggleSelection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/selection.types.ts",
							"line": 7,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 219,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 220,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 221,
											"name": "fileId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 222,
											"name": "exclusive",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types/selection.types.ts",
									"line": 7,
									"character": 20
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						223,
						213,
						218
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/selection.types.ts",
					"line": 5,
					"character": 35
				}
			]
		},
		{
			"id": 1709,
			"name": "SmartFileEntryProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1711,
					"name": "displayIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 24,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1710,
					"name": "fileId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 23,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1712,
					"name": "fileViewMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 25,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 107,
						"name": "FileViewMode"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1711,
						1710,
						1712
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry.tsx",
					"line": 22,
					"character": 36
				}
			]
		},
		{
			"id": 1648,
			"name": "SmartToolbarButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1649,
					"name": "fileActionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 111,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1649
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/ToolbarButton.tsx",
					"line": 110,
					"character": 40
				}
			]
		},
		{
			"id": 1458,
			"name": "SmartToolbarDropdownButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1459,
					"name": "fileActionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 81,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1460,
					"name": "onClickFollowUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 82,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1461,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1462,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1459,
						1460
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdownButton.tsx",
					"line": 80,
					"character": 48
				}
			]
		},
		{
			"id": 485,
			"name": "StartDragNDropPayload",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 488,
					"name": "draggedFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 27,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 72,
						"name": "FileData"
					}
				},
				{
					"id": 489,
					"name": "selectedFiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 28,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 72,
							"name": "FileData"
						}
					}
				},
				{
					"id": 487,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 26,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 486,
					"name": "sourceInstanceId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 25,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						488,
						489,
						487,
						486
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 24,
					"character": 38
				}
			]
		},
		{
			"id": 1702,
			"name": "StyleState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1744,
					"name": "dndCanDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileList.tsx",
							"line": 28,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1745,
					"name": "dndIsOverCurrent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileList.tsx",
							"line": 29,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1704,
					"name": "dndState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/ListEntry.tsx",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 1475,
						"name": "DndEntryState"
					}
				},
				{
					"id": 1703,
					"name": "entryState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/ListEntry.tsx",
							"line": 17,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 1581,
						"name": "FileEntryState"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1744,
						1745,
						1704,
						1703
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/ListEntry.tsx",
					"line": 16,
					"character": 20
				},
				{
					"fileName": "src/components/file-list/FileList.tsx",
					"line": 27,
					"character": 20
				}
			]
		},
		{
			"id": 1517,
			"name": "TextPlaceholderProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1519,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/TextPlaceholder.tsx",
							"line": 13,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1518,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/TextPlaceholder.tsx",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1519,
						1518
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/TextPlaceholder.tsx",
					"line": 11,
					"character": 37
				}
			]
		},
		{
			"id": 1635,
			"name": "ToolbarButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1639,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1636,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 19,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1646,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 26,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1647,
					"name": "dropdown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1640,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 23,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1,
										"name": "ChonkyIconName"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1641,
					"name": "iconOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1642,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 25,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1643,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1644,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1645,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLButtonElement"
															}
														],
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1637,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 20,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1638,
					"name": "tooltip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarButton.tsx",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1639,
						1636,
						1646,
						1647,
						1640,
						1641,
						1642,
						1637,
						1638
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/ToolbarButton.tsx",
					"line": 18,
					"character": 35
				}
			]
		},
		{
			"id": 1450,
			"name": "ToolbarDropdownButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1452,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1457,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1453,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 23,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1,
										"name": "ChonkyIconName"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1454,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1455,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1456,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1451,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/external/ToolbarDropdownButton.tsx",
							"line": 21,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1452,
						1457,
						1453,
						1454,
						1451
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdownButton.tsx",
					"line": 20,
					"character": 43
				}
			]
		},
		{
			"id": 1664,
			"name": "ToolbarInfoProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarInfo.tsx",
					"line": 18,
					"character": 33
				}
			]
		},
		{
			"id": 1666,
			"name": "ToolbarSearchProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarSearch.tsx",
					"line": 20,
					"character": 35
				}
			]
		},
		{
			"id": 1484,
			"name": "UseFileDropParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1485,
					"name": "file",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/dnd.ts",
							"line": 109,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				},
				{
					"id": 1486,
					"name": "forceDisableDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/util/dnd.ts",
							"line": 110,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1487,
					"name": "includeChildrenDrops",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/util/dnd.ts",
							"line": 111,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1485,
						1486,
						1487
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/dnd.ts",
					"line": 108,
					"character": 27
				}
			]
		},
		{
			"id": 504,
			"name": "ChangeSelectionPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 38,
					"character": 34
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 505,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 506,
							"name": "selection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/action-payloads.types.ts",
									"line": 38,
									"character": 48
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								506
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/action-payloads.types.ts",
							"line": 38,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 1251,
			"name": "ChonkyActionUnion",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file-browser.types.ts",
					"line": 43,
					"character": 29
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "ChonkyActions"
						}
					}
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "ChonkyActions"
					}
				}
			}
		},
		{
			"id": 1254,
			"name": "ChonkyConfig",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/util/default-config.ts",
					"line": 5,
					"character": 24
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1235,
						"name": "FileBrowserProps"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "fileActions"
							},
							{
								"type": "stringLiteral",
								"value": "onFileAction"
							},
							{
								"type": "stringLiteral",
								"value": "thumbnailGenerator"
							},
							{
								"type": "stringLiteral",
								"value": "doubleClickDelay"
							},
							{
								"type": "stringLiteral",
								"value": "disableSelection"
							},
							{
								"type": "stringLiteral",
								"value": "disableDefaultFileActions"
							},
							{
								"type": "stringLiteral",
								"value": "disableDragAndDrop"
							},
							{
								"type": "stringLiteral",
								"value": "disableDragAndDropProvider"
							},
							{
								"type": "stringLiteral",
								"value": "defaultSortActionId"
							},
							{
								"type": "stringLiteral",
								"value": "defaultFileViewActionId"
							},
							{
								"type": "stringLiteral",
								"value": "clearSelectionOnOutsideClick"
							},
							{
								"type": "stringLiteral",
								"value": "iconComponent"
							}
						]
					}
				],
				"name": "Pick"
			}
		},
		{
			"id": 278,
			"name": "ChonkyDispatch",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/redux.types.ts",
					"line": 93,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 237,
						"name": "RootState"
					},
					{
						"type": "reference",
						"id": 231,
						"name": "ChonkyThunkExtraArgument"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Action"
					}
				],
				"name": "ThunkDispatch"
			}
		},
		{
			"id": 1393,
			"name": "ChonkyDndFileEntryItem",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/dnd.types.ts",
					"line": 12,
					"character": 34
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "DragObjectWithType"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1394,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1395,
									"name": "payload",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/types/dnd.types.ts",
											"line": 13,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "StartDragNDropPayload"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1395
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/dnd.types.ts",
									"line": 12,
									"character": 57
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1753,
			"name": "ChonkyFileActionData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 51,
					"character": 32
				}
			],
			"type": {
				"type": "reference",
				"id": 193,
				"typeArguments": [
					{
						"type": "reference",
						"id": 1251,
						"name": "ChonkyActionUnion"
					}
				],
				"name": "MapFileActionsToData"
			}
		},
		{
			"id": 1334,
			"name": "ChonkyTheme",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 82,
					"character": 23
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"id": 1281,
					"name": "lightTheme"
				}
			}
		},
		{
			"id": 276,
			"name": "ChonkyThunk",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 277,
					"name": "ReturnType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/redux.types.ts",
					"line": 86,
					"character": 23
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "ReturnType",
						"default": {
							"type": "intrinsic",
							"name": "void"
						}
					},
					{
						"type": "reference",
						"id": 237,
						"name": "RootState"
					},
					{
						"type": "reference",
						"id": 231,
						"name": "ChonkyThunkExtraArgument"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Action"
					}
				],
				"name": "ThunkAction"
			}
		},
		{
			"id": 497,
			"name": "EndDragNDropPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 31,
					"character": 31
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 485,
						"name": "StartDragNDropPayload"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 498,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 500,
									"name": "copy",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/types/action-payloads.types.ts",
											"line": 33,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 499,
									"name": "destination",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/types/action-payloads.types.ts",
											"line": 32,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										500,
										499
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/action-payloads.types.ts",
									"line": 31,
									"character": 57
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 179,
			"name": "FileActionData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 180,
					"name": "Action",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 128,
						"name": "FileAction"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-handler.types.ts",
					"line": 6,
					"character": 26
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 181,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 183,
							"name": "action",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/action-handler.types.ts",
									"line": 8,
									"character": 10
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Action",
								"constraint": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						},
						{
							"id": 182,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/action-handler.types.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "id"
								},
								"objectType": {
									"type": "typeParameter",
									"name": "Action",
									"constraint": {
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								}
							}
						},
						{
							"id": 184,
							"name": "payload",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/action-handler.types.ts",
									"line": 9,
									"character": 11
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "__payloadType"
								},
								"objectType": {
									"type": "typeParameter",
									"name": "Action",
									"constraint": {
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								}
							}
						},
						{
							"id": 185,
							"name": "state",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/action-handler.types.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 186,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "stringLiteral",
											"value": "__extraStateType"
										},
										"objectType": {
											"type": "typeParameter",
											"name": "Action",
											"constraint": {
												"type": "reference",
												"id": 128,
												"name": "FileAction"
											}
										}
									}
								],
								"name": "FileActionState"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								183,
								182,
								184,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/action-handler.types.ts",
							"line": 6,
							"character": 55
						}
					]
				}
			}
		},
		{
			"id": 161,
			"name": "FileActionEffect",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 162,
					"name": "Action",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 128,
						"name": "FileAction"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 105,
					"character": 28
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 163,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 164,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 165,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 167,
													"name": "action",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 106,
															"character": 10
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "Action",
														"constraint": {
															"type": "reference",
															"id": 128,
															"name": "FileAction"
														},
														"default": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												},
												{
													"id": 172,
													"name": "getReduxState",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 110,
															"character": 17
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 173,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 174,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 237,
																		"name": "RootState"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "src/types/action.types.ts",
																	"line": 110,
																	"character": 18
																}
															]
														}
													}
												},
												{
													"id": 168,
													"name": "payload",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 107,
															"character": 11
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "stringLiteral",
															"value": "__payloadType"
														},
														"objectType": {
															"type": "typeParameter",
															"name": "Action",
															"constraint": {
																"type": "reference",
																"id": 128,
																"name": "FileAction"
															},
															"default": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													}
												},
												{
													"id": 171,
													"name": "reduxDispatch",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 109,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"id": 278,
														"name": "ChonkyDispatch"
													}
												},
												{
													"id": 169,
													"name": "state",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 108,
															"character": 9
														}
													],
													"type": {
														"type": "reference",
														"id": 186,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 170,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/types/action.types.ts",
																			"line": 108,
																			"character": 27
																		}
																	]
																}
															}
														],
														"name": "FileActionState"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														167,
														172,
														168,
														171,
														169
													]
												}
											],
											"sources": [
												{
													"fileName": "src/types/action.types.ts",
													"line": 105,
													"character": 70
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "MaybePromise"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 105,
							"character": 63
						}
					]
				}
			}
		},
		{
			"id": 1752,
			"name": "FileActionHandler",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 50,
					"character": 29
				}
			],
			"type": {
				"type": "reference",
				"id": 195,
				"typeArguments": [
					{
						"type": "reference",
						"id": 1251,
						"name": "ChonkyActionUnion"
					}
				],
				"name": "GenericFileActionHandler"
			}
		},
		{
			"id": 175,
			"name": "FileActionMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 113,
					"character": 25
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 176,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 177,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 178,
									"name": "actonId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 128,
								"name": "FileAction"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 113,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 203,
			"name": "FileActionMenuItem",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action-menus.types.ts",
					"line": 6,
					"character": 30
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 200,
						"name": "FileActionGroup"
					}
				]
			}
		},
		{
			"id": 186,
			"name": "FileActionState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 187,
					"name": "ExtraState",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-handler.types.ts",
					"line": 13,
					"character": 27
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 188,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 192,
									"name": "contextMenuTriggerFile",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "If this action was requested using the file context menu, this field will hold\nthe file that user right-clicked on to open the menu. If this action was not\ntriggered using the context menu or right click was not on any file, this will be\n`null`."
									},
									"sources": [
										{
											"fileName": "src/types/action-handler.types.ts",
											"line": 36,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								},
								{
									"id": 189,
									"name": "instanceId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The ID of the Chonky instance that dispatched this action. This is useful if\nyou're reusing the same action handler for multiple Chonky instances."
									},
									"sources": [
										{
											"fileName": "src/types/action-handler.types.ts",
											"line": 18,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 190,
									"name": "selectedFiles",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "All selected files at the time the action was requested. Note that this does not\nreflect the changes applied by action's selection transform, if one is defined."
									},
									"sources": [
										{
											"fileName": "src/types/action-handler.types.ts",
											"line": 23,
											"character": 17
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 72,
											"name": "FileData"
										}
									}
								},
								{
									"id": 191,
									"name": "selectedFilesForAction",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Selected files filtered using actions file filter. If not file filter is defined,\nthis is the same as `selectedFiles`. Note that this does not reflect the changes\napplied by action's selection transform, if one is defined."
									},
									"sources": [
										{
											"fileName": "src/types/action-handler.types.ts",
											"line": 29,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 72,
											"name": "FileData"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										192,
										189,
										190,
										191
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/action-handler.types.ts",
									"line": 13,
									"character": 68
								}
							]
						}
					},
					{
						"type": "typeParameter",
						"name": "ExtraState",
						"constraint": {
							"type": "intrinsic",
							"name": "object"
						},
						"default": {
							"type": "reference",
							"name": "AnyObject"
						}
					}
				]
			}
		},
		{
			"id": 94,
			"name": "FileArray",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file.types.ts",
					"line": 33,
					"character": 21
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 72,
							"name": "FileData"
						}
					],
					"name": "Nullable"
				}
			}
		},
		{
			"id": 1581,
			"name": "FileEntryState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 17,
					"character": 26
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1582,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1583,
							"name": "childrenCount",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 18,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1584,
							"name": "color",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1589,
							"name": "focused",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1585,
							"name": "icon",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1,
										"name": "ChonkyIconName"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1587,
							"name": "iconSpin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1588,
							"name": "selected",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1586,
							"name": "thumbnailUrl",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/file-list/GridEntryPreview.tsx",
									"line": 21,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1583,
								1584,
								1589,
								1585,
								1587,
								1588,
								1586
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/file-list/GridEntryPreview.tsx",
							"line": 17,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 95,
			"name": "FileFilter",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file.types.ts",
					"line": 34,
					"character": 22
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 96,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 97,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 98,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 34,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 103,
			"name": "FileIdTrueMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file.types.ts",
					"line": 37,
					"character": 25
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 104,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 105,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 106,
									"name": "fileId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "true"
									}
								],
								"name": "Undefinable"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 37,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 99,
			"name": "FileMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file.types.ts",
					"line": 36,
					"character": 19
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 100,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 101,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 102,
									"name": "fileId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/file.types.ts",
							"line": 36,
							"character": 21
						}
					]
				}
			}
		},
		{
			"id": 226,
			"name": "FileSelection",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/selection.types.ts",
					"line": 3,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"id": 103,
				"name": "FileIdTrueMap"
			}
		},
		{
			"id": 152,
			"name": "FileSelectionTransform",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action.types.ts",
					"line": 98,
					"character": 34
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 153,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 154,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 155,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 158,
													"name": "fileIds",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 100,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ReadonlyArray"
													}
												},
												{
													"id": 159,
													"name": "fileMap",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 101,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 99,
																"name": "FileMap"
															}
														],
														"name": "Readonly"
													}
												},
												{
													"id": 160,
													"name": "hiddenFileIds",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 102,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Set"
													}
												},
												{
													"id": 157,
													"name": "prevSelection",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/types/action.types.ts",
															"line": 99,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Set"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														158,
														159,
														160,
														157
													]
												}
											],
											"sources": [
												{
													"fileName": "src/types/action.types.ts",
													"line": 98,
													"character": 43
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/action.types.ts",
							"line": 98,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 124,
			"name": "FileSortKeySelector",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/sort.types.ts",
					"line": 5,
					"character": 31
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 125,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 127,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 72,
												"name": "FileData"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/sort.types.ts",
							"line": 5,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 120,
			"name": "FileViewConfig",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file-view.types.ts",
					"line": 18,
					"character": 26
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 111,
						"name": "FileViewConfigList"
					},
					{
						"type": "reference",
						"id": 115,
						"name": "FileViewConfigGrid"
					}
				]
			}
		},
		{
			"id": 115,
			"name": "FileViewConfigGrid",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file-view.types.ts",
					"line": 12,
					"character": 30
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 116,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 119,
							"name": "entryHeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/file-view.types.ts",
									"line": 15,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 118,
							"name": "entryWidth",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/file-view.types.ts",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 117,
							"name": "mode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/file-view.types.ts",
									"line": 13,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 109,
										"name": "Compact"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Grid"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								119,
								118,
								117
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/file-view.types.ts",
							"line": 12,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 111,
			"name": "FileViewConfigList",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/file-view.types.ts",
					"line": 7,
					"character": 30
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 112,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 114,
							"name": "entryHeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/file-view.types.ts",
									"line": 9,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 113,
							"name": "mode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/file-view.types.ts",
									"line": 8,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 108,
								"name": "List"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								114,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/file-view.types.ts",
							"line": 7,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 195,
			"name": "GenericFileActionHandler",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 196,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-handler.types.ts",
					"line": 41,
					"character": 36
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 197,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 198,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 199,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "MapFileActionsToData"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/action-handler.types.ts",
							"line": 41,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 1559,
			"name": "KeyboardClickEventHandler",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 26,
					"character": 37
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1560,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1561,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1562,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1539,
										"name": "KeyboardClickEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 26,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 193,
			"name": "MapFileActionsToData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 194,
					"name": "U",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"sources": [
				{
					"fileName": "src/types/action-handler.types.ts",
					"line": 39,
					"character": 32
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "typeParameter",
					"name": "U"
				},
				"extendsType": {
					"type": "reference",
					"name": "FileAction"
				},
				"trueType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "U"
						}
					],
					"name": "FileActionData"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 1555,
			"name": "MouseClickEventHandler",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 17,
					"character": 34
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1556,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1557,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1558,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 1535,
										"name": "MouseClickEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/internal/ClickableWrapper.tsx",
							"line": 17,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 501,
			"name": "MoveFilesPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/action-payloads.types.ts",
					"line": 36,
					"character": 28
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 497,
						"name": "EndDragNDropPayload"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 502,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 503,
									"name": "files",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/types/action-payloads.types.ts",
											"line": 36,
											"character": 60
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 72,
											"name": "FileData"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										503
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/action-payloads.types.ts",
									"line": 36,
									"character": 52
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 208,
			"name": "OptionMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/options.types.ts",
					"line": 1,
					"character": 21
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 209,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 210,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 211,
									"name": "optionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/options.types.ts",
							"line": 1,
							"character": 23
						}
					]
				}
			}
		},
		{
			"id": 237,
			"name": "RootState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/redux.types.ts",
					"line": 15,
					"character": 21
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 238,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 254,
							"name": "cleanFileIds",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 38,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 272,
							"name": "clearSelectionOnOutsideClick",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 68,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 275,
							"name": "contextMenuConfig",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 75,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 204,
										"name": "ContextMenuConfig"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 246,
							"name": "contextMenuItems",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 26,
									"character": 20
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 203,
									"name": "FileActionMenuItem"
								}
							}
						},
						{
							"id": 274,
							"name": "contextMenuMounted",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 74,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 271,
							"name": "disableDragAndDrop",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 67,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 264,
							"name": "disableSelection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 52,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 257,
							"name": "displayFileIds",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 43,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"name": "Nullable"
								}
							}
						},
						{
							"id": 270,
							"name": "doubleClickDelay",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 66,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 240,
							"name": "externalFileActionHandler",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 18,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 195,
										"typeArguments": [
											{
												"type": "reference",
												"id": 128,
												"name": "FileAction"
											}
										],
										"name": "GenericFileActionHandler"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 244,
							"name": "fileActionIds",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 24,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 243,
							"name": "fileActionMap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 23,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 175,
								"name": "FileActionMap"
							}
						},
						{
							"id": 242,
							"name": "fileActionsErrorMessages",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 22,
									"character": 28
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 253,
							"name": "fileIds",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 37,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"name": "Nullable"
								}
							}
						},
						{
							"id": 252,
							"name": "fileMap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 99,
								"name": "FileMap"
							}
						},
						{
							"id": 265,
							"name": "fileViewConfig",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 55,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 120,
								"name": "FileViewConfig"
							}
						},
						{
							"id": 251,
							"name": "filesErrorMessages",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 35,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 258,
							"name": "focusSearchInput",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 46,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 259,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 260,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/types/redux.types.ts",
													"line": 46,
													"character": 31
												}
											]
										}
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 249,
							"name": "folderChain",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 94,
								"name": "FileArray"
							}
						},
						{
							"id": 248,
							"name": "folderChainErrorMessages",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 30,
									"character": 28
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 256,
							"name": "hiddenFileIdMap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 42,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 103,
								"name": "FileIdTrueMap"
							}
						},
						{
							"id": 239,
							"name": "instanceId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 16,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 273,
							"name": "lastClickIndex",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 71,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 268,
							"name": "optionMap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 62,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 208,
								"name": "OptionMap"
							}
						},
						{
							"id": 241,
							"name": "rawFileActions",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 21,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 250,
							"name": "rawFiles",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 94,
										"name": "FileArray"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 247,
							"name": "rawFolderChain",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 29,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 94,
												"name": "FileArray"
											}
										],
										"name": "Nullable"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 262,
							"name": "searchMode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 48,
									"character": 14
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "currentFolder"
							}
						},
						{
							"id": 261,
							"name": "searchString",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 47,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 263,
							"name": "selectionMap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 51,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "FileSelection"
							}
						},
						{
							"id": 266,
							"name": "sortActionId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 267,
							"name": "sortOrder",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 59,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 121,
								"name": "SortOrder"
							}
						},
						{
							"id": 255,
							"name": "sortedFileIds",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 41,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"name": "Nullable"
								}
							}
						},
						{
							"id": 269,
							"name": "thumbnailGenerator",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 65,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 227,
										"name": "ThumbnailGenerator"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 245,
							"name": "toolbarItems",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/redux.types.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 203,
									"name": "FileActionMenuItem"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								254,
								272,
								275,
								246,
								274,
								271,
								264,
								257,
								270,
								240,
								244,
								243,
								242,
								253,
								252,
								265,
								251,
								258,
								249,
								248,
								256,
								239,
								273,
								268,
								241,
								250,
								247,
								262,
								261,
								263,
								266,
								267,
								255,
								269,
								245
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/redux.types.ts",
							"line": 15,
							"character": 23
						}
					]
				}
			}
		},
		{
			"id": 227,
			"name": "ThumbnailGenerator",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/thumbnails.types.ts",
					"line": 5,
					"character": 30
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 228,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 229,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 230,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Nilable"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Nilable"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types/thumbnails.types.ts",
							"line": 5,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 1662,
			"name": "ToolbarDropdownProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdown.tsx",
					"line": 15,
					"character": 32
				}
			],
			"type": {
				"type": "reference",
				"id": 200,
				"name": "FileActionGroup"
			}
		},
		{
			"id": 1278,
			"name": "AudioExtensions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 275,
					"character": 28
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "[\n    '3gpp',\n    'aac',\n    'adp',\n    'aif',\n    'aifc',\n    'aiff',\n    'au',\n    'caf',\n    'dra',\n    'dts',\n    'dtshd',\n    'ecelp4800',\n    'ecelp7470',\n    'ecelp9600',\n    'eol',\n    'flac',\n    'kar',\n    'lvp',\n    'm2a',\n    'm3a',\n    'm3u',\n    'm4a',\n    'm4a',\n    'mid',\n    'midi',\n    'mka',\n    'mp2',\n    'mp2a',\n    'mp3',\n    'mp3',\n    'mp4a',\n    'mpga',\n    'oga',\n    'ogg',\n    'pya',\n    'ra',\n    'ra',\n    'ram',\n    'rip',\n    'rmi',\n    'rmp',\n    's3m',\n    'sil',\n    'snd',\n    'spx',\n    'uva',\n    'uvva',\n    'wav',\n    'wav',\n    'wav',\n    'wax',\n    'weba',\n    'wma',\n    'xm',\n]"
		},
		{
			"id": 1382,
			"name": "ChonkyBusinessLogic",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/ChonkyBusinessLogic.tsx",
					"line": 102,
					"character": 32
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1235,
										"name": "FileBrowserProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1223,
												"name": "FileBrowserHandle"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				],
				"name": "MemoExoticComponent"
			},
			"defaultValue": "React.memo(ChonkyBusinessLogicInner)"
		},
		{
			"id": 1381,
			"name": "ChonkyBusinessLogicInner",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/ChonkyBusinessLogic.tsx",
					"line": 26,
					"character": 37
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1235,
								"name": "FileBrowserProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1223,
										"name": "FileBrowserHandle"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "React.forwardRef<\n    FileBrowserHandle,\n    FileBrowserProps\n>((props, ref) => {\n    // ==== Update Redux state\n    useDTE(thunkUpdateRawFiles, props.files ?? initialRootState.rawFiles);\n    useDTE(thunkUpdateRawFolderChain, props.folderChain);\n    useDTE(\n        thunkUpdateRawFileActions,\n        getValueOrFallback(props.fileActions, defaultConfig.fileActions),\n        getValueOrFallback(\n            props.disableDefaultFileActions,\n            defaultConfig.disableDefaultFileActions\n        )\n    );\n    useDTE(\n        reduxActions.setExternalFileActionHandler,\n        getValueOrFallback(props.onFileAction, defaultConfig.onFileAction)\n    );\n    useDTE(\n        reduxActions.setSelectionDisabled,\n        getValueOrFallback(\n            props.disableSelection,\n            defaultConfig.disableSelection,\n            'boolean'\n        )\n    );\n    useDTE(\n        thunkActivateSortAction,\n        getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId)\n    );\n    useDTE(\n        thunkUpdateDefaultFileViewActionId,\n        getValueOrFallback(\n            props.defaultFileViewActionId,\n            defaultConfig.defaultFileViewActionId,\n            'string'\n        )\n    );\n\n    useDTE(\n        reduxActions.setThumbnailGenerator,\n        getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator)\n    );\n    useDTE(\n        reduxActions.setDoubleClickDelay,\n        getValueOrFallback(\n            props.doubleClickDelay,\n            defaultConfig.doubleClickDelay,\n            'number'\n        )\n    );\n    useDTE(\n        reduxActions.setDisableDragAndDrop,\n        getValueOrFallback(\n            props.disableDragAndDrop,\n            defaultConfig.disableDragAndDrop,\n            'boolean'\n        )\n    );\n    useDTE(\n        reduxActions.setClearSelectionOnOutsideClick,\n        getValueOrFallback(\n            props.clearSelectionOnOutsideClick,\n            defaultConfig.clearSelectionOnOutsideClick,\n            'boolean'\n        )\n    );\n\n    // ==== Setup the imperative handle for external use\n    useFileBrowserHandle(ref);\n\n    return null;\n})"
		},
		{
			"id": 1396,
			"name": "ChonkyDndFileEntryType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/types/dnd.types.ts",
					"line": 15,
					"character": 35
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "dnd-chonky-file-entry"
			},
			"defaultValue": "\"dnd-chonky-file-entry\""
		},
		{
			"id": 1271,
			"name": "ChonkyIconContext",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 16,
					"character": 30
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 66,
								"name": "ChonkyIconProps"
							}
						],
						"name": "ElementType"
					}
				],
				"name": "Context"
			},
			"defaultValue": "createContext<ElementType<ChonkyIconProps>>(\n    ChonkyIconPlaceholder\n)"
		},
		{
			"id": 1280,
			"name": "ColorsDark",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 406,
					"character": 23
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "[\n    '#777',\n    '#8f3d3d',\n    '#8f443d',\n    '#8f4b3d',\n    '#8f523d',\n    '#8f583d',\n    '#8f5f3d',\n    '#8f663d',\n    '#8f6d3d',\n    '#8f743d',\n    '#8f7a3d',\n    '#8f813d',\n    '#8f883d',\n    '#8f8f3d',\n    '#888f3d',\n    '#818f3d',\n    '#7a8f3d',\n    '#748f3d',\n    '#6d8f3d',\n    '#668f3d',\n    '#5f8f3d',\n    '#588f3d',\n    '#528f3d',\n    '#4b8f3d',\n    '#448f3d',\n    '#3d8f3d',\n    '#3d8f44',\n    '#3d8f4b',\n    '#3d8f52',\n    '#3d8f58',\n    '#3d8f5f',\n    '#3d8f66',\n    '#3d8f6d',\n    '#3d8f74',\n    '#3d8f7a',\n    '#3d8f81',\n    '#3d8f88',\n    '#3d8f8f',\n    '#3d888f',\n    '#3d818f',\n    '#3d7a8f',\n    '#3d748f',\n    '#3d6d8f',\n    '#3d668f',\n    '#3d5f8f',\n    '#3d588f',\n    '#3d528f',\n    '#3d4b8f',\n    '#3d448f',\n    '#3d3d8f',\n    '#443d8f',\n    '#4b3d8f',\n    '#523d8f',\n    '#583d8f',\n    '#5f3d8f',\n    '#663d8f',\n    '#6d3d8f',\n    '#743d8f',\n    '#7a3d8f',\n    '#813d8f',\n    '#883d8f',\n    '#8f3d8f',\n    '#8f3d88',\n    '#8f3d81',\n    '#8f3d7a',\n    '#8f3d74',\n    '#8f3d6d',\n    '#8f3d66',\n    '#8f3d5f',\n    '#8f3d58',\n    '#8f3d52',\n    '#8f3d4b',\n    '#8f3d44',\n]"
		},
		{
			"id": 1279,
			"name": "ColorsLight",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 331,
					"character": 24
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "[\n    '#bbbbbb',\n    '#d65c5c',\n    '#d6665c',\n    '#d6705c',\n    '#d67a5c',\n    '#d6855c',\n    '#d68f5c',\n    '#d6995c',\n    '#d6a35c',\n    '#d6ad5c',\n    '#d6b85c',\n    '#d6c25c',\n    '#d6cc5c',\n    '#d6d65c',\n    '#ccd65c',\n    '#c2d65c',\n    '#b8d65c',\n    '#add65c',\n    '#a3d65c',\n    '#99d65c',\n    '#8fd65c',\n    '#85d65c',\n    '#7ad65c',\n    '#70d65c',\n    '#66d65c',\n    '#5cd65c',\n    '#5cd666',\n    '#5cd670',\n    '#5cd67a',\n    '#5cd685',\n    '#5cd68f',\n    '#5cd699',\n    '#5cd6a3',\n    '#5cd6ad',\n    '#5cd6b8',\n    '#5cd6c2',\n    '#5cd6cc',\n    '#5cd6d6',\n    '#5cccd6',\n    '#5cc2d6',\n    '#5cb8d6',\n    '#5cadd6',\n    '#5ca3d6',\n    '#5c99d6',\n    '#5c8fd6',\n    '#5c85d6',\n    '#5c7ad6',\n    '#5c70d6',\n    '#5c66d6',\n    '#5c5cd6',\n    '#665cd6',\n    '#705cd6',\n    '#7a5cd6',\n    '#855cd6',\n    '#8f5cd6',\n    '#995cd6',\n    '#a35cd6',\n    '#ad5cd6',\n    '#b85cd6',\n    '#c25cd6',\n    '#cc5cd6',\n    '#d65cd6',\n    '#d65ccc',\n    '#d65cc2',\n    '#d65cb8',\n    '#d65cad',\n    '#d65ca3',\n    '#d65c99',\n    '#d65c8f',\n    '#d65c85',\n    '#d65c7a',\n    '#d65c70',\n    '#d65c66',\n]"
		},
		{
			"id": 1683,
			"name": "CompactEntry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/CompactEntry.tsx",
					"line": 12,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1479,
						"name": "FileEntryProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n\n        const fileSizeString = FileHelper.getReadableDate(file);\n        const fileDateString = FileHelper.getReadableFileSize(file);\n\n        const classes = useStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={entryState.icon}\n                        spin={entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div className={classes.listFileEntryDescription}>\n                    <div\n                        className={classes.listFileEntryName}\n                        title={file ? file.name : undefined}\n                    >\n                        <FileEntryName file={file} />\n                    </div>\n                    <div className={classes.listFileEntryProperties}>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileSizeString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={5} maxLength={15} />\n                            )}\n                        </div>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileDateString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={10} maxLength={20} />\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chonky-file-entry-outline\"></div>\n                <div className=\"chonky-file-entry-selection\"></div>\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 664,
			"name": "DefaultFileActions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/action-definitions/index.ts",
					"line": 23,
					"character": 31
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 665,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 669,
												"name": "fileFilter",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 22,
														"character": 22
													}
												],
												"type": {
													"type": "reference",
													"id": 446,
													"name": "isOpenable"
												},
												"defaultValue": "FileHelper.isOpenable"
											},
											{
												"id": 667,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 20,
														"character": 19
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "enter"
														}
													]
												},
												"defaultValue": "['enter']"
											},
											{
												"id": 666,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 19,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "open_selection"
												},
												"defaultValue": "\"open_selection\""
											},
											{
												"id": 668,
												"name": "requiresSelection",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 21,
														"character": 29
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "true"
												},
												"defaultValue": "true"
											},
											{
												"id": 670,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 673,
														"name": "contextMenu",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 26,
																"character": 27
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 674,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 27,
																"character": 21
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Actions"
														},
														"defaultValue": "\"Actions\""
													},
													{
														"id": 675,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 28,
																"character": 20
															}
														],
														"type": {
															"type": "reference",
															"id": 8,
															"name": "openFiles"
														},
														"defaultValue": "ChonkyIconName.openFiles"
													},
													{
														"id": 671,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 24,
																"character": 20
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Open selection"
														},
														"defaultValue": "\"Open selection\""
													},
													{
														"id": 672,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 25,
																"character": 23
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															673,
															674,
															675,
															671,
															672
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 23,
														"character": 18
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													669,
													667,
													666,
													668
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													670
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 676,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 678,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 45,
														"character": 15
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "ctrl+a"
														}
													]
												},
												"defaultValue": "['ctrl+a']"
											},
											{
												"id": 677,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 44,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "select_all_files"
												},
												"defaultValue": "\"select_all_files\""
											},
											{
												"id": 685,
												"name": "selectionTransform",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 53,
														"character": 26
													}
												],
												"type": {
													"type": "reference",
													"id": 152,
													"name": "FileSelectionTransform"
												},
												"defaultValue": "(({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map((fileId) => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform"
											},
											{
												"id": 679,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 682,
														"name": "contextMenu",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 49,
																"character": 23
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 683,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 50,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Actions"
														},
														"defaultValue": "\"Actions\""
													},
													{
														"id": 684,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 51,
																"character": 16
															}
														],
														"type": {
															"type": "reference",
															"id": 14,
															"name": "selectAllFiles"
														},
														"defaultValue": "ChonkyIconName.selectAllFiles"
													},
													{
														"id": 680,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 47,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Select all files"
														},
														"defaultValue": "\"Select all files\""
													},
													{
														"id": 681,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 48,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															682,
															683,
															684,
															680,
															681
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 46,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													678,
													677,
													685
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													679
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 686,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 688,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 68,
														"character": 15
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "escape"
														}
													]
												},
												"defaultValue": "['escape']"
											},
											{
												"id": 687,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 67,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "clear_selection"
												},
												"defaultValue": "\"clear_selection\""
											},
											{
												"id": 695,
												"name": "selectionTransform",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 76,
														"character": 26
													}
												],
												"type": {
													"type": "reference",
													"id": 152,
													"name": "FileSelectionTransform"
												},
												"defaultValue": "(({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform"
											},
											{
												"id": 689,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 692,
														"name": "contextMenu",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 72,
																"character": 23
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 693,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 73,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Actions"
														},
														"defaultValue": "\"Actions\""
													},
													{
														"id": 694,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 74,
																"character": 16
															}
														],
														"type": {
															"type": "reference",
															"id": 15,
															"name": "clearSelection"
														},
														"defaultValue": "ChonkyIconName.clearSelection"
													},
													{
														"id": 690,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 70,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Clear selection"
														},
														"defaultValue": "\"Clear selection\""
													},
													{
														"id": 691,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 71,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															692,
															693,
															694,
															690,
															691
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 69,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													688,
													687,
													695
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													689
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 696,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 697,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 85,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "enable_list_view"
												},
												"defaultValue": "\"enable_list_view\""
											},
											{
												"id": 701,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 704,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 93,
																"character": 16
															}
														],
														"type": {
															"type": "reference",
															"id": 20,
															"name": "list"
														},
														"defaultValue": "ChonkyIconName.list"
													},
													{
														"id": 705,
														"name": "iconOnly",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 94,
																"character": 20
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 702,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 91,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Switch to List view"
														},
														"defaultValue": "\"Switch to List view\""
													},
													{
														"id": 703,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 92,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															704,
															705,
															702,
															703
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 90,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"id": 698,
												"name": "fileViewConfig",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 700,
														"name": "entryHeight",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 88,
																"character": 23
															}
														],
														"type": {
															"type": "unknown",
															"name": "30"
														},
														"defaultValue": "30"
													},
													{
														"id": 699,
														"name": "mode",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 87,
																"character": 16
															}
														],
														"type": {
															"type": "reference",
															"id": 108,
															"name": "List"
														},
														"defaultValue": "FileViewMode.List"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															700,
															699
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 86,
														"character": 22
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													697
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													701,
													698
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 706,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 707,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 120,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "enable_grid_view"
												},
												"defaultValue": "\"enable_grid_view\""
											},
											{
												"id": 712,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 715,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 125,
																"character": 16
															}
														],
														"type": {
															"type": "reference",
															"id": 22,
															"name": "smallThumbnail"
														},
														"defaultValue": "ChonkyIconName.smallThumbnail"
													},
													{
														"id": 716,
														"name": "iconOnly",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 126,
																"character": 20
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 713,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 123,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Switch to Grid view"
														},
														"defaultValue": "\"Switch to Grid view\""
													},
													{
														"id": 714,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 124,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															715,
															716,
															713,
															714
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 122,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"id": 708,
												"name": "fileViewConfig",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 711,
														"name": "entryHeight",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 121,
																"character": 79
															}
														],
														"type": {
															"type": "unknown",
															"name": "130"
														},
														"defaultValue": "130"
													},
													{
														"id": 710,
														"name": "entryWidth",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 121,
																"character": 61
															}
														],
														"type": {
															"type": "unknown",
															"name": "165"
														},
														"defaultValue": "165"
													},
													{
														"id": 709,
														"name": "mode",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 121,
																"character": 30
															}
														],
														"type": {
															"type": "reference",
															"id": 110,
															"name": "Grid"
														},
														"defaultValue": "FileViewMode.Grid"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															711,
															710,
															709
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 121,
														"character": 22
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													707
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													712,
													708
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 717,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 718,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 133,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "sort_files_by_name"
												},
												"defaultValue": "\"sort_files_by_name\""
											},
											{
												"id": 719,
												"name": "sortKeySelector",
												"kind": 64,
												"kindString": "Function",
												"flags": {
													"isExported": true
												},
												"signatures": [
													{
														"id": 720,
														"name": "sortKeySelector",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {
															"isExported": true
														},
														"parameters": [
															{
																"id": 721,
																"name": "file",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {
																	"isExported": true
																},
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 72,
																			"name": "FileData"
																		}
																	],
																	"name": "Nullable"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "undefined"
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 134,
														"character": 23
													}
												]
											},
											{
												"id": 722,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 725,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 139,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Options"
														},
														"defaultValue": "\"Options\""
													},
													{
														"id": 723,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 137,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Sort by name"
														},
														"defaultValue": "\"Sort by name\""
													},
													{
														"id": 724,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 138,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															725,
															723,
															724
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 136,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													718
												]
											},
											{
												"title": "Functions",
												"kind": 64,
												"children": [
													719
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													722
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 726,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 727,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 146,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "sort_files_by_size"
												},
												"defaultValue": "\"sort_files_by_size\""
											},
											{
												"id": 728,
												"name": "sortKeySelector",
												"kind": 64,
												"kindString": "Function",
												"flags": {
													"isExported": true
												},
												"signatures": [
													{
														"id": 729,
														"name": "sortKeySelector",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {
															"isExported": true
														},
														"parameters": [
															{
																"id": 730,
																"name": "file",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {
																	"isExported": true
																},
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 72,
																			"name": "FileData"
																		}
																	],
																	"name": "Nullable"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "undefined"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 147,
														"character": 23
													}
												]
											},
											{
												"id": 731,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 734,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 151,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Options"
														},
														"defaultValue": "\"Options\""
													},
													{
														"id": 732,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 149,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Sort by size"
														},
														"defaultValue": "\"Sort by size\""
													},
													{
														"id": 733,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 150,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															734,
															732,
															733
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 148,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													727
												]
											},
											{
												"title": "Functions",
												"kind": 64,
												"children": [
													728
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													731
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 735,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 736,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 158,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "sort_files_by_date"
												},
												"defaultValue": "\"sort_files_by_date\""
											},
											{
												"id": 737,
												"name": "sortKeySelector",
												"kind": 64,
												"kindString": "Function",
												"flags": {
													"isExported": true
												},
												"signatures": [
													{
														"id": 738,
														"name": "sortKeySelector",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {
															"isExported": true
														},
														"parameters": [
															{
																"id": 739,
																"name": "file",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {
																	"isExported": true
																},
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 72,
																			"name": "FileData"
																		}
																	],
																	"name": "Nullable"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "undefined"
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"name": "Date"
																}
															]
														}
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 159,
														"character": 23
													}
												]
											},
											{
												"id": 740,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 743,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 164,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Options"
														},
														"defaultValue": "\"Options\""
													},
													{
														"id": 741,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 162,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Sort by date"
														},
														"defaultValue": "\"Sort by date\""
													},
													{
														"id": 742,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 163,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															743,
															741,
															742
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 161,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													736
												]
											},
											{
												"title": "Functions",
												"kind": 64,
												"children": [
													737
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													740
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 744,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 746,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 172,
														"character": 15
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "ctrl+h"
														}
													]
												},
												"defaultValue": "['ctrl+h']"
											},
											{
												"id": 745,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 171,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "toggle_hidden_files"
												},
												"defaultValue": "\"toggle_hidden_files\""
											},
											{
												"id": 750,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 753,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 180,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Options"
														},
														"defaultValue": "\"Options\""
													},
													{
														"id": 751,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 178,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Show hidden files"
														},
														"defaultValue": "\"Show hidden files\""
													},
													{
														"id": 752,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 179,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															753,
															751,
															752
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 177,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"id": 747,
												"name": "option",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 749,
														"name": "defaultValue",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 175,
																"character": 24
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 748,
														"name": "id",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 174,
																"character": 14
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "show_hidden_files"
														},
														"defaultValue": "\"show_hidden_files\""
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															749,
															748
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 173,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													746,
													745
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													750,
													747
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 754,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 755,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 188,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "toggle_show_folders_first"
												},
												"defaultValue": "\"toggle_show_folders_first\""
											},
											{
												"id": 759,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 762,
														"name": "group",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 196,
																"character": 17
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Options"
														},
														"defaultValue": "\"Options\""
													},
													{
														"id": 760,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 194,
																"character": 16
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Show folders first"
														},
														"defaultValue": "\"Show folders first\""
													},
													{
														"id": 761,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 195,
																"character": 19
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															762,
															760,
															761
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 193,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"id": 756,
												"name": "option",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 758,
														"name": "defaultValue",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 191,
																"character": 24
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 757,
														"name": "id",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/default.ts",
																"line": 190,
																"character": 14
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "show_folders_first"
														},
														"defaultValue": "\"show_folders_first\""
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															758,
															757
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 189,
														"character": 14
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													755
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													759,
													756
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 763,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 765,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 205,
														"character": 19
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "ctrl+f"
														}
													]
												},
												"defaultValue": "['ctrl+f']"
											},
											{
												"id": 764,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/default.ts",
														"line": 204,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "focus_search_input"
												},
												"defaultValue": "\"focus_search_input\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													765,
													764
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						}
					]
				}
			},
			"defaultValue": "[\n    ChonkyActions.OpenSelection,\n    ChonkyActions.SelectAllFiles,\n    ChonkyActions.ClearSelection,\n    ChonkyActions.EnableListView,\n    // TODO: Don't enable until compact view is fully supported\n    // ChonkyActions.EnableCompactView,\n    ChonkyActions.EnableGridView,\n    ChonkyActions.SortFilesByName,\n    ChonkyActions.SortFilesBySize,\n    ChonkyActions.SortFilesByDate,\n    ChonkyActions.ToggleHiddenFiles,\n    ChonkyActions.ToggleShowFoldersFirst,\n    ChonkyActions.FocusSearchInput,\n]"
		},
		{
			"id": 1693,
			"name": "DnDFileEntry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileEntry.tsx",
					"line": 15,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"name": "(Anonymous function)"
					}
				],
				"name": "MemoExoticComponent"
			},
			"defaultValue": "React.memo(({ file, children }: DnDFileEntryProps) => {\n    const { drop, drag, dndState } = useFileEntryDnD(file);\n\n    useDndHoverOpen(file, dndState);\n    const classes = useStyles();\n    return (\n        <div ref={drop} className={classes.fillParent}>\n            <div\n                ref={FileHelper.isDraggable(file) ? drag : null}\n                className={classes.fillParent}\n            >\n                {children(dndState)}\n            </div>\n        </div>\n    );\n})"
		},
		{
			"id": 630,
			"name": "EssentialFileActions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/action-definitions/index.ts",
					"line": 11,
					"character": 33
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 631,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 633,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 35,
														"character": 25
													}
												],
												"type": {
													"type": "reference",
													"id": 470,
													"name": "MouseClickFilePayload"
												},
												"defaultValue": "{} as MouseClickFilePayload"
											},
											{
												"id": 632,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 34,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "mouse_click_file"
												},
												"defaultValue": "\"mouse_click_file\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													633,
													632
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 634,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 636,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 124,
														"character": 25
													}
												],
												"type": {
													"type": "reference",
													"id": 477,
													"name": "KeyboardClickFilePayload"
												},
												"defaultValue": "{} as KeyboardClickFilePayload"
											},
											{
												"id": 635,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 123,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "keyboard_click_file"
												},
												"defaultValue": "\"keyboard_click_file\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													636,
													635
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 637,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 639,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 156,
														"character": 25
													}
												],
												"type": {
													"type": "reference",
													"id": 485,
													"name": "StartDragNDropPayload"
												},
												"defaultValue": "{} as StartDragNDropPayload"
											},
											{
												"id": 638,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 155,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "start_drag_n_drop"
												},
												"defaultValue": "\"start_drag_n_drop\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													639,
													638
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 640,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 642,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 179,
														"character": 25
													}
												],
												"type": {
													"type": "reference",
													"id": 497,
													"name": "EndDragNDropPayload"
												},
												"defaultValue": "{} as EndDragNDropPayload"
											},
											{
												"id": 641,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 178,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "end_drag_n_drop"
												},
												"defaultValue": "\"end_drag_n_drop\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													642,
													641
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 643,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 645,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 204,
														"character": 21
													}
												],
												"type": {
													"type": "reference",
													"id": 501,
													"name": "MoveFilesPayload"
												},
												"defaultValue": "{} as MoveFilesPayload"
											},
											{
												"id": 644,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 203,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "move_files"
												},
												"defaultValue": "\"move_files\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													645,
													644
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 646,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 648,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 211,
														"character": 21
													}
												],
												"type": {
													"type": "reference",
													"id": 504,
													"name": "ChangeSelectionPayload"
												},
												"defaultValue": "{} as ChangeSelectionPayload"
											},
											{
												"id": 647,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 210,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "change_selection"
												},
												"defaultValue": "\"change_selection\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													648,
													647
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 649,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 651,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 219,
														"character": 21
													}
												],
												"type": {
													"type": "reference",
													"id": 490,
													"name": "OpenFilesPayload"
												},
												"defaultValue": "{} as OpenFilesPayload"
											},
											{
												"id": 650,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 218,
														"character": 10
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "open_files"
												},
												"defaultValue": "\"open_files\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													651,
													650
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 652,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 654,
												"name": "hotkeys",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 227,
														"character": 19
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "stringLiteral",
															"value": "backspace"
														}
													]
												},
												"defaultValue": "['backspace']"
											},
											{
												"id": 653,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 226,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "open_parent_folder"
												},
												"defaultValue": "\"open_parent_folder\""
											},
											{
												"id": 655,
												"name": "button",
												"kind": 2097152,
												"kindString": "Object literal",
												"flags": {
													"isExported": true
												},
												"children": [
													{
														"id": 658,
														"name": "contextMenu",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/essential.ts",
																"line": 231,
																"character": 27
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "false"
														},
														"defaultValue": "false"
													},
													{
														"id": 659,
														"name": "icon",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/essential.ts",
																"line": 232,
																"character": 20
															}
														],
														"type": {
															"type": "reference",
															"id": 9,
															"name": "openParentFolder"
														},
														"defaultValue": "ChonkyIconName.openParentFolder"
													},
													{
														"id": 660,
														"name": "iconOnly",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/essential.ts",
																"line": 233,
																"character": 24
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													},
													{
														"id": 656,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/essential.ts",
																"line": 229,
																"character": 20
															}
														],
														"type": {
															"type": "stringLiteral",
															"value": "Go up a directory"
														},
														"defaultValue": "\"Go up a directory\""
													},
													{
														"id": 657,
														"name": "toolbar",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isExported": true
														},
														"sources": [
															{
																"fileName": "src/action-definitions/essential.ts",
																"line": 230,
																"character": 23
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "true"
														},
														"defaultValue": "true"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															658,
															659,
															660,
															656,
															657
														]
													}
												],
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 228,
														"character": 18
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													654,
													653
												]
											},
											{
												"title": "Object literals",
												"kind": 2097152,
												"children": [
													655
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 661,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"children": [
											{
												"id": 663,
												"name": "__payloadType",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 260,
														"character": 25
													}
												],
												"type": {
													"type": "reference",
													"id": 493,
													"name": "OpenFileContextMenuPayload"
												},
												"defaultValue": "{} as OpenFileContextMenuPayload"
											},
											{
												"id": 662,
												"name": "id",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isExported": true
												},
												"sources": [
													{
														"fileName": "src/action-definitions/essential.ts",
														"line": 259,
														"character": 14
													}
												],
												"type": {
													"type": "stringLiteral",
													"value": "open_file_context_menu"
												},
												"defaultValue": "\"open_file_context_menu\""
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													663,
													662
												]
											}
										]
									}
								}
							],
							"name": "WritableProps"
						}
					]
				}
			},
			"defaultValue": "[\n    ChonkyActions.MouseClickFile,\n    ChonkyActions.KeyboardClickFile,\n    ChonkyActions.StartDragNDrop,\n    ChonkyActions.EndDragNDrop,\n    ChonkyActions.MoveFiles,\n    ChonkyActions.ChangeSelection,\n    ChonkyActions.OpenFiles,\n    ChonkyActions.OpenParentFolder,\n    ChonkyActions.OpenFileContextMenu,\n]"
		},
		{
			"id": 1437,
			"name": "FileBrowser",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileBrowser.tsx",
					"line": 31,
					"character": 24
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1235,
								"name": "FileBrowserProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1438,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1439,
											"name": "children",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/external/FileBrowser.tsx",
													"line": 33,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"name": "ReactNode"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1439
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1223,
										"name": "FileBrowserHandle"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "React.forwardRef<\n    FileBrowserHandle,\n    FileBrowserProps & { children?: ReactNode }\n>((props, ref) => {\n    const { instanceId, iconComponent, children } = props;\n    const disableDragAndDrop = getValueOrFallback(\n        props.disableDragAndDrop,\n        defaultConfig.disableDragAndDrop,\n        'boolean'\n    );\n    const disableDragAndDropProvider = getValueOrFallback(\n        props.disableDragAndDropProvider,\n        defaultConfig.disableDragAndDropProvider,\n        'boolean'\n    );\n\n    const chonkyInstanceId = useStaticValue(() => instanceId ?? shortid.generate());\n    const store = useChonkyStore(chonkyInstanceId);\n\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n    const theme = useMemo(() => {\n        return isMobileBreakpoint ? merge(lightTheme, mobileOverrideTheme) : lightTheme;\n    }, [isMobileBreakpoint]);\n\n    const chonkyComps = (\n        <>\n            <ChonkyBusinessLogic ref={ref} {...props} />\n            <ChonkyPresentationLayer>{children}</ChonkyPresentationLayer>\n        </>\n    );\n\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <ChonkyIconContext.Provider\n                    value={\n                        iconComponent ??\n                        defaultConfig.iconComponent ??\n                        ChonkyIconPlaceholder\n                    }\n                >\n                    {disableDragAndDrop || disableDragAndDropProvider ? (\n                        chonkyComps\n                    ) : (\n                        <DndProvider backend={HTML5Backend}>{chonkyComps}</DndProvider>\n                    )}\n                </ChonkyIconContext.Provider>\n            </ThemeProvider>\n        </Provider>\n    );\n})"
		},
		{
			"id": 1466,
			"name": "FileContextMenu",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileContextMenu.tsx",
					"line": 20,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1465,
						"name": "FileContextMenuProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(reduxActions.setContextMenuMounted(true));\n        return () => {\n            dispatch(reduxActions.setContextMenuMounted(false));\n        };\n    }, [dispatch]);\n\n    const contextMenuConfig = useSelector(selectContextMenuConfig);\n    const contextMenuItems = useSelector(selectContextMenuItems);\n\n    const hideContextMenu = useContextMenuDismisser();\n    const contextMenuItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < contextMenuItems.length; ++i) {\n            const item = contextMenuItems[i];\n\n            if (typeof item === 'string') {\n                components.push(\n                    <SmartToolbarDropdownButton\n                        key={`context-menu-item-${item}`}\n                        fileActionId={item}\n                        onClickFollowUp={hideContextMenu}\n                    />\n                );\n            } else {\n                item.fileActionIds.map((id) =>\n                    components.push(\n                        <SmartToolbarDropdownButton\n                            key={`context-menu-item-${item.name}-${id}`}\n                            fileActionId={id}\n                            onClickFollowUp={hideContextMenu}\n                        />\n                    )\n                );\n            }\n        }\n        return components;\n    }, [contextMenuItems, hideContextMenu]);\n\n    const anchorPosition = useMemo(\n        () =>\n            contextMenuConfig\n                ? { top: contextMenuConfig.mouseY, left: contextMenuConfig.mouseX }\n                : undefined,\n        [contextMenuConfig]\n    );\n\n    const classes = useStyles();\n    return (\n        <Menu\n            keepMounted\n            elevation={2}\n            disablePortal\n            onClose={hideContextMenu}\n            transitionDuration={150}\n            open={!!contextMenuConfig}\n            anchorPosition={anchorPosition}\n            anchorReference=\"anchorPosition\"\n            classes={{ list: classes.contextMenuList }}\n        >\n            {contextMenuItemComponents}\n            <ListSubheader component=\"div\" className={classes.browserMenuTooltip}>\n                Browser menu: <strong>Alt + Right Click</strong>\n            </ListSubheader>\n        </Menu>\n    );\n})"
		},
		{
			"id": 1679,
			"name": "FileEntryName",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntryName.tsx",
					"line": 19,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1676,
						"name": "FileEntryNameProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ file, className }) => {\n        const modifierIconComponents = useModifierIconComponents(file);\n        const fileNameComponent = useFileNameComponent(file);\n\n        const classes = useStyles();\n        return (\n            <span className={className} title={file ? file.name : undefined}>\n                {modifierIconComponents.length > 0 && (\n                    <span className={classes.modifierIcons}>\n                        {modifierIconComponents}\n                    </span>\n                )}\n                {fileNameComponent}\n            </span>\n        );\n    }\n)"
		},
		{
			"id": 1746,
			"name": "FileList",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileList.tsx",
					"line": 32,
					"character": 21
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1743,
						"name": "FileListProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const displayFileIds = useSelector(selectDisplayFileIds);\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const currentFolder = useSelector(selectCurrentFolder);\n    const { drop, dndCanDrop, dndIsOverCurrent } = useFileDrop({ file: currentFolder });\n    const styleState = useMemo<StyleState>(() => ({ dndCanDrop, dndIsOverCurrent }), [\n        dndCanDrop,\n        dndIsOverCurrent,\n    ]);\n\n    const localClasses = useLocalStyles(styleState);\n    const classes = useStyles(viewConfig);\n\n    // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n    // this to `true` to simplify configuration. Users can just wrap Chonky in their\n    // own `div` if they want to have finer control over the height.\n    const fillParentContainer = true;\n\n    const listRenderer = useCallback(\n        ({ width, height }: { width: number; height: number }) => {\n            if (displayFileIds.length === 0) {\n                return <FileListEmpty width={width} height={viewConfig.entryHeight} />;\n            } else if (viewConfig.mode === FileViewMode.List) {\n                return <ListContainer width={width} height={height} />;\n            } else {\n                return <GridContainer width={width} height={height} />;\n            }\n        },\n        [displayFileIds, viewConfig]\n    );\n\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    return (\n        <div\n            ref={drop}\n            className={c([classes.fileListWrapper, localClasses.fileListWrapper])}\n            role=\"list\"\n        >\n            <div className={localClasses.dndDropZone}>\n                <div className={localClasses.dndDropZoneIcon}>\n                    <ChonkyIcon\n                        icon={\n                            dndCanDrop\n                                ? ChonkyIconName.dndCanDrop\n                                : ChonkyIconName.dndCannotDrop\n                        }\n                    />\n                </div>\n            </div>\n            <AutoSizer disableHeight={!fillParentContainer}>{listRenderer}</AutoSizer>\n        </div>\n    );\n})"
		},
		{
			"id": 1661,
			"name": "FileNavbar",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileNavbar.tsx",
					"line": 19,
					"character": 23
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1660,
						"name": "FileNavbarProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const classes = useStyles();\n    const folderChainItems = useFolderChainItems();\n\n    const folderChainComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < folderChainItems.length; ++i) {\n            const key = `folder-chain-${i}`;\n            const component = (\n                <FolderChainButton\n                    key={key}\n                    first={i === 0}\n                    current={i === folderChainItems.length - 1}\n                    item={folderChainItems[i]}\n                />\n            );\n            components.push(component);\n        }\n        return components;\n    }, [folderChainItems]);\n\n    return (\n        <Box className={classes.navbarWrapper}>\n            <Box className={classes.navbarContainer}>\n                <SmartToolbarButton fileActionId={ChonkyActions.OpenParentFolder.id} />\n                <Breadcrumbs\n                    className={classes.navbarBreadcrumbs}\n                    classes={{ separator: classes.separator }}\n                >\n                    {folderChainComponents}\n                </Breadcrumbs>\n            </Box>\n        </Box>\n    );\n})"
		},
		{
			"id": 1569,
			"name": "FileThumbnail",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileThumbnail.tsx",
					"line": 18,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1566,
						"name": "FileThumbnailProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { className, thumbnailUrl } = props;\n\n    const thumbnailStyle: React.CSSProperties = thumbnailUrl\n        ? { backgroundImage: `url('${thumbnailUrl}')` }\n        : {};\n\n    const classes = useStyles();\n    return (\n        <div className={c([className, classes.fileThumbnail])} style={thumbnailStyle} />\n    );\n})"
		},
		{
			"id": 1669,
			"name": "FileToolbar",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FileToolbar.tsx",
					"line": 13,
					"character": 24
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1668,
						"name": "FileToolbarProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const classes = useStyles();\n    const toolbarItems = useSelector(selectToolbarItems);\n\n    const toolbarItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < toolbarItems.length; ++i) {\n            const item = toolbarItems[i];\n\n            const key = `toolbar-item-${typeof item === 'string' ? item : item.name}`;\n            const component =\n                typeof item === 'string' ? (\n                    <SmartToolbarButton key={key} fileActionId={item} />\n                ) : (\n                    <ToolbarDropdown\n                        key={key}\n                        name={item.name}\n                        fileActionIds={item.fileActionIds}\n                    />\n                );\n            components.push(component);\n        }\n        return components;\n    }, [toolbarItems]);\n\n    return (\n        <div className={classes.toolbarWrapper}>\n            <div className={classes.toolbarContainer}>\n                <div className={classes.toolbarLeft}>\n                    <ToolbarSearch />\n                    <ToolbarInfo />\n                </div>\n                <div className={classes.toolbarRight}>{toolbarItemComponents}</div>\n            </div>\n        </div>\n    );\n})"
		},
		{
			"id": 1656,
			"name": "FolderChainButton",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FolderChainButton.tsx",
					"line": 24,
					"character": 30
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1652,
						"name": "FolderChainButtonProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ first, current, item }) => {\n        const { file, disabled, onClick } = item;\n        const { dndIsOver, dndCanDrop, drop } = useFileDrop({\n            file,\n            forceDisableDrop: !file || current,\n        });\n        const dndState = useMemo<DndEntryState>(\n            () => ({\n                dndIsOver,\n                dndCanDrop,\n                dndIsDragging: false,\n            }),\n            [dndCanDrop, dndIsOver]\n        );\n        useDndHoverOpen(file, dndState);\n        const dndIconName = useDndIcon(dndState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const classes = useStyles(dndState);\n        const className = c({\n            [classes.baseBreadcrumb]: true,\n            [classes.disabledBreadcrumb]: disabled,\n            [classes.currentBreadcrumb]: current,\n        });\n        const text = file ? file.name : 'Loading...';\n        const icon =\n            first && file?.folderChainIcon === undefined\n                ? ChonkyIconName.folder\n                : file?.folderChainIcon;\n\n        return (\n            <div className={classes.buttonContainer} ref={file ? drop : null}>\n                {file && dndIconName && (\n                    <div className={classes.dndIndicator}>\n                        <ChonkyIcon icon={dndIconName} fixedWidth={true} />\n                    </div>\n                )}\n                <ToolbarButton\n                    icon={icon}\n                    className={className}\n                    text={text}\n                    disabled={disabled}\n                    onClick={onClick}\n                />\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1751,
			"name": "FullFileBrowser",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/FullFileBrowser.tsx",
					"line": 16,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1235,
										"name": "FileBrowserProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1223,
												"name": "FileBrowserHandle"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				],
				"name": "MemoExoticComponent"
			},
			"defaultValue": "React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        return (\n            <FileBrowser ref={ref} {...props}>\n                <FileNavbar />\n                <FileToolbar />\n                <FileList />\n                <FileContextMenu />\n            </FileBrowser>\n        );\n    })\n)"
		},
		{
			"id": 1735,
			"name": "GridContainer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 78,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1718,
						"name": "FileListGridProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig) as FileViewConfigGrid;\n    const displayFileIds = useSelector(selectDisplayFileIds);\n    const fileCount = useMemo(() => displayFileIds.length, [displayFileIds]);\n\n    const gridRef = useRef<VariableSizeGrid>();\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n\n    // Whenever the grid config changes at runtime, we call a method on the\n    // `VariableSizeGrid` handle to reset column width/row height cache.\n    // !!! Note that we deliberately update the `gridRef` firsts and update the React\n    //     state AFTER that. This is needed to avoid file entries jumping up/down.\n    const [gridConfig, setGridConfig] = useState(\n        getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint)\n    );\n    const gridConfigRef = useRef(gridConfig);\n    useEffect(() => {\n        const oldConf = gridConfigRef.current;\n        const newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n\n        gridConfigRef.current = newConf;\n        if (gridRef.current) {\n            if (oldConf.rowCount !== newConf.rowCount) {\n                gridRef.current.resetAfterRowIndex(\n                    Math.min(oldConf.rowCount, newConf.rowCount) - 1\n                );\n            }\n            if (oldConf.columnCount !== newConf.columnCount) {\n                gridRef.current.resetAfterColumnIndex(\n                    Math.min(oldConf.columnCount, newConf.rowCount) - 1\n                );\n            }\n            if (oldConf.columnWidth !== newConf.columnWidth) {\n                gridRef.current.resetAfterIndices({ columnIndex: 0, rowIndex: 0 });\n            }\n        }\n\n        setGridConfig(newConf);\n    }, [\n        setGridConfig,\n        gridConfigRef,\n        isMobileBreakpoint,\n        width,\n        viewConfig,\n        fileCount,\n    ]);\n\n    const sizers = useMemo(() => {\n        const gc = gridConfigRef;\n        return {\n            getColumnWidth: (index: number) =>\n                gc.current.columnWidth! +\n                (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter),\n            getRowHeight: (index: number) =>\n                gc.current.rowHeight +\n                (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter),\n        };\n    }, [gridConfigRef]);\n\n    const displayFileIdsRef = useInstanceVariable(useSelector(selectDisplayFileIds));\n    const getItemKey = useCallback(\n        (data: { columnIndex: number; rowIndex: number; data: any }) => {\n            const index =\n                data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n\n            return displayFileIdsRef.current[index] ?? `loading-file-${index}`;\n        },\n        [gridConfigRef, displayFileIdsRef]\n    );\n\n    const cellRenderer = useCallback(\n        (data: { rowIndex: number; columnIndex: number; style: CSSProperties }) => {\n            const gc = gridConfigRef;\n            const index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n            const fileId = displayFileIds[index];\n            if (displayFileIds[index] === undefined) return null;\n\n            const styleWithGutter: CSSProperties = {\n                ...data.style,\n                paddingRight:\n                    data.columnIndex === gc.current.columnCount - 1\n                        ? 0\n                        : gc.current.gutter,\n                paddingBottom:\n                    data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n                boxSizing: 'border-box',\n            };\n\n            return (\n                <div style={styleWithGutter}>\n                    <SmartFileEntry\n                        fileId={fileId ?? null}\n                        displayIndex={index}\n                        fileViewMode={viewConfig.mode}\n                    />\n                </div>\n            );\n        },\n        [displayFileIds, viewConfig.mode]\n    );\n\n    const classes = useStyles();\n    const gridComponent = useMemo(() => {\n        return (\n            <VariableSizeGrid\n                ref={gridRef as any}\n                className={classes.gridContainer}\n                estimatedRowHeight={gridConfig.rowHeight + gridConfig.gutter}\n                rowHeight={sizers.getRowHeight}\n                estimatedColumnWidth={gridConfig.columnWidth + gridConfig.gutter}\n                columnWidth={sizers.getColumnWidth}\n                columnCount={gridConfig.columnCount}\n                height={height}\n                rowCount={gridConfig.rowCount}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {cellRenderer}\n            </VariableSizeGrid>\n        );\n    }, [\n        classes.gridContainer,\n        gridConfig.rowHeight,\n        gridConfig.gutter,\n        gridConfig.columnWidth,\n        gridConfig.columnCount,\n        gridConfig.rowCount,\n        sizers.getRowHeight,\n        sizers.getColumnWidth,\n        height,\n        width,\n        getItemKey,\n        cellRenderer,\n    ]);\n\n    return gridComponent;\n})"
		},
		{
			"id": 1697,
			"name": "GridEntry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntry.tsx",
					"line": 14,
					"character": 22
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1479,
						"name": "FileEntryProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ file, selected, focused, dndState }) => {\n        const isDirectory = FileHelper.isDirectory(file);\n        const entryState = useFileEntryState(file, selected, focused);\n\n        const classes = useFileEntryStyles(entryState);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        const entryClassName = c({\n            [classes.gridFileEntry]: true,\n        });\n        return (\n            <div className={entryClassName} {...fileEntryHtmlProps}>\n                {isDirectory ? (\n                    <GridEntryPreviewFolder\n                        className={classes.gridFileEntryPreview}\n                        entryState={entryState}\n                        dndState={dndState}\n                    />\n                ) : (\n                    <GridEntryPreviewFile\n                        className={classes.gridFileEntryPreview}\n                        entryState={entryState}\n                        dndState={dndState}\n                    />\n                )}\n                <div className={classes.gridFileEntryNameContainer}>\n                    <FileEntryName className={classes.gridFileEntryName} file={file} />\n                </div>\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1573,
			"name": "GridEntryDndIndicator",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryDndIndicator.tsx",
					"line": 19,
					"character": 34
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1570,
						"name": "DnDIndicatorProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    (props) => {\n        const { className: externalClassName, dndState } = props;\n        const dndIconName = useDndIcon(dndState);\n        const classes = useStyles(dndState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        if (!dndIconName) return null;\n        const className = c({\n            [classes.dndIndicator]: true,\n            [externalClassName]: true,\n        });\n        return (\n            <div className={className}>\n                <ChonkyIcon icon={dndIconName} />\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1595,
			"name": "GridEntryPreviewFile",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 142,
					"character": 33
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1577,
						"name": "FileEntryPreviewProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    (props) => {\n        const { className: externalClassName, entryState, dndState } = props;\n\n        const fileClasses = useFileStyles(entryState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const className = c({\n            [fileClasses.previewFile]: true,\n            [externalClassName || '']: !!externalClassName,\n        });\n        return (\n            <div className={className}>\n                <GridEntryDndIndicator\n                    className={fileClasses.dndIndicator}\n                    dndState={dndState}\n                />\n                <div className={fileClasses.fileIcon}>\n                    <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} />\n                </div>\n                <div className={commonClasses.selectionIndicator}></div>\n                <FileThumbnail\n                    className={fileClasses.thumbnail}\n                    thumbnailUrl={entryState.thumbnailUrl}\n                />\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1590,
			"name": "GridEntryPreviewFolder",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 33,
					"character": 35
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1577,
						"name": "FileEntryPreviewProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    (props) => {\n        const { className: externalClassName, entryState, dndState } = props;\n\n        const folderClasses = useFolderStyles(entryState);\n        const fileClasses = useFileStyles(entryState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const className = c({\n            [folderClasses.previewFile]: true,\n            [externalClassName || '']: !!externalClassName,\n        });\n        return (\n            <div className={className}>\n                <div className={folderClasses.folderBackSideMid}>\n                    <div className={folderClasses.folderBackSideTop} />\n                    <div className={folderClasses.folderFrontSide}>\n                        <GridEntryDndIndicator\n                            className={fileClasses.dndIndicator}\n                            dndState={dndState}\n                        />\n                        <div\n                            className={c([\n                                fileClasses.fileIcon,\n                                folderClasses.fileIcon,\n                            ])}\n                        >\n                            {entryState.childrenCount}\n                        </div>\n                        <div className={commonClasses.selectionIndicator}></div>\n                        <FileThumbnail\n                            className={fileClasses.thumbnail}\n                            thumbnailUrl={entryState.thumbnailUrl}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1430,
			"name": "HotkeyListener",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/internal/HotkeyListener.tsx",
					"line": 19,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1428,
						"name": "HotkeyListenerProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { fileActionId } = props;\n\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n\n    useEffect(() => {\n        if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n            return;\n        }\n\n        const hotkeysStr = fileAction.hotkeys.join(',');\n        const hotkeyCallback = (event: KeyboardEvent) => {\n            event.preventDefault();\n            dispatch(thunkRequestFileAction(fileAction, undefined));\n        };\n        hotkeys(hotkeysStr, hotkeyCallback);\n        return () => hotkeys.unbind(hotkeysStr, hotkeyCallback);\n    }, [dispatch, fileAction]);\n\n    return null;\n})"
		},
		{
			"id": 1277,
			"name": "ImageExtensions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 187,
					"character": 28
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "[\n    '3ds',\n    'apng',\n    'azv',\n    'bmp',\n    'bmp',\n    'btif',\n    'cgm',\n    'cmx',\n    'djv',\n    'djvu',\n    'drle',\n    'dwg',\n    'dxf',\n    'emf',\n    'exr',\n    'fbs',\n    'fh',\n    'fh4',\n    'fh5',\n    'fh7',\n    'fhc',\n    'fits',\n    'fpx',\n    'fst',\n    'g3',\n    'gif',\n    'heic',\n    'heics',\n    'heif',\n    'heifs',\n    'ico',\n    'ico',\n    'ief',\n    'jls',\n    'jng',\n    'jp2',\n    'jpe',\n    'jpeg',\n    'jpf',\n    'jpg',\n    'jpg2',\n    'jpm',\n    'jpx',\n    'jxr',\n    'ktx',\n    'mdi',\n    'mmr',\n    'npx',\n    'pbm',\n    'pct',\n    'pcx',\n    'pcx',\n    'pgm',\n    'pic',\n    'png',\n    'pnm',\n    'ppm',\n    'psd',\n    'pti',\n    'ras',\n    'rgb',\n    'rlc',\n    'sgi',\n    'sid',\n    'sub',\n    'svg',\n    'svgz',\n    't38',\n    'tap',\n    'tfx',\n    'tga',\n    'tif',\n    'tiff',\n    'uvg',\n    'uvi',\n    'uvvg',\n    'uvvi',\n    'vtf',\n    'wbmp',\n    'wdp',\n    'webp',\n    'wmf',\n    'xbm',\n    'xif',\n    'xpm',\n    'xwd',\n]"
		},
		{
			"id": 1739,
			"name": "ListContainer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/ListContainer.tsx",
					"line": 22,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1736,
						"name": "FileListListProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig);\n    const displayFileIds = useSelector(selectDisplayFileIds);\n\n    const listRef = useRef<FixedSizeList>();\n\n    const displayFileIdsRef = useInstanceVariable(useSelector(selectDisplayFileIds));\n    const getItemKey = useCallback(\n        (index: number) => displayFileIdsRef.current[index] ?? `loading-file-${index}`,\n        [displayFileIdsRef]\n    );\n\n    const classes = useStyles();\n    const listComponent = useMemo(() => {\n        // When entry size is null, we use List view\n        const rowRenderer = (data: { index: number; style: CSSProperties }) => {\n            return (\n                <div style={data.style}>\n                    <SmartFileEntry\n                        fileId={displayFileIds[data.index] ?? null}\n                        displayIndex={data.index}\n                        fileViewMode={FileViewMode.List}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <FixedSizeList\n                ref={listRef as any}\n                className={classes.listContainer}\n                itemSize={viewConfig.entryHeight}\n                height={height}\n                itemCount={displayFileIds.length}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {rowRenderer}\n            </FixedSizeList>\n        );\n    }, [\n        classes.listContainer,\n        viewConfig.entryHeight,\n        height,\n        displayFileIds,\n        width,\n        getItemKey,\n    ]);\n\n    return listComponent;\n})"
		},
		{
			"id": 1705,
			"name": "ListEntry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/ListEntry.tsx",
					"line": 21,
					"character": 22
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1479,
						"name": "FileEntryProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n        const dndIconName = useDndIcon(dndState);\n\n        const dndStyle = {};\n        const fileSizeString = FileHelper.getReadableDate(file);\n        const fileDateString = FileHelper.getReadableFileSize(file);\n\n        const styleState = useMemo<StyleState>(\n            () => ({\n                entryState,\n                dndState,\n            }),\n            [dndState, entryState]\n        );\n        const classes = useStyles(styleState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div\n                className={classes.listFileEntry}\n                {...fileEntryHtmlProps}\n                style={dndStyle}\n            >\n                <div className={commonClasses.focusIndicator}></div>\n                <div\n                    className={c([\n                        commonClasses.selectionIndicator,\n                        classes.listFileEntrySelection,\n                    ])}\n                ></div>\n                <div className={classes.listFileEntryIcon} style={dndStyle}>\n                    <ChonkyIcon\n                        icon={dndIconName ?? entryState.icon}\n                        spin={dndIconName ? false : entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div\n                    className={classes.listFileEntryName}\n                    title={file ? file.name : undefined}\n                >\n                    <FileEntryName file={file} />\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileSizeString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={5} maxLength={15} />\n                    )}\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileDateString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={10} maxLength={20} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n)"
		},
		{
			"id": 1764,
			"name": "OldChonkyActions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/file-actions-definitions.ts",
					"line": 8,
					"character": 29
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1765,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1766,
							"name": "CopyFiles",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1769,
									"name": "hotkeys",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 13,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "['ctrl+c']"
								},
								{
									"id": 1767,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 11,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"copy_files\""
								},
								{
									"id": 1768,
									"name": "requiresSelection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 12,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1770,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1773,
											"name": "contextMenu",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 17,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1775,
											"name": "dropdown",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 19,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1774,
											"name": "group",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 18,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Actions\""
										},
										{
											"id": 1776,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 20,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 10,
												"name": "copy"
											},
											"defaultValue": "ChonkyIconName.copy"
										},
										{
											"id": 1771,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 15,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Copy selection\""
										},
										{
											"id": 1772,
											"name": "toolbar",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 16,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1773,
												1775,
												1774,
												1776,
												1771,
												1772
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 14,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1769,
										1767,
										1768
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1770
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions-definitions.ts",
									"line": 10,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1777,
							"name": "CreateFolder",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1778,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 24,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"create_folder\""
								},
								{
									"id": 1779,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1782,
											"name": "contextMenu",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 28,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1784,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 30,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 25,
												"name": "folderCreate"
											},
											"defaultValue": "ChonkyIconName.folderCreate"
										},
										{
											"id": 1780,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 26,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Create folder\""
										},
										{
											"id": 1781,
											"name": "toolbar",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 27,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1783,
											"name": "tooltip",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 29,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Create a folder\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1782,
												1784,
												1780,
												1781,
												1783
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 25,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1778
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1779
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions-definitions.ts",
									"line": 23,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1804,
							"name": "DeleteFiles",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1807,
									"name": "hotkeys",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 59,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "['delete']"
								},
								{
									"id": 1805,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 57,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"delete_files\""
								},
								{
									"id": 1806,
									"name": "requiresSelection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 58,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1808,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1811,
											"name": "contextMenu",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 63,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1814,
											"name": "dropdown",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 66,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1812,
											"name": "group",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 64,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Actions\""
										},
										{
											"id": 1815,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 67,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 30,
												"name": "trash"
											},
											"defaultValue": "ChonkyIconName.trash"
										},
										{
											"id": 1809,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 61,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Delete files\""
										},
										{
											"id": 1810,
											"name": "toolbar",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 62,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1813,
											"name": "tooltip",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 65,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Delete files\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1811,
												1814,
												1812,
												1815,
												1809,
												1810,
												1813
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 60,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1807,
										1805,
										1806
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1808
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions-definitions.ts",
									"line": 56,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1793,
							"name": "DownloadFiles",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1794,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 44,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"download_files\""
								},
								{
									"id": 1795,
									"name": "requiresSelection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 45,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1796,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1799,
											"name": "contextMenu",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 49,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1802,
											"name": "dropdown",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 52,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1800,
											"name": "group",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 50,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Actions\""
										},
										{
											"id": 1803,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 53,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 28,
												"name": "download"
											},
											"defaultValue": "ChonkyIconName.download"
										},
										{
											"id": 1797,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 47,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Download files\""
										},
										{
											"id": 1798,
											"name": "toolbar",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 48,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1801,
											"name": "tooltip",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 51,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Download files\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1799,
												1802,
												1800,
												1803,
												1797,
												1798,
												1801
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 46,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1794,
										1795
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1796
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions-definitions.ts",
									"line": 43,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1785,
							"name": "UploadFiles",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1786,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 34,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"upload_files\""
								},
								{
									"id": 1787,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1790,
											"name": "contextMenu",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 38,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1792,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 40,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 29,
												"name": "upload"
											},
											"defaultValue": "ChonkyIconName.upload"
										},
										{
											"id": 1788,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 36,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Upload files\""
										},
										{
											"id": 1789,
											"name": "toolbar",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 37,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1791,
											"name": "tooltip",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/file-actions-definitions.ts",
													"line": 39,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Upload files\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1790,
												1792,
												1788,
												1789,
												1791
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 35,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1786
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1787
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions-definitions.ts",
									"line": 33,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1766,
								1777,
								1804,
								1793,
								1785
							]
						}
					]
				}
			},
			"defaultValue": "validateActionTypes({\n    // Optional actions\n    CopyFiles: {\n        id: 'copy_files',\n        requiresSelection: true,\n        hotkeys: ['ctrl+c'],\n        button: {\n            name: 'Copy selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            dropdown: true,\n            icon: ChonkyIconName.copy,\n        },\n    },\n    CreateFolder: {\n        id: 'create_folder',\n        button: {\n            name: 'Create folder',\n            toolbar: true,\n            contextMenu: true,\n            tooltip: 'Create a folder',\n            icon: ChonkyIconName.folderCreate,\n        },\n    },\n    UploadFiles: {\n        id: 'upload_files',\n        button: {\n            name: 'Upload files',\n            toolbar: true,\n            contextMenu: true,\n            tooltip: 'Upload files',\n            icon: ChonkyIconName.upload,\n        },\n    },\n    DownloadFiles: {\n        id: 'download_files',\n        requiresSelection: true,\n        button: {\n            name: 'Download files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            tooltip: 'Download files',\n            dropdown: true,\n            icon: ChonkyIconName.download,\n        },\n    },\n    DeleteFiles: {\n        id: 'delete_files',\n        requiresSelection: true,\n        hotkeys: ['delete'],\n        button: {\n            name: 'Delete files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            tooltip: 'Delete files',\n            dropdown: true,\n            icon: ChonkyIconName.trash,\n        },\n    },\n})"
		},
		{
			"id": 1717,
			"name": "SmartFileEntry",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry.tsx",
					"line": 34,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1709,
						"name": "SmartFileEntryProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    ({ fileId, displayIndex, fileViewMode }) => {\n        const classes = useStyles();\n\n        // Basic properties\n        const file = useParamSelector(selectFileData, fileId);\n        const selected = useParamSelector(selectIsFileSelected, fileId);\n        const dndDisabled = useSelector(selectIsDnDDisabled);\n\n        // Clickable wrapper properties\n        const fileClickHandlers = useFileClickHandlers(file, displayIndex);\n        const [focused, setFocused] = useState(false);\n        const clickableWrapperProps: ClickableWrapperProps = {\n            wrapperTag: 'div',\n            passthroughProps: { className: classes.fileEntryClickableWrapper },\n            ...(FileHelper.isClickable(file) ? fileClickHandlers : undefined),\n            setFocused,\n        };\n\n        // File entry properties\n        const fileEntryProps: Omit<FileEntryProps, 'dndState'> = {\n            file,\n            selected,\n            focused,\n        };\n\n        let EntryComponent: React.FC<FileEntryProps>;\n        if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;\n        else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;\n        else EntryComponent = GridEntry;\n\n        return dndDisabled ? (\n            <ClickableWrapper {...clickableWrapperProps}>\n                <EntryComponent {...fileEntryProps} dndState={disabledDndState} />\n            </ClickableWrapper>\n        ) : (\n            <DnDFileEntry file={file}>\n                {(dndState) => (\n                    <ClickableWrapper {...clickableWrapperProps}>\n                        <EntryComponent {...fileEntryProps} dndState={dndState} />\n                    </ClickableWrapper>\n                )}\n            </DnDFileEntry>\n        );\n    }\n)"
		},
		{
			"id": 1651,
			"name": "SmartToolbarButton",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarButton.tsx",
					"line": 114,
					"character": 31
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1648,
						"name": "SmartToolbarButtonProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(\n    (props) => {\n        const { fileActionId } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n\n        return (\n            <ToolbarButton\n                text={button.name}\n                tooltip={button.tooltip}\n                icon={icon}\n                iconOnly={button.iconOnly}\n                active={active}\n                onClick={triggerAction}\n                disabled={disabled}\n            />\n        );\n    }\n)"
		},
		{
			"id": 1464,
			"name": "SmartToolbarDropdownButton",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdownButton.tsx",
					"line": 85,
					"character": 39
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1458,
								"name": "SmartToolbarDropdownButtonProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLLIElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "React.forwardRef(\n    (props: SmartToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { fileActionId, onClickFollowUp } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n\n        // Combine external click handler with internal one\n        const handleClick = useCallback(() => {\n            triggerAction();\n            if (onClickFollowUp) onClickFollowUp();\n        }, [onClickFollowUp, triggerAction]);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n\n        return (\n            <ToolbarDropdownButton\n                ref={ref}\n                text={button.name}\n                icon={icon}\n                onClick={handleClick}\n                active={active}\n                disabled={disabled}\n            />\n        );\n    }\n)"
		},
		{
			"id": 1524,
			"name": "TextPlaceholder",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/TextPlaceholder.tsx",
					"line": 19,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1517,
						"name": "TextPlaceholderProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { minLength, maxLength } = props;\n\n    const placeholderLength = getRandomInt(minLength, maxLength);\n    const whitespace = '&nbsp;'.repeat(placeholderLength);\n\n    const classes = useStyles();\n    return (\n        <span\n            className={classes.textPlaceholder}\n            dangerouslySetInnerHTML={{ __html: whitespace }}\n        />\n    );\n})"
		},
		{
			"id": 1650,
			"name": "ToolbarButton",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarButton.tsx",
					"line": 30,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1635,
						"name": "ToolbarButtonProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const {\n        className: externalClassName,\n        text,\n        tooltip,\n        active,\n        icon,\n        iconOnly,\n        onClick,\n        disabled,\n        dropdown,\n    } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const iconComponent =\n        icon || iconOnly ? (\n            <div className={iconOnly ? '' : classes.iconWithText}>\n                <ChonkyIcon\n                    icon={icon ? icon : ChonkyIconName.fallbackIcon}\n                    fixedWidth={true}\n                />\n            </div>\n        ) : null;\n\n    const className = c({\n        [externalClassName ?? '']: true,\n        [classes.baseButton]: true,\n        [classes.iconOnlyButton]: iconOnly,\n        [classes.activeButton]: !!active,\n    });\n    return (\n        <Button\n            className={className}\n            onClick={onClick}\n            title={tooltip ? tooltip : text}\n            disabled={disabled || !onClick}\n        >\n            {iconComponent}\n            {text && !iconOnly && <span>{text}</span>}\n            {dropdown && (\n                <div className={classes.iconDropdown}>\n                    <ChonkyIcon\n                        icon={icon ? icon : ChonkyIconName.dropdown}\n                        fixedWidth={true}\n                    />\n                </div>\n            )}\n        </Button>\n    );\n})"
		},
		{
			"id": 1663,
			"name": "ToolbarDropdown",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdown.tsx",
					"line": 17,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1662,
						"name": "ToolbarDropdownProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo((props) => {\n    const { name, fileActionIds } = props;\n    const [anchor, setAnchor] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n        [setAnchor]\n    );\n    const handleClose = useCallback(() => setAnchor(null), [setAnchor]);\n\n    const menuItemComponents = useMemo(\n        () =>\n            fileActionIds.map((id) => (\n                <SmartToolbarDropdownButton\n                    key={`menu-item-${id}`}\n                    fileActionId={id}\n                    onClickFollowUp={handleClose}\n                />\n            )),\n        [fileActionIds, handleClose]\n    );\n\n    const classes = useStyles();\n    return (\n        <>\n            <ToolbarButton text={name} onClick={handleClick} dropdown={true} />\n            <Menu\n                autoFocus\n                keepMounted\n                elevation={2}\n                anchorEl={anchor}\n                onClose={handleClose}\n                open={Boolean(anchor)}\n                transitionDuration={150}\n                classes={{ list: classes.dropdownList }}\n            >\n                {menuItemComponents}\n            </Menu>\n        </>\n    );\n})"
		},
		{
			"id": 1463,
			"name": "ToolbarDropdownButton",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarDropdownButton.tsx",
					"line": 28,
					"character": 34
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1450,
								"name": "ToolbarDropdownButtonProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLLIElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "React.forwardRef(\n    (props: ToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { text, active, icon, onClick, disabled } = props;\n        const classes = useStyles();\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const className = c({\n            [classes.baseButton]: true,\n            [classes.activeButton]: active,\n        });\n        return (\n            <MenuItem\n                ref={ref}\n                className={className}\n                onClick={onClick}\n                disabled={disabled}\n            >\n                {icon && (\n                    <ListItemIcon className={classes.icon}>\n                        <ChonkyIcon icon={icon} fixedWidth={true} />\n                    </ListItemIcon>\n                )}\n                <ListItemText primaryTypographyProps={{ className: classes.text }}>\n                    {text}\n                </ListItemText>\n            </MenuItem>\n        );\n    }\n)"
		},
		{
			"id": 1665,
			"name": "ToolbarInfo",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarInfo.tsx",
					"line": 20,
					"character": 24
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1664,
						"name": "ToolbarInfoProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const classes = useStyles();\n\n    const displayFileIds = useSelector(selectDisplayFileIds);\n    const selectionSize = useSelector(selectSelectionSize);\n    const hiddenCount = useSelector(selectHiddenFileCount);\n\n    const fileCountString = `${displayFileIds.length} file${\n        displayFileIds.length !== 1 ? 's' : ''\n    }`;\n    const selectedString = selectionSize ? `${selectionSize} selected` : '';\n    const hiddenString = hiddenCount ? `${hiddenCount} hidden` : '';\n\n    return (\n        <div className={classes.infoContainer}>\n            <Typography className={classes.infoText} variant=\"body1\">\n                {fileCountString}\n                {(selectedString || hiddenString) && (\n                    <span className={classes.extraInfoSpan}>\n                        (\n                        <span className={classes.selectionSizeText}>\n                            {selectedString}\n                        </span>\n                        {selectedString && hiddenString && ', '}\n                        <span className={classes.hiddenCountText}>{hiddenString}</span>)\n                    </span>\n                )}\n            </Typography>\n        </div>\n    );\n})"
		},
		{
			"id": 1667,
			"name": "ToolbarSearch",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/external/ToolbarSearch.tsx",
					"line": 22,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1666,
						"name": "ToolbarSearchProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.memo(() => {\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const searchInputRef = useRef<HTMLInputElement>();\n\n    const dispatch = useDispatch();\n    const reduxSearchString = useSelector(selectSearchString);\n\n    const [localSearchString, setLocalSearchString] = useState(reduxSearchString);\n    const [debouncedLocalSearchString] = useDebounce(localSearchString, 300);\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState(false);\n\n    useEffect(() => {\n        dispatch(\n            reduxActions.setFocusSearchInput(() => {\n                if (searchInputRef.current) searchInputRef.current.focus();\n            })\n        );\n        return () => {\n            dispatch(reduxActions.setFocusSearchInput(null));\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        setShowLoadingIndicator(false);\n        dispatch(thunkUpdateSearchString(debouncedLocalSearchString));\n    }, [debouncedLocalSearchString, dispatch]);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setShowLoadingIndicator(true);\n        setLocalSearchString(event.currentTarget.value);\n    }, []);\n    const handleKeyUp = useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            // Remove focus from the search input field when user presses escape.\n            // Note: We use KeyUp instead of KeyPress because some browser plugins can\n            //       intercept KeyPress events with Escape key.\n            //       @see https://stackoverflow.com/a/37461974\n            if (event.key === 'Escape') {\n                setLocalSearchString('');\n                dispatch(thunkUpdateSearchString(''));\n                if (searchInputRef.current) searchInputRef.current.blur();\n            }\n        },\n        [dispatch]\n    );\n\n    return (\n        <TextField\n            className={classes.searchFieldContainer}\n            size=\"small\"\n            variant=\"outlined\"\n            value={localSearchString}\n            placeholder=\"Search\"\n            onChange={handleChange as any}\n            inputRef={searchInputRef}\n            InputProps={{\n                onKeyUp: handleKeyUp,\n                startAdornment: (\n                    <InputAdornment className={classes.searchIcon} position=\"start\">\n                        <ChonkyIcon\n                            icon={\n                                showLoadingIndicator\n                                    ? ChonkyIconName.loading\n                                    : ChonkyIconName.search\n                            }\n                            spin={showLoadingIndicator}\n                        />\n                    </InputAdornment>\n                ),\n                className: classes.searchFieldInput,\n            }}\n            inputProps={{ className: classes.searchFieldInputInner }}\n        />\n    );\n})"
		},
		{
			"id": 1171,
			"name": "UNINITIALIZED_SENTINEL",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/hooks-helpers.ts",
					"line": 22,
					"character": 28
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1172,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					}
				}
			}
		},
		{
			"id": 1276,
			"name": "VideoExtensions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 125,
					"character": 28
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "[\n    '3g2',\n    '3gp',\n    '3gpp',\n    'asf',\n    'asx',\n    'avi',\n    'dvb',\n    'f4v',\n    'fli',\n    'flv',\n    'fvt',\n    'h261',\n    'h263',\n    'h264',\n    'jpgm',\n    'jpgv',\n    'jpm',\n    'm1v',\n    'm2v',\n    'm4u',\n    'm4v',\n    'mj2',\n    'mjp2',\n    'mk3d',\n    'mks',\n    'mkv',\n    'mng',\n    'mov',\n    'movie',\n    'mp4',\n    'mp4v',\n    'mpe',\n    'mpeg',\n    'mpg',\n    'mpg4',\n    'mxu',\n    'ogv',\n    'pyv',\n    'qt',\n    'smv',\n    'ts',\n    'uvh',\n    'uvm',\n    'uvp',\n    'uvs',\n    'uvu',\n    'uvv',\n    'uvvh',\n    'uvvm',\n    'uvvp',\n    'uvvs',\n    'uvvu',\n    'uvvv',\n    'viv',\n    'vob',\n    'webm',\n    'wm',\n    'wmv',\n    'wmx',\n    'wvx',\n]"
		},
		{
			"id": 1377,
			"name": "c",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 153,
					"character": 14
				}
			],
			"type": {
				"type": "reference",
				"name": "ClassNamesExport"
			},
			"defaultValue": "classnames"
		},
		{
			"id": 1272,
			"name": "getIconTrie",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 20,
					"character": 17
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "(Anonymous function)"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "(Anonymous function)"
							}
						],
						"name": "Memoized"
					}
				]
			},
			"defaultValue": "memoize(() => {\n    let colourIndex = 0;\n    const step = 5;\n\n    const IconsToExtensions = [\n        // Generic file types\n        [ChonkyIconName.license, ['license']],\n        [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']],\n        [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']],\n        [\n            ChonkyIconName.database,\n            [\n                'csv',\n                'json',\n                'sql',\n                'sqlite',\n                'sqlite3',\n                'npy',\n                'npz',\n                'rec',\n                'idx',\n                'hdf5',\n            ],\n        ],\n        [ChonkyIconName.text, ['txt', 'md', 'mdx']],\n        [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']],\n        [ChonkyIconName.image, ImageExtensions],\n        [ChonkyIconName.video, VideoExtensions],\n        [\n            ChonkyIconName.code,\n            [\n                'html',\n                'php',\n                'css',\n                'sass',\n                'scss',\n                'less',\n                'cpp',\n                'h',\n                'hpp',\n                'c',\n                'xml',\n            ],\n        ],\n        [ChonkyIconName.info, ['bib', 'readme', 'nfo']],\n        [ChonkyIconName.key, ['pem', 'pub']],\n        [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']],\n        [ChonkyIconName.music, AudioExtensions],\n        [ChonkyIconName.terminal, ['run', 'sh']],\n        [ChonkyIconName.trash, ['.Trashes']],\n        [ChonkyIconName.users, ['authors', 'contributors']],\n\n        // OS file types\n        [ChonkyIconName.linux, ['AppImage']],\n        [ChonkyIconName.ubuntu, ['deb']],\n        [ChonkyIconName.windows, ['exe']],\n\n        // Programming language file types\n        [ChonkyIconName.rust, ['rs', 'rlib']],\n        [ChonkyIconName.python, ['py', 'ipynb']],\n        [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']],\n        [ChonkyIconName.php, ['php']],\n\n        // Development tools file types\n        [ChonkyIconName.git, ['.gitignore']],\n\n        // Brands file types\n        [ChonkyIconName.adobe, ['psd']],\n\n        // Other program file types\n        [ChonkyIconName.pdf, ['pdf']],\n        [ChonkyIconName.excel, ['xls', 'xlsx']],\n        [ChonkyIconName.word, ['doc', 'docx', 'odt']],\n        [ChonkyIconName.flash, ['swf']],\n    ] as const;\n\n    const exactTrie = new ExactTrie({ ignoreCase: true });\n    for (const pair of IconsToExtensions) {\n        const [icon, extensions] = pair;\n\n        for (let i = 0; i < extensions.length; ++i) {\n            colourIndex += step;\n            const colorCode = (colourIndex % (ColorsLight.length - 1)) + 1;\n            const iconData: FileIconData = {\n                icon,\n                colorCode,\n            };\n            exactTrie.put(extensions[i], iconData, true);\n        }\n    }\n\n    return exactTrie;\n})"
		},
		{
			"id": 811,
			"name": "reduxActions",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/redux/reducers.ts",
					"line": 17,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 812,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 903,
									"name": "cleanUpSelection",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 904,
											"name": "cleanUpSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 905,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 125,
											"character": 24
										}
									]
								},
								{
									"id": 906,
									"name": "clearSelection",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 907,
											"name": "clearSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 908,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 134,
											"character": 22
										}
									]
								},
								{
									"id": 960,
									"name": "hideContextMenu",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 961,
											"name": "hideContextMenu",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 962,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 181,
											"character": 23
										}
									]
								},
								{
									"id": 879,
									"name": "selectAllFiles",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 880,
											"name": "selectAllFiles",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 881,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 87,
											"character": 22
										}
									]
								},
								{
									"id": 889,
									"name": "selectFiles",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 890,
											"name": "selectFiles",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 891,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 892,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 893,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 894,
																			"name": "fileIds",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 105,
																					"character": 43
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		},
																		{
																			"id": 895,
																			"name": "reset",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 105,
																					"character": 60
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				894,
																				895
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/redux/reducers.ts",
																			"line": 105,
																			"character": 34
																		}
																	]
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 103,
											"character": 19
										}
									]
								},
								{
									"id": 882,
									"name": "selectRange",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 883,
											"name": "selectRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 884,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 885,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 886,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 888,
																			"name": "rangeEnd",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 94,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 887,
																			"name": "rangeStart",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 94,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				888,
																				887
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/redux/reducers.ts",
																			"line": 94,
																			"character": 34
																		}
																	]
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 92,
											"character": 19
										}
									]
								},
								{
									"id": 944,
									"name": "setClearSelectionOnOutsideClick",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 945,
											"name": "setClearSelectionOnOutsideClick",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 946,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 947,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 169,
											"character": 39
										}
									]
								},
								{
									"id": 952,
									"name": "setContextMenuMounted",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 953,
											"name": "setContextMenuMounted",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 954,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 955,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 175,
											"character": 29
										}
									]
								},
								{
									"id": 940,
									"name": "setDisableDragAndDrop",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 941,
											"name": "setDisableDragAndDrop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 942,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 943,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 166,
											"character": 29
										}
									]
								},
								{
									"id": 865,
									"name": "setDisplayFileIds",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 866,
											"name": "setDisplayFileIds",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 867,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 868,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"name": "Nullable"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 78,
											"character": 25
										}
									]
								},
								{
									"id": 936,
									"name": "setDoubleClickDelay",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 937,
											"name": "setDoubleClickDelay",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 938,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 939,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 163,
											"character": 27
										}
									]
								},
								{
									"id": 813,
									"name": "setExternalFileActionHandler",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 814,
											"name": "setExternalFileActionHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 815,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 816,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 195,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 128,
																				"name": "FileAction"
																			}
																		],
																		"name": "GenericFileActionHandler"
																	}
																],
																"name": "Nilable"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 21,
											"character": 36
										}
									]
								},
								{
									"id": 825,
									"name": "setFileActions",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 826,
											"name": "setFileActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 827,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 828,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 128,
																	"name": "FileAction"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 33,
											"character": 22
										}
									]
								},
								{
									"id": 821,
									"name": "setFileActionsErrorMessages",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 822,
											"name": "setFileActionsErrorMessages",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 823,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 824,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 30,
											"character": 35
										}
									]
								},
								{
									"id": 913,
									"name": "setFileViewConfig",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 914,
											"name": "setFileViewConfig",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 915,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 916,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 120,
																"name": "FileViewConfig"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 141,
											"character": 25
										}
									]
								},
								{
									"id": 853,
									"name": "setFiles",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 854,
											"name": "setFiles",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 855,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 856,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 94,
																"name": "FileArray"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 62,
											"character": 16
										}
									]
								},
								{
									"id": 849,
									"name": "setFilesErrorMessages",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 850,
											"name": "setFilesErrorMessages",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 851,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 852,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 59,
											"character": 29
										}
									]
								},
								{
									"id": 869,
									"name": "setFocusSearchInput",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 870,
											"name": "setFocusSearchInput",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 871,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 872,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 873,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExported": true
																			},
																			"signatures": [
																				{
																					"id": 874,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			],
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 81,
																					"character": 66
																				}
																			]
																		}
																	}
																],
																"name": "Nullable"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 81,
											"character": 27
										}
									]
								},
								{
									"id": 841,
									"name": "setFolderChain",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 842,
											"name": "setFolderChain",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 843,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 844,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 94,
																"name": "FileArray"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 53,
											"character": 22
										}
									]
								},
								{
									"id": 837,
									"name": "setFolderChainErrorMessages",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 838,
											"name": "setFolderChainErrorMessages",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 839,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 840,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 50,
											"character": 35
										}
									]
								},
								{
									"id": 861,
									"name": "setHiddenFileIds",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 862,
											"name": "setHiddenFileIds",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 863,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 864,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 103,
																"name": "FileIdTrueMap"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 75,
											"character": 24
										}
									]
								},
								{
									"id": 948,
									"name": "setLastClickIndex",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 949,
											"name": "setLastClickIndex",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 950,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 951,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Nullable"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 172,
											"character": 25
										}
									]
								},
								{
									"id": 924,
									"name": "setOptionDefaults",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 925,
											"name": "setOptionDefaults",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 926,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 927,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 208,
																"name": "OptionMap"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 148,
											"character": 25
										}
									]
								},
								{
									"id": 817,
									"name": "setRawFileActions",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 818,
											"name": "setRawFileActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 819,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 820,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 128,
																			"name": "FileAction"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 27,
											"character": 25
										}
									]
								},
								{
									"id": 845,
									"name": "setRawFiles",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 846,
											"name": "setRawFiles",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 847,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 848,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 94,
																		"name": "FileArray"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 56,
											"character": 19
										}
									]
								},
								{
									"id": 833,
									"name": "setRawFolderChain",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 834,
											"name": "setRawFolderChain",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 835,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 836,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 94,
																		"name": "FileArray"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 47,
											"character": 25
										}
									]
								},
								{
									"id": 875,
									"name": "setSearchString",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 876,
											"name": "setSearchString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 877,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 878,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 84,
											"character": 23
										}
									]
								},
								{
									"id": 909,
									"name": "setSelectionDisabled",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 910,
											"name": "setSelectionDisabled",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 911,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 912,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 138,
											"character": 28
										}
									]
								},
								{
									"id": 917,
									"name": "setSort",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 918,
											"name": "setSort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 919,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 920,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 921,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 922,
																			"name": "actionId",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 144,
																					"character": 55
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 923,
																			"name": "order",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 144,
																					"character": 70
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 121,
																				"name": "SortOrder"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				922,
																				923
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/redux/reducers.ts",
																			"line": 144,
																			"character": 45
																		}
																	]
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 144,
											"character": 15
										}
									]
								},
								{
									"id": 857,
									"name": "setSortedFileIds",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 858,
											"name": "setSortedFileIds",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 859,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 860,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"name": "Nullable"
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 72,
											"character": 24
										}
									]
								},
								{
									"id": 932,
									"name": "setThumbnailGenerator",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 933,
											"name": "setThumbnailGenerator",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 934,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 935,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 227,
																		"name": "ThumbnailGenerator"
																	}
																],
																"name": "Nullable"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 157,
											"character": 29
										}
									]
								},
								{
									"id": 956,
									"name": "showContextMenu",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 957,
											"name": "showContextMenu",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 958,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 959,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 204,
																"name": "ContextMenuConfig"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 178,
											"character": 23
										}
									]
								},
								{
									"id": 928,
									"name": "toggleOption",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 929,
											"name": "toggleOption",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 930,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 931,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 154,
											"character": 20
										}
									]
								},
								{
									"id": 896,
									"name": "toggleSelection",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 897,
											"name": "toggleSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 898,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 899,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 900,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 902,
																			"name": "exclusive",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 115,
																					"character": 61
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 901,
																			"name": "fileId",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/redux/reducers.ts",
																					"line": 115,
																					"character": 42
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				902,
																				901
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/redux/reducers.ts",
																			"line": 115,
																			"character": 34
																		}
																	]
																}
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 113,
											"character": 23
										}
									]
								},
								{
									"id": 829,
									"name": "updateFileActionMenuItems",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 830,
											"name": "updateFileActionMenuItems",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 831,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 237,
																"name": "RootState"
															}
														],
														"name": "WritableDraft"
													}
												},
												{
													"id": 832,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 203,
																			"name": "FileActionMenuItem"
																		}
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 203,
																			"name": "FileActionMenuItem"
																		}
																	}
																]
															}
														],
														"name": "PayloadAction"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/reducers.ts",
											"line": 41,
											"character": 33
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										903,
										906,
										960,
										879,
										889,
										882,
										944,
										952,
										940,
										865,
										936,
										813,
										825,
										821,
										913,
										853,
										849,
										869,
										841,
										837,
										861,
										948,
										924,
										817,
										845,
										833,
										875,
										909,
										917,
										857,
										932,
										956,
										928,
										896,
										829
									]
								}
							]
						}
					}
				],
				"name": "CaseReducerActions"
			}
		},
		{
			"id": 963,
			"name": "rootReducer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/redux/reducers.ts",
					"line": 17,
					"character": 58
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 237,
						"name": "RootState"
					},
					{
						"type": "reference",
						"name": "AnyAction"
					}
				],
				"name": "Reducer"
			}
		},
		{
			"id": 1600,
			"name": "useCommonEntryStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 214,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1601,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1602,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1603,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								],
								"name": "Classes"
							}
						}
					]
				}
			},
			"defaultValue": "makeLocalChonkyStyles((theme) => ({\n    selectionIndicator: {\n        display: (state: FileEntryState) => (state.selected ? 'block' : 'none'),\n        background:\n            'repeating-linear-gradient(' +\n            '45deg,' +\n            'rgba(0,153,255,.14),' +\n            'rgba(0,153,255,.14) 10px,' +\n            'rgba(0,153,255,.25) 0,' +\n            'rgba(0,153,255,.25) 20px' +\n            ')',\n        backgroundColor: 'rgba(0,153,255,.14)',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 10,\n    },\n    focusIndicator: {\n        display: (state: FileEntryState) => (state.focused ? 'block' : 'none'),\n        boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 11,\n    },\n}))"
		},
		{
			"id": 1698,
			"name": "useFileEntryStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntry.tsx",
					"line": 47,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1699,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1700,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1701,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								],
								"name": "Classes"
							}
						}
					]
				}
			},
			"defaultValue": "makeLocalChonkyStyles((theme) => ({\n    gridFileEntry: {\n        flexDirection: 'column',\n        display: 'flex',\n        height: '100%',\n    },\n    gridFileEntryPreview: {\n        flexGrow: 1,\n    },\n    gridFileEntryNameContainer: {\n        fontSize: theme.gridFileEntry.fontSize,\n        wordBreak: 'break-word',\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    gridFileEntryName: {\n        backgroundColor: (state: FileEntryState) =>\n            state.selected ? 'rgba(0,153,255, .25)' : 'transparent',\n        textDecoration: (state: FileEntryState) =>\n            state.focused ? 'underline' : 'none',\n        borderRadius: 3,\n        padding: [2, 4],\n    },\n}))"
		},
		{
			"id": 1596,
			"name": "useFileStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 172,
					"character": 19
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1597,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1598,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1599,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								],
								"name": "Classes"
							}
						}
					]
				}
			},
			"defaultValue": "makeLocalChonkyStyles((theme) => ({\n    previewFile: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            shadows.push('inset rgba(255, 255, 255, 0.5) 0 0 0 999px');\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    dndIndicator: {\n        zIndex: 14,\n    },\n    fileIcon: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        fontSize: theme.gridFileEntry.iconSize,\n        opacity: (state: FileEntryState) =>\n            state.thumbnailUrl && !state.focused ? 0 : 1,\n        color: (state: FileEntryState) =>\n            state.focused\n                ? theme.gridFileEntry.iconColorFocused\n                : theme.gridFileEntry.iconColor,\n        position: 'absolute',\n        left: '50%',\n        zIndex: 12,\n        top: '50%',\n    },\n    thumbnail: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        zIndex: 6,\n        bottom: 5,\n        right: 5,\n        left: 5,\n        top: 5,\n    },\n}))"
		},
		{
			"id": 1591,
			"name": "useFolderStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/GridEntryPreview.tsx",
					"line": 73,
					"character": 21
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1592,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1593,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1594,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								],
								"name": "Classes"
							}
						}
					]
				}
			},
			"defaultValue": "makeLocalChonkyStyles((theme) => ({\n    previewFile: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    folderBackSideTop: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = 'rgba(255, 255, 255, 0.1)';\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n        borderTopRightRadius: 10,\n        position: 'absolute',\n        right: '60%',\n        height: 13,\n        top: -10,\n        left: 0,\n        '&:after': {\n            borderColor: '#fff #fff transparent transparent',\n            borderWidth: [0, 15, 10, 0],\n            borderStyle: 'solid',\n            position: 'absolute',\n            display: 'block',\n            content: '\"\"',\n            right: 0,\n            top: 0,\n        },\n    },\n    folderBackSideMid: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = 'rgba(255, 255, 255, 0.1)';\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopRightRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    folderFrontSide: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n            shadows.push('inset rgba(255, 255, 255, 0.4) 0 0 0 999px');\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        overflow: 'hidden',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    fileIcon: {\n        fontSize: important(theme.gridFileEntry.childrenCountSize),\n    },\n}))"
		},
		{
			"id": 1747,
			"name": "useLocalStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/FileList.tsx",
					"line": 87,
					"character": 20
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1748,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1749,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1750,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								],
								"name": "Classes"
							}
						}
					]
				}
			},
			"defaultValue": "makeLocalChonkyStyles((theme) => ({\n    fileListWrapper: {\n        minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n        background: (state: StyleState) =>\n            state.dndIsOverCurrent && state.dndCanDrop\n                ? state.dndCanDrop\n                    ? getStripeGradient(\n                          theme.dnd.fileListCanDropMaskOne,\n                          theme.dnd.fileListCanDropMaskTwo\n                      )\n                    : getStripeGradient(\n                          theme.dnd.fileListCannotDropMaskOne,\n                          theme.dnd.fileListCannotDropMaskTwo\n                      )\n                : 'none',\n    },\n    dndDropZone: {\n        display: (state: StyleState) =>\n            // When we cannot drop, we don't show an indicator at all\n            state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none',\n        borderRadius: theme.gridFileEntry.borderRadius,\n        pointerEvents: 'none',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 2,\n    },\n    dndDropZoneIcon: {\n        backgroundColor: (state: StyleState) =>\n            state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n        color: (state: StyleState) =>\n            state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        textAlign: 'center',\n        lineHeight: '60px',\n        fontSize: '2em',\n        left: '50%',\n        height: 60,\n        top: '50%',\n        width: 60,\n    },\n}))"
		},
		{
			"id": 1427,
			"name": "useStyles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
					"line": 93,
					"character": 15
				},
				{
					"fileName": "src/components/internal/ChonkyPresentationLayer.tsx",
					"line": 77,
					"character": 15
				},
				{
					"fileName": "src/components/external/ToolbarDropdownButton.tsx",
					"line": 58,
					"character": 15
				},
				{
					"fileName": "src/components/external/FileContextMenu.tsx",
					"line": 90,
					"character": 15
				},
				{
					"fileName": "src/components/external/TextPlaceholder.tsx",
					"line": 34,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/FileThumbnail.tsx",
					"line": 31,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/GridEntryDndIndicator.tsx",
					"line": 38,
					"character": 15
				},
				{
					"fileName": "src/components/external/ToolbarButton.tsx",
					"line": 82,
					"character": 15
				},
				{
					"fileName": "src/components/external/FolderChainButton.tsx",
					"line": 74,
					"character": 15
				},
				{
					"fileName": "src/components/external/FileNavbar.tsx",
					"line": 55,
					"character": 15
				},
				{
					"fileName": "src/components/external/ToolbarDropdown.tsx",
					"line": 59,
					"character": 15
				},
				{
					"fileName": "src/components/external/ToolbarInfo.tsx",
					"line": 52,
					"character": 15
				},
				{
					"fileName": "src/components/external/ToolbarSearch.tsx",
					"line": 100,
					"character": 15
				},
				{
					"fileName": "src/components/external/FileToolbar.tsx",
					"line": 51,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/FileListEmpty.tsx",
					"line": 37,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/FileEntryName.tsx",
					"line": 38,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/CompactEntry.tsx",
					"line": 62,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/DnDFileEntry.tsx",
					"line": 32,
					"character": 22
				},
				{
					"fileName": "src/components/file-list/ListEntry.tsx",
					"line": 86,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/FileEntry.tsx",
					"line": 81,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 218,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/ListContainer.tsx",
					"line": 76,
					"character": 15
				},
				{
					"fileName": "src/components/file-list/FileList.tsx",
					"line": 132,
					"character": 15
				}
			],
			"type": {
				"type": "reference",
				"name": "(Anonymous function)"
			},
			"defaultValue": "makeGlobalChonkyStyles(() => ({\n    fileListWrapper: {\n        height: '100%',\n        maxHeight: '100%',\n    },\n}))"
		},
		{
			"id": 1252,
			"name": "ChonkyIconPlaceholder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1253,
					"name": "ChonkyIconPlaceholder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ChonkyIconPlaceholder.tsx",
					"line": 11,
					"character": 34
				}
			]
		},
		{
			"id": 1432,
			"name": "ChonkyPresentationLayer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1433,
					"name": "ChonkyPresentationLayer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1434,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"originalName": "__0",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1435,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1436,
											"name": "children",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/internal/ChonkyPresentationLayer.tsx",
													"line": 27,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ReactNode"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1436
											]
										}
									],
									"sources": [
										{
											"fileName": "src/components/internal/ChonkyPresentationLayer.tsx",
											"line": 26,
											"character": 80
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ChonkyPresentationLayer.tsx",
					"line": 26,
					"character": 36
				}
			]
		},
		{
			"id": 1563,
			"name": "ClickableWrapper",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1564,
					"name": "ClickableWrapper",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1565,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1545,
										"name": "ClickableWrapperProps"
									}
								],
								"name": "PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper.tsx",
					"line": 38,
					"character": 29
				}
			]
		},
		{
			"id": 1425,
			"name": "DnDFileListDragLayer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1426,
					"name": "DnDFileListDragLayer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
					"line": 44,
					"character": 33
				}
			]
		},
		{
			"id": 1673,
			"name": "FileListEmpty",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1674,
					"name": "FileListEmpty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1675,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1670,
										"name": "FileListEmptyProps"
									}
								],
								"name": "PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileListEmpty.tsx",
					"line": 18,
					"character": 26
				}
			]
		},
		{
			"id": 507,
			"name": "NOOP_FUNCTION",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 508,
					"name": "NOOP_FUNCTION",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 509,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 9,
					"character": 26
				}
			]
		},
		{
			"id": 514,
			"name": "defineFileAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 515,
					"name": "defineFileAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 516,
							"name": "Action",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 128,
								"name": "FileAction"
							}
						}
					],
					"parameters": [
						{
							"id": 517,
							"name": "action",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "Action",
								"constraint": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						},
						{
							"id": 518,
							"name": "effect",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 161,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								],
								"name": "FileActionEffect"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Action",
								"constraint": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						],
						"name": "WritableProps"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 23,
					"character": 29
				}
			]
		},
		{
			"id": 526,
			"name": "elementIsInsideButton",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 527,
					"name": "elementIsInsideButton",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 528,
							"name": "buttonCandidate",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 61,
					"character": 34
				}
			]
		},
		{
			"id": 1383,
			"name": "findClosestChonkyFileId",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1384,
					"name": "findClosestChonkyFileId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1385,
							"name": "element",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FileContextMenu-hooks.ts",
					"line": 12,
					"character": 36
				}
			]
		},
		{
			"id": 519,
			"name": "findElementAmongAncestors",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Recursively check the current element and the parent elements, going bottom-up.\nReturns the first element to match the predicate, otherwise returns null if such\nelement is not found."
			},
			"signatures": [
				{
					"id": 520,
					"name": "findElementAmongAncestors",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Recursively check the current element and the parent elements, going bottom-up.\nReturns the first element to match the predicate, otherwise returns null if such\nelement is not found."
					},
					"parameters": [
						{
							"id": 521,
							"name": "maybeElement",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 522,
							"name": "predicate",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 523,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 524,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 525,
													"name": "maybeElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLElement"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/util/helpers.ts",
											"line": 48,
											"character": 14
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLElement"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 46,
					"character": 38
				}
			]
		},
		{
			"id": 401,
			"name": "getFileData",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 402,
					"name": "getFileData",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 403,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						},
						{
							"id": 404,
							"name": "fileId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 97,
					"character": 24
				}
			]
		},
		{
			"id": 1729,
			"name": "getGridConfig",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1730,
					"name": "getGridConfig",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1731,
							"name": "width",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1732,
							"name": "fileCount",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1733,
							"name": "viewConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 115,
								"name": "FileViewConfigGrid"
							}
						},
						{
							"id": 1734,
							"name": "isMobileBreakpoint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1721,
						"name": "GridConfig"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 45,
					"character": 26
				}
			]
		},
		{
			"id": 405,
			"name": "getIsFileSelected",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 406,
					"name": "getIsFileSelected",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 407,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						},
						{
							"id": 408,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 99,
					"character": 30
				}
			]
		},
		{
			"id": 1406,
			"name": "getItemStyles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1407,
					"name": "getItemStyles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1408,
							"name": "initialCursorOffset",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1409,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1410,
													"name": "x",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 26,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1411,
													"name": "y",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 26,
															"character": 48
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1410,
														1411
													]
												}
											],
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 26,
													"character": 34
												}
											]
										}
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1412,
							"name": "initialFileOffset",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1413,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1414,
													"name": "x",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 27,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1415,
													"name": "y",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 27,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1414,
														1415
													]
												}
											],
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 27,
													"character": 32
												}
											]
										}
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1416,
							"name": "currentFileOffset",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1417,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1418,
													"name": "x",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 28,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1419,
													"name": "y",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
															"line": 28,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1418,
														1419
													]
												}
											],
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 28,
													"character": 32
												}
											]
										}
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1420,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1421,
											"name": "display",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 32,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1421
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1422,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1424,
											"name": "WebkitTransform",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 40,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "transform"
										},
										{
											"id": 1423,
											"name": "transform",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
													"line": 39,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1424,
												1423
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
					"line": 25,
					"character": 19
				}
			]
		},
		{
			"id": 1520,
			"name": "getRandomInt",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1521,
					"name": "getRandomInt",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1522,
							"name": "min",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1523,
							"name": "max",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/TextPlaceholder.tsx",
					"line": 16,
					"character": 18
				}
			]
		},
		{
			"id": 409,
			"name": "getSelectedFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 410,
					"name": "getSelectedFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 411,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						},
						{
							"id": 412,
							"name": "filters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 95,
											"name": "FileFilter"
										}
									],
									"name": "Nilable"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 72,
							"name": "FileData"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 104,
					"character": 29
				}
			]
		},
		{
			"id": 413,
			"name": "getSelectedFilesForAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 414,
					"name": "getSelectedFilesForAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 415,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						},
						{
							"id": 416,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 72,
									"name": "FileData"
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 117,
					"character": 38
				}
			]
		},
		{
			"id": 1352,
			"name": "getStripeGradient",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1353,
					"name": "getStripeGradient",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1354,
							"name": "colorOne",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1355,
							"name": "colorTwo",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 110,
					"character": 30
				}
			]
		},
		{
			"id": 529,
			"name": "getValueOrFallback",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 530,
					"name": "getValueOrFallback",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 531,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"parameters": [
						{
							"id": 532,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 533,
							"name": "fallback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 534,
							"name": "desiredType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "string"
									},
									{
										"type": "stringLiteral",
										"value": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T",
						"constraint": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 68,
					"character": 31
				}
			]
		},
		{
			"id": 1373,
			"name": "important",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1374,
					"name": "important",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1375,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1376,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "unknown",
									"name": "T"
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 151,
					"character": 22
				}
			]
		},
		{
			"id": 1727,
			"name": "isMobileDevice",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1728,
					"name": "isMobileDevice",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/GridContainer.tsx",
					"line": 37,
					"character": 27
				}
			]
		},
		{
			"id": 510,
			"name": "isPromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 511,
					"name": "isPromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 512,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 513,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "MaybePromise"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"name": "Promise"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/helpers.ts",
					"line": 17,
					"character": 22
				}
			]
		},
		{
			"id": 1366,
			"name": "makeGlobalChonkyStyles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1367,
					"name": "makeGlobalChonkyStyles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1368,
							"name": "C",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 1369,
							"name": "makeStyles",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1370,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1371,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1372,
													"name": "theme",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 1334,
														"name": "ChonkyTheme"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C",
														"constraint": {
															"type": "intrinsic",
															"name": "string"
														},
														"default": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Styles"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/util/styles.ts",
											"line": 124,
											"character": 15
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 123,
					"character": 35
				}
			]
		},
		{
			"id": 1356,
			"name": "makeLocalChonkyStyles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1357,
					"name": "makeLocalChonkyStyles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1358,
							"name": "C",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 1359,
							"name": "styles",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1360,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1361,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1362,
													"name": "theme",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 1334,
														"name": "ChonkyTheme"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C",
														"constraint": {
															"type": "intrinsic",
															"name": "string"
														},
														"default": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Styles"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/util/styles.ts",
											"line": 120,
											"character": 11
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1363,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1364,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1365,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												},
												"default": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Classes"
									}
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 119,
					"character": 34
				}
			]
		},
		{
			"id": 1005,
			"name": "mergeFileActionsArrays",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Merges multiple file action arrays into one while removing duplicates"
			},
			"signatures": [
				{
					"id": 1006,
					"name": "mergeFileActionsArrays",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Merges multiple file action arrays into one while removing duplicates"
					},
					"parameters": [
						{
							"id": 1007,
							"name": "fileActionArrays",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 128,
							"name": "FileAction"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 29,
					"character": 28
				}
			]
		},
		{
			"id": 983,
			"name": "sanitizeInputArray",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 984,
					"name": "sanitizeInputArray",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 985,
							"name": "mode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 986,
							"name": "rawArray",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 987,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 989,
									"name": "errorMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 105,
											"character": 21
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 988,
									"name": "sanitizedArray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/redux/files-transforms.ts",
											"line": 104,
											"character": 22
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"defaultValue": "sanitizedFiles"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										989,
										988
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/files-transforms.ts",
					"line": 22,
					"character": 31
				}
			]
		},
		{
			"id": 315,
			"name": "selectCleanFileIds",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 316,
					"name": "selectCleanFileIds",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 317,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 33,
					"character": 31
				}
			]
		},
		{
			"id": 386,
			"name": "selectClearSelectionOnOutsideClick",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 387,
					"name": "selectClearSelectionOnOutsideClick",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 388,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 82,
					"character": 47
				}
			]
		},
		{
			"id": 395,
			"name": "selectContextMenuConfig",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 396,
					"name": "selectContextMenuConfig",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 397,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 204,
								"name": "ContextMenuConfig"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 88,
					"character": 36
				}
			]
		},
		{
			"id": 297,
			"name": "selectContextMenuItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 298,
					"name": "selectContextMenuItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 299,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 203,
							"name": "FileActionMenuItem"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 15,
					"character": 35
				}
			]
		},
		{
			"id": 392,
			"name": "selectContextMenuMounted",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 393,
					"name": "selectContextMenuMounted",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 394,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 87,
					"character": 37
				}
			]
		},
		{
			"id": 398,
			"name": "selectContextMenuTriggerFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 399,
					"name": "selectContextMenuTriggerFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 400,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 89,
					"character": 41
				}
			]
		},
		{
			"id": 303,
			"name": "selectCurrentFolder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 304,
					"name": "selectCurrentFolder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 305,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 18,
					"character": 32
				}
			]
		},
		{
			"id": 359,
			"name": "selectDisableSelection",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 360,
					"name": "selectDisableSelection",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 361,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 68,
					"character": 35
				}
			]
		},
		{
			"id": 327,
			"name": "selectDisplayFileIds",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 328,
					"name": "selectDisplayFileIds",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 329,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Nullable"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 40,
					"character": 33
				}
			]
		},
		{
			"id": 380,
			"name": "selectDoubleClickDelay",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 381,
					"name": "selectDoubleClickDelay",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 382,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 80,
					"character": 35
				}
			]
		},
		{
			"id": 282,
			"name": "selectExternalFileActionHandler",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 283,
					"name": "selectExternalFileActionHandler",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 284,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 195,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								],
								"name": "GenericFileActionHandler"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 7,
					"character": 44
				}
			]
		},
		{
			"id": 291,
			"name": "selectFileActionData",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 292,
					"name": "selectFileActionData",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 293,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 12,
					"character": 33
				}
			]
		},
		{
			"id": 288,
			"name": "selectFileActionIds",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 289,
					"name": "selectFileActionIds",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 290,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 11,
					"character": 32
				}
			]
		},
		{
			"id": 285,
			"name": "selectFileActionMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 286,
					"name": "selectFileActionMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 287,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 175,
						"name": "FileActionMap"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 10,
					"character": 32
				}
			]
		},
		{
			"id": 318,
			"name": "selectFileData",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 319,
					"name": "selectFileData",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 320,
							"name": "fileId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 34,
					"character": 27
				}
			]
		},
		{
			"id": 312,
			"name": "selectFileMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 313,
					"name": "selectFileMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 314,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 99,
						"name": "FileMap"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 32,
					"character": 26
				}
			]
		},
		{
			"id": 362,
			"name": "selectFileViewConfig",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 363,
					"name": "selectFileViewConfig",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 364,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 120,
						"name": "FileViewConfig"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 70,
					"character": 33
				}
			]
		},
		{
			"id": 330,
			"name": "selectFocusSearchInput",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 331,
					"name": "selectFocusSearchInput",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 332,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 333,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 334,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 42,
					"character": 35
				}
			]
		},
		{
			"id": 300,
			"name": "selectFolderChain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 301,
					"name": "selectFolderChain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 302,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 94,
						"name": "FileArray"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 17,
					"character": 30
				}
			]
		},
		{
			"id": 324,
			"name": "selectHiddenFileCount",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 325,
					"name": "selectHiddenFileCount",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 326,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 38,
					"character": 34
				}
			]
		},
		{
			"id": 321,
			"name": "selectHiddenFileIdMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 322,
					"name": "selectHiddenFileIdMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 323,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "FileIdTrueMap"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 37,
					"character": 34
				}
			]
		},
		{
			"id": 279,
			"name": "selectInstanceId",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 280,
					"name": "selectInstanceId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 281,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 6,
					"character": 29
				}
			]
		},
		{
			"id": 383,
			"name": "selectIsDnDDisabled",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 384,
					"name": "selectIsDnDDisabled",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 385,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 81,
					"character": 32
				}
			]
		},
		{
			"id": 347,
			"name": "selectIsFileSelected",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 348,
					"name": "selectIsFileSelected",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 349,
							"name": "fileId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 50,
					"character": 33
				}
			]
		},
		{
			"id": 389,
			"name": "selectLastClickIndex",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 390,
					"name": "selectLastClickIndex",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 391,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 85,
					"character": 33
				}
			]
		},
		{
			"id": 371,
			"name": "selectOptionMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 372,
					"name": "selectOptionMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 373,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 208,
						"name": "OptionMap"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 75,
					"character": 28
				}
			]
		},
		{
			"id": 374,
			"name": "selectOptionValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 375,
					"name": "selectOptionValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 376,
							"name": "optionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 76,
					"character": 30
				}
			]
		},
		{
			"id": 306,
			"name": "selectParentFolder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 307,
					"name": "selectParentFolder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 308,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 72,
								"name": "FileData"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 24,
					"character": 31
				}
			]
		},
		{
			"id": 309,
			"name": "selectRawFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 310,
					"name": "selectRawFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 311,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 31,
					"character": 27
				}
			]
		},
		{
			"id": 335,
			"name": "selectSearchString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 336,
					"name": "selectSearchString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 337,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 43,
					"character": 31
				}
			]
		},
		{
			"id": 341,
			"name": "selectSelectedFileIds",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 342,
					"name": "selectSelectedFileIds",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 343,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 46,
					"character": 34
				}
			]
		},
		{
			"id": 350,
			"name": "selectSelectedFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 351,
					"name": "selectSelectedFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 352,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 72,
							"name": "FileData"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 52,
					"character": 32
				}
			]
		},
		{
			"id": 353,
			"name": "selectSelectedFilesForAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 354,
					"name": "selectSelectedFilesForAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 355,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 56,
					"character": 41
				}
			]
		},
		{
			"id": 356,
			"name": "selectSelectedFilesForActionCount",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 357,
					"name": "selectSelectedFilesForActionCount",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 358,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 65,
					"character": 46
				}
			]
		},
		{
			"id": 338,
			"name": "selectSelectionMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 339,
					"name": "selectSelectionMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 340,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "FileIdTrueMap"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 45,
					"character": 31
				}
			]
		},
		{
			"id": 344,
			"name": "selectSelectionSize",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 345,
					"name": "selectSelectionSize",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 346,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 48,
					"character": 32
				}
			]
		},
		{
			"id": 365,
			"name": "selectSortActionId",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 366,
					"name": "selectSortActionId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 367,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 72,
					"character": 31
				}
			]
		},
		{
			"id": 368,
			"name": "selectSortOrder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 369,
					"name": "selectSortOrder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 370,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 121,
						"name": "SortOrder"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 73,
					"character": 28
				}
			]
		},
		{
			"id": 377,
			"name": "selectThumbnailGenerator",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 378,
					"name": "selectThumbnailGenerator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 379,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 227,
								"name": "ThumbnailGenerator"
							}
						],
						"name": "Nullable"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 79,
					"character": 37
				}
			]
		},
		{
			"id": 294,
			"name": "selectToolbarItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 295,
					"name": "selectToolbarItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 296,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 237,
								"name": "RootState"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 203,
							"name": "FileActionMenuItem"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/selectors.ts",
					"line": 14,
					"character": 31
				}
			]
		},
		{
			"id": 1268,
			"name": "setChonkyDefaults",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1269,
					"name": "setChonkyDefaults",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1270,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1254,
										"name": "ChonkyConfig"
									}
								],
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/default-config.ts",
					"line": 36,
					"character": 30
				}
			]
		},
		{
			"id": 1018,
			"name": "thunkActivateSortAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1019,
					"name": "thunkActivateSortAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1020,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nilable"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 153,
					"character": 36
				}
			]
		},
		{
			"id": 1024,
			"name": "thunkApplySelectionTransform",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1025,
					"name": "thunkApplySelectionTransform",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1026,
							"name": "action",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 128,
								"name": "FileAction"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 188,
					"character": 41
				}
			]
		},
		{
			"id": 1027,
			"name": "thunkDispatchFileAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Thunk that dispatches actions to the external (user-provided) action handler."
			},
			"signatures": [
				{
					"id": 1028,
					"name": "thunkDispatchFileAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Thunk that dispatches actions to the external (user-provided) action handler."
					},
					"parameters": [
						{
							"id": 1029,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 179,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								],
								"name": "FileActionData"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/dispatchers.thunks.ts",
					"line": 24,
					"character": 36
				}
			]
		},
		{
			"id": 1030,
			"name": "thunkRequestFileAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Thunk that is used by internal components (and potentially the user) to \"request\"\nactions. When action is requested, Chonky \"prepares\" the action data by extracting it\nfrom Redux state. Once action data is ready, Chonky executes some side effect and/or\ndispatches the action to the external action handler."
			},
			"signatures": [
				{
					"id": 1031,
					"name": "thunkRequestFileAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Thunk that is used by internal components (and potentially the user) to \"request\"\nactions. When action is requested, Chonky \"prepares\" the action data by extracting it\nfrom Redux state. Once action data is ready, Chonky executes some side effect and/or\ndispatches the action to the external action handler."
					},
					"typeParameter": [
						{
							"id": 1032,
							"name": "Action",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 128,
								"name": "FileAction"
							}
						}
					],
					"parameters": [
						{
							"id": 1033,
							"name": "action",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "Action",
								"constraint": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						},
						{
							"id": 1034,
							"name": "payload",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "__payloadType"
								},
								"objectType": {
									"type": "typeParameter",
									"name": "Action",
									"constraint": {
										"type": "reference",
										"id": 128,
										"name": "FileAction"
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/dispatchers.thunks.ts",
					"line": 53,
					"character": 35
				}
			]
		},
		{
			"id": 996,
			"name": "thunkSortFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 997,
					"name": "thunkSortFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 46,
					"character": 27
				}
			]
		},
		{
			"id": 1021,
			"name": "thunkToggleOption",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1022,
					"name": "thunkToggleOption",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1023,
							"name": "optionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 177,
					"character": 30
				}
			]
		},
		{
			"id": 1015,
			"name": "thunkUpdateDefaultFileViewActionId",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1016,
					"name": "thunkUpdateDefaultFileViewActionId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1017,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Nilable"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 143,
					"character": 47
				}
			]
		},
		{
			"id": 1000,
			"name": "thunkUpdateDisplayFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1001,
					"name": "thunkUpdateDisplayFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 138,
					"character": 36
				}
			]
		},
		{
			"id": 998,
			"name": "thunkUpdateHiddenFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 999,
					"name": "thunkUpdateHiddenFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 98,
					"character": 35
				}
			]
		},
		{
			"id": 1008,
			"name": "thunkUpdateRawFileActions",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1009,
					"name": "thunkUpdateRawFileActions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1010,
							"name": "rawFileActions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 1011,
							"name": "disableDefaultFileActions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Nilable"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 42,
					"character": 38
				}
			]
		},
		{
			"id": 993,
			"name": "thunkUpdateRawFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 994,
					"name": "thunkUpdateRawFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 995,
							"name": "rawFiles",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 94,
										"name": "FileArray"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 31,
					"character": 32
				}
			]
		},
		{
			"id": 990,
			"name": "thunkUpdateRawFolderChain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 991,
					"name": "thunkUpdateRawFolderChain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 992,
							"name": "rawFolderChain",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 94,
												"name": "FileArray"
											}
										],
										"name": "Nullable"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 18,
					"character": 38
				}
			]
		},
		{
			"id": 1002,
			"name": "thunkUpdateSearchString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1003,
					"name": "thunkUpdateSearchString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1004,
							"name": "searchString",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/files.thunks.ts",
					"line": 145,
					"character": 36
				}
			]
		},
		{
			"id": 1012,
			"name": "thunkUpdateToolbarNContextMenuItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1013,
					"name": "thunkUpdateToolbarNContextMenuItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1014,
							"name": "fileActions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 128,
									"name": "FileAction"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 276,
						"name": "ChonkyThunk"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/file-actions.thunks.ts",
					"line": 84,
					"character": 48
				}
			]
		},
		{
			"id": 1035,
			"name": "triggerDispatchAfterEffect",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1036,
					"name": "triggerDispatchAfterEffect",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1037,
							"name": "Action",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 128,
								"name": "FileAction"
							}
						}
					],
					"parameters": [
						{
							"id": 1038,
							"name": "dispatch",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 278,
								"name": "ChonkyDispatch"
							}
						},
						{
							"id": 1039,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 179,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Action",
										"constraint": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									}
								],
								"name": "FileActionData"
							}
						},
						{
							"id": 1040,
							"name": "effectResult",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Undefinable"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/thunks/dispatchers.thunks.ts",
					"line": 161,
					"character": 39
				}
			]
		},
		{
			"id": 1198,
			"name": "useChonkyStore",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1199,
					"name": "useChonkyStore",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1200,
							"name": "chonkyInstanceId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 237,
								"name": "RootState"
							},
							{
								"type": "reference",
								"name": "AnyAction"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1201,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															}
														}
													},
													{
														"type": "reference",
														"id": 237,
														"name": "RootState"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "AnyAction"
															}
														],
														"name": "Dispatch"
													}
												],
												"name": "Middleware"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 237,
														"name": "RootState"
													},
													{
														"type": "reference",
														"name": "AnyAction"
													},
													{
														"type": "reference",
														"id": 1183,
														"name": "ThunkExtraArgument"
													}
												],
												"name": "ThunkMiddleware"
											}
										]
									}
								],
								"name": "MiddlewareArray"
							}
						],
						"name": "EnhancedStore"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/store.ts",
					"line": 12,
					"character": 27
				}
			]
		},
		{
			"id": 1528,
			"name": "useClickHandler",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1529,
					"name": "useClickHandler",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1530,
							"name": "onSingleClick",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1555,
										"name": "MouseClickEventHandler"
									}
								],
								"name": "Nilable"
							}
						},
						{
							"id": 1531,
							"name": "onDoubleClick",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1555,
										"name": "MouseClickEventHandler"
									}
								],
								"name": "Nilable"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper-hooks.tsx",
					"line": 19,
					"character": 28
				}
			]
		},
		{
			"id": 1388,
			"name": "useContextMenuDismisser",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1389,
					"name": "useContextMenuDismisser",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FileContextMenu-hooks.ts",
					"line": 55,
					"character": 36
				}
			]
		},
		{
			"id": 1386,
			"name": "useContextMenuTrigger",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1387,
					"name": "useContextMenuTrigger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FileContextMenu-hooks.ts",
					"line": 26,
					"character": 34
				}
			]
		},
		{
			"id": 1214,
			"name": "useDTE",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "DTE - DispatchThunkEffect. This method is used to decrease code duplication in\nmain Chonky method."
			},
			"signatures": [
				{
					"id": 1215,
					"name": "useDTE",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "DTE - DispatchThunkEffect. This method is used to decrease code duplication in\nmain Chonky method."
					},
					"typeParameter": [
						{
							"id": 1216,
							"name": "Args",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Array"
							}
						},
						{
							"id": 1217,
							"name": "Value",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1218,
							"name": "actionCreator",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1219,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1220,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1221,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "typeParameter",
														"name": "Args",
														"constraint": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Array"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/store.ts",
											"line": 56,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 1222,
							"name": "selectorParams",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"type": {
								"type": "typeParameter",
								"name": "Args",
								"constraint": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Array"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/store.ts",
					"line": 55,
					"character": 19
				}
			]
		},
		{
			"id": 1166,
			"name": "useDebounce",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1167,
					"name": "useDebounce",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1168,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1169,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 1170,
							"name": "delay",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "React.SetStateAction"
									}
								],
								"name": "React.Dispatch"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/hooks-helpers.ts",
					"line": 3,
					"character": 24
				}
			]
		},
		{
			"id": 1513,
			"name": "useDndHoverOpen",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1514,
					"name": "useDndHoverOpen",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1515,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1516,
							"name": "dndState",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1475,
								"name": "DndEntryState"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/dnd.ts",
					"line": 198,
					"character": 28
				}
			]
		},
		{
			"id": 1612,
			"name": "useDndIcon",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1613,
					"name": "useDndIcon",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1614,
							"name": "dndState",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1475,
								"name": "DndEntryState"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "reference",
								"id": 5,
								"name": "dndDragging"
							},
							{
								"type": "reference",
								"id": 6,
								"name": "dndCanDrop"
							},
							{
								"type": "reference",
								"id": 7,
								"name": "dndCannotDrop"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 74,
					"character": 23
				}
			]
		},
		{
			"id": 1443,
			"name": "useFileActionProps",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1444,
					"name": "useFileActionProps",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1445,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1446,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1448,
									"name": "active",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions.ts",
											"line": 32,
											"character": 52
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1449,
									"name": "disabled",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions.ts",
											"line": 32,
											"character": 71
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1447,
									"name": "icon",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/file-actions.ts",
											"line": 32,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 1,
														"name": "ChonkyIconName"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Nullable"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1448,
										1449,
										1447
									]
								}
							],
							"sources": [
								{
									"fileName": "src/util/file-actions.ts",
									"line": 32,
									"character": 2
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/file-actions.ts",
					"line": 30,
					"character": 31
				}
			]
		},
		{
			"id": 1440,
			"name": "useFileActionTrigger",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1441,
					"name": "useFileActionTrigger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1442,
							"name": "fileActionId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/file-actions.ts",
					"line": 21,
					"character": 33
				}
			]
		},
		{
			"id": 1378,
			"name": "useFileBrowserHandle",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1379,
					"name": "useFileBrowserHandle",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1380,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1223,
										"name": "FileBrowserHandle"
									}
								],
								"name": "React.Ref"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/file-browser-handle.ts",
					"line": 11,
					"character": 33
				}
			]
		},
		{
			"id": 1627,
			"name": "useFileClickHandlers",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1628,
					"name": "useFileClickHandlers",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1629,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1630,
							"name": "displayIndex",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1631,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1633,
									"name": "onDoubleClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/file-list/FileEntry-hooks.tsx",
											"line": 233,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									}
								},
								{
									"id": 1634,
									"name": "onKeyboardClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/file-list/FileEntry-hooks.tsx",
											"line": 234,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									}
								},
								{
									"id": 1632,
									"name": "onSingleClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/file-list/FileEntry-hooks.tsx",
											"line": 232,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1633,
										1634,
										1632
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 178,
					"character": 33
				}
			]
		},
		{
			"id": 1488,
			"name": "useFileDrag",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1489,
					"name": "useFileDrag",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1490,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1491,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1492,
									"name": "dndIsDragging",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 105,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1493,
									"name": "drag",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 105,
											"character": 32
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DragSourceOptions"
											}
										],
										"name": "DragElementWrapper"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1492,
										1493
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/dnd.ts",
					"line": 27,
					"character": 24
				}
			]
		},
		{
			"id": 1494,
			"name": "useFileDrop",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1495,
					"name": "useFileDrop",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1496,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"originalName": "__0",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1497,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1498,
											"name": "file",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/dnd.ts",
													"line": 115,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 72,
														"name": "FileData"
													}
												],
												"name": "Nullable"
											}
										},
										{
											"id": 1499,
											"name": "forceDisableDrop",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/dnd.ts",
													"line": 116,
													"character": 20
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										},
										{
											"id": 1500,
											"name": "includeChildrenDrops",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/util/dnd.ts",
													"line": 117,
													"character": 24
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1498,
												1499,
												1500
											]
										}
									],
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 114,
											"character": 28
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1501,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1504,
									"name": "dndCanDrop",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 177,
											"character": 52
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1502,
									"name": "dndIsOver",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 177,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1503,
									"name": "dndIsOverCurrent",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 177,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1505,
									"name": "drop",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 177,
											"character": 58
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DragElementWrapper"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1504,
										1502,
										1503,
										1505
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/dnd.ts",
					"line": 114,
					"character": 24
				}
			]
		},
		{
			"id": 1506,
			"name": "useFileEntryDnD",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1507,
					"name": "useFileEntryDnD",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1508,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1509,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1512,
									"name": "dndState",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 194,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 1475,
										"name": "DndEntryState"
									}
								},
								{
									"id": 1511,
									"name": "drag",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 193,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DragSourceOptions"
											}
										],
										"name": "DragElementWrapper"
									}
								},
								{
									"id": 1510,
									"name": "drop",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/util/dnd.ts",
											"line": 192,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DragElementWrapper"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1512,
										1511,
										1510
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/dnd.ts",
					"line": 180,
					"character": 28
				}
			]
		},
		{
			"id": 1604,
			"name": "useFileEntryHtmlProps",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1605,
					"name": "useFileEntryHtmlProps",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1606,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLDivElement"
							}
						],
						"name": "HTMLProps"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 31,
					"character": 34
				}
			]
		},
		{
			"id": 1607,
			"name": "useFileEntryState",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1608,
					"name": "useFileEntryState",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1609,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						},
						{
							"id": 1610,
							"name": "selected",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1611,
							"name": "focused",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1581,
						"name": "FileEntryState"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 47,
					"character": 30
				}
			]
		},
		{
			"id": 1618,
			"name": "useFileNameComponent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1619,
					"name": "useFileNameComponent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1620,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 110,
					"character": 33
				}
			]
		},
		{
			"id": 1473,
			"name": "useFolderChainItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1474,
					"name": "useFolderChainItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1467,
							"name": "FolderChainItem"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/external/FileNavbar-hooks.ts",
					"line": 17,
					"character": 32
				}
			]
		},
		{
			"id": 1273,
			"name": "useIconData",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1274,
					"name": "useIconData",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1275,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 63,
						"name": "FileIconData"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/icon-helper.ts",
					"line": 114,
					"character": 24
				}
			]
		},
		{
			"id": 1179,
			"name": "useInstanceVariable",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1180,
					"name": "useInstanceVariable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1181,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1182,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "unknown",
								"name": "T"
							}
						],
						"name": "MutableRefObject"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/hooks-helpers.ts",
					"line": 29,
					"character": 32
				}
			]
		},
		{
			"id": 1350,
			"name": "useIsMobileBreakpoint",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1351,
					"name": "useIsMobileBreakpoint",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 106,
					"character": 34
				}
			]
		},
		{
			"id": 1532,
			"name": "useKeyDownHandler",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1533,
					"name": "useKeyDownHandler",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1534,
							"name": "onKeyboardClick",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 1559,
								"name": "KeyboardClickEventHandler"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/internal/ClickableWrapper-hooks.tsx",
					"line": 66,
					"character": 30
				}
			]
		},
		{
			"id": 1615,
			"name": "useModifierIconComponents",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1616,
					"name": "useModifierIconComponents",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1617,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Element"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 88,
					"character": 38
				}
			]
		},
		{
			"id": 1202,
			"name": "useParamSelector",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Hook that can be used with parametrized selectors."
			},
			"signatures": [
				{
					"id": 1203,
					"name": "useParamSelector",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Hook that can be used with parametrized selectors."
					},
					"typeParameter": [
						{
							"id": 1204,
							"name": "Args",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Array"
							}
						},
						{
							"id": 1205,
							"name": "Value",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1206,
							"name": "parametrizedSelector",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1207,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1208,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1209,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "typeParameter",
														"name": "Args",
														"constraint": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Array"
														}
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1210,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1211,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 1212,
																	"name": "state",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 237,
																		"name": "RootState"
																	}
																}
															],
															"type": {
																"type": "typeParameter",
																"name": "Value"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/redux/store.ts",
															"line": 40,
															"character": 44
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/redux/store.ts",
											"line": 40,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 1213,
							"name": "selectorParams",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"type": {
								"type": "typeParameter",
								"name": "Args",
								"constraint": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Array"
								}
							}
						}
					],
					"type": {
						"type": "unknown",
						"name": "Value"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/store.ts",
					"line": 39,
					"character": 29
				}
			]
		},
		{
			"id": 1173,
			"name": "useStaticValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1174,
					"name": "useStaticValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1175,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 1176,
							"name": "factory",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1178,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/util/hooks-helpers.ts",
											"line": 23,
											"character": 42
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/hooks-helpers.ts",
					"line": 23,
					"character": 27
				}
			]
		},
		{
			"id": 1195,
			"name": "useStoreWatchers",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1196,
					"name": "useStoreWatchers",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1197,
							"name": "store",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 237,
										"name": "RootState"
									}
								],
								"name": "Store"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/redux/watchers.ts",
					"line": 17,
					"character": 29
				}
			]
		},
		{
			"id": 1621,
			"name": "useThumbnailUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1622,
					"name": "useThumbnailUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1623,
							"name": "file",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 72,
										"name": "FileData"
									}
								],
								"name": "Nullable"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1624,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1626,
									"name": "thumbnailLoading",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/file-list/FileEntry-hooks.tsx",
											"line": 175,
											"character": 43
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1625,
									"name": "thumbnailUrl",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/file-list/FileEntry-hooks.tsx",
											"line": 175,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Nullable"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1626,
										1625
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry-hooks.tsx",
					"line": 138,
					"character": 28
				}
			]
		},
		{
			"id": 1757,
			"name": "validateActionTypes",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1758,
					"name": "validateActionTypes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 1762,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1759,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 1760,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1761,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 128,
												"name": "FileAction"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/util/file-actions-definitions.ts",
											"line": 4,
											"character": 38
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 1763,
							"name": "actionMap",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reflection",
									"declaration": {
										"id": 1759,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExported": true
										},
										"indexSignature": [
											{
												"id": 1760,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExported": true
												},
												"parameters": [
													{
														"id": 1761,
														"name": "action",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExported": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"id": 128,
													"name": "FileAction"
												}
											}
										],
										"sources": [
											{
												"fileName": "src/util/file-actions-definitions.ts",
												"line": 4,
												"character": 38
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T",
						"constraint": {
							"type": "reflection",
							"declaration": {
								"id": 1759,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"indexSignature": [
									{
										"id": 1760,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {
											"isExported": true
										},
										"parameters": [
											{
												"id": 1761,
												"name": "action",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {
													"isExported": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 128,
											"name": "FileAction"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/util/file-actions-definitions.ts",
										"line": 4,
										"character": 38
									}
								]
							}
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/util/file-actions-definitions.ts",
					"line": 4,
					"character": 25
				}
			]
		},
		{
			"id": 629,
			"name": "ChonkyActions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/action-definitions/index.ts",
					"line": 5,
					"character": 26
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1041,
			"name": "DefaultActions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1065,
					"name": "ClearSelection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that clear the file selection."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1066,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1068,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 68,
													"character": 15
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "escape"
													}
												]
											},
											"defaultValue": "['escape']"
										},
										{
											"id": 1067,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 67,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "clear_selection"
											},
											"defaultValue": "\"clear_selection\""
										},
										{
											"id": 1075,
											"name": "selectionTransform",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 76,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 152,
												"name": "FileSelectionTransform"
											},
											"defaultValue": "(({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform"
										},
										{
											"id": 1069,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1072,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 72,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1073,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 73,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 1074,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 74,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 15,
														"name": "clearSelection"
													},
													"defaultValue": "ChonkyIconName.clearSelection"
												},
												{
													"id": 1070,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 70,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Clear selection"
													},
													"defaultValue": "\"Clear selection\""
												},
												{
													"id": 1071,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 71,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1072,
														1073,
														1074,
														1070,
														1071
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 69,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1068,
												1067,
												1075
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1069
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'clear_selection',\n        hotkeys: ['escape'],\n        button: {\n            name: 'Clear selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.clearSelection,\n        },\n        selectionTransform: (({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform,\n    } as const)"
				},
				{
					"id": 1087,
					"name": "EnableCompactView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that enables Compact view. Note that compact view is still\nexperimental and should not be used in production."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 101,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1088,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1089,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 103,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "enable_compact_view"
											},
											"defaultValue": "\"enable_compact_view\""
										},
										{
											"id": 1094,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1097,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 112,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 21,
														"name": "compact"
													},
													"defaultValue": "ChonkyIconName.compact"
												},
												{
													"id": 1098,
													"name": "iconOnly",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 113,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1095,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 110,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Switch to Compact view"
													},
													"defaultValue": "\"Switch to Compact view\""
												},
												{
													"id": 1096,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 111,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1097,
														1098,
														1095,
														1096
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 109,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1090,
											"name": "fileViewConfig",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1092,
													"name": "entryHeight",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 106,
															"character": 23
														}
													],
													"type": {
														"type": "unknown",
														"name": "40"
													},
													"defaultValue": "40"
												},
												{
													"id": 1093,
													"name": "entryWidth",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 107,
															"character": 22
														}
													],
													"type": {
														"type": "unknown",
														"name": "220"
													},
													"defaultValue": "220"
												},
												{
													"id": 1091,
													"name": "mode",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 105,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 109,
														"name": "Compact"
													},
													"defaultValue": "FileViewMode.Compact"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1092,
														1093,
														1091
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 104,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1089
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1094,
												1090
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        // TODO: Don't enable until compact view is fully supported\n        id: 'enable_compact_view',\n        fileViewConfig: {\n            mode: FileViewMode.Compact,\n            entryHeight: 40,\n            entryWidth: 220,\n        },\n        button: {\n            name: 'Switch to Compact view',\n            toolbar: true,\n            icon: ChonkyIconName.compact,\n            iconOnly: true,\n        },\n    } as const)"
				},
				{
					"id": 1099,
					"name": "EnableGridView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that enables Grid view."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 119,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1100,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1101,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 120,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "enable_grid_view"
											},
											"defaultValue": "\"enable_grid_view\""
										},
										{
											"id": 1106,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1109,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 125,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 22,
														"name": "smallThumbnail"
													},
													"defaultValue": "ChonkyIconName.smallThumbnail"
												},
												{
													"id": 1110,
													"name": "iconOnly",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 126,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1107,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 123,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Switch to Grid view"
													},
													"defaultValue": "\"Switch to Grid view\""
												},
												{
													"id": 1108,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 124,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1109,
														1110,
														1107,
														1108
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 122,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1102,
											"name": "fileViewConfig",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1105,
													"name": "entryHeight",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 121,
															"character": 79
														}
													],
													"type": {
														"type": "unknown",
														"name": "130"
													},
													"defaultValue": "130"
												},
												{
													"id": 1104,
													"name": "entryWidth",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 121,
															"character": 61
														}
													],
													"type": {
														"type": "unknown",
														"name": "165"
													},
													"defaultValue": "165"
												},
												{
													"id": 1103,
													"name": "mode",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 121,
															"character": 30
														}
													],
													"type": {
														"type": "reference",
														"id": 110,
														"name": "Grid"
													},
													"defaultValue": "FileViewMode.Grid"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1105,
														1104,
														1103
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 121,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1101
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1106,
												1102
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'enable_grid_view',\n        fileViewConfig: { mode: FileViewMode.Grid, entryWidth: 165, entryHeight: 130 },\n        button: {\n            name: 'Switch to Grid view',\n            toolbar: true,\n            icon: ChonkyIconName.smallThumbnail,\n            iconOnly: true,\n        },\n    } as const)"
				},
				{
					"id": 1076,
					"name": "EnableListView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that enables List view."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 84,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1077,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1078,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 85,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "enable_list_view"
											},
											"defaultValue": "\"enable_list_view\""
										},
										{
											"id": 1082,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1085,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 93,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 20,
														"name": "list"
													},
													"defaultValue": "ChonkyIconName.list"
												},
												{
													"id": 1086,
													"name": "iconOnly",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 94,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1083,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 91,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Switch to List view"
													},
													"defaultValue": "\"Switch to List view\""
												},
												{
													"id": 1084,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 92,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1085,
														1086,
														1083,
														1084
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 90,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1079,
											"name": "fileViewConfig",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1081,
													"name": "entryHeight",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 88,
															"character": 23
														}
													],
													"type": {
														"type": "unknown",
														"name": "30"
													},
													"defaultValue": "30"
												},
												{
													"id": 1080,
													"name": "mode",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 87,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 108,
														"name": "List"
													},
													"defaultValue": "FileViewMode.List"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1081,
														1080
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 86,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1078
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1082,
												1079
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'enable_list_view',\n        fileViewConfig: {\n            mode: FileViewMode.List,\n            entryHeight: 30,\n        },\n        button: {\n            name: 'Switch to List view',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const)"
				},
				{
					"id": 1162,
					"name": "FocusSearchInput",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that focuses the search input when it is dispatched."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 202,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1163,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1165,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 205,
													"character": 19
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "ctrl+f"
													}
												]
											},
											"defaultValue": "['ctrl+f']"
										},
										{
											"id": 1164,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 204,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "focus_search_input"
											},
											"defaultValue": "\"focus_search_input\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1165,
												1164
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'focus_search_input',\n            hotkeys: ['ctrl+f'],\n        } as const,\n        ({ getReduxState }) => {\n            const focusSearchInput = selectFocusSearchInput(getReduxState());\n            if (focusSearchInput) focusSearchInput();\n        }\n    )"
				},
				{
					"id": 1042,
					"name": "OpenSelection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that can be used to open currently selected files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 17,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1043,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1047,
											"name": "fileFilter",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 22,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 446,
												"name": "isOpenable"
											},
											"defaultValue": "FileHelper.isOpenable"
										},
										{
											"id": 1045,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 20,
													"character": 19
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "enter"
													}
												]
											},
											"defaultValue": "['enter']"
										},
										{
											"id": 1044,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 19,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "open_selection"
											},
											"defaultValue": "\"open_selection\""
										},
										{
											"id": 1046,
											"name": "requiresSelection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 21,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 1048,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1051,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 26,
															"character": 27
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1052,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 27,
															"character": 21
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 1053,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 28,
															"character": 20
														}
													],
													"type": {
														"type": "reference",
														"id": 8,
														"name": "openFiles"
													},
													"defaultValue": "ChonkyIconName.openFiles"
												},
												{
													"id": 1049,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 24,
															"character": 20
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Open selection"
													},
													"defaultValue": "\"Open selection\""
												},
												{
													"id": 1050,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 25,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1051,
														1052,
														1053,
														1049,
														1050
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 23,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1047,
												1045,
												1044,
												1046
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1048
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'open_selection',\n            hotkeys: ['enter'],\n            requiresSelection: true,\n            fileFilter: FileHelper.isOpenable,\n            button: {\n                name: 'Open selection',\n                toolbar: true,\n                contextMenu: true,\n                group: 'Actions',\n                icon: ChonkyIconName.openFiles,\n            },\n        } as const,\n        ({ state, reduxDispatch }) => {\n            reduxDispatch(\n                thunkRequestFileAction(EssentialActions.OpenFiles, {\n                    files: state.selectedFilesForAction!,\n                })\n            );\n            return undefined;\n        }\n    )"
				},
				{
					"id": 1054,
					"name": "SelectAllFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that selects all files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 43,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1055,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1057,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 45,
													"character": 15
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "ctrl+a"
													}
												]
											},
											"defaultValue": "['ctrl+a']"
										},
										{
											"id": 1056,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 44,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "select_all_files"
											},
											"defaultValue": "\"select_all_files\""
										},
										{
											"id": 1064,
											"name": "selectionTransform",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 53,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 152,
												"name": "FileSelectionTransform"
											},
											"defaultValue": "(({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map((fileId) => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform"
										},
										{
											"id": 1058,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1061,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 49,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1062,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 50,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 1063,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 51,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 14,
														"name": "selectAllFiles"
													},
													"defaultValue": "ChonkyIconName.selectAllFiles"
												},
												{
													"id": 1059,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 47,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Select all files"
													},
													"defaultValue": "\"Select all files\""
												},
												{
													"id": 1060,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 48,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1061,
														1062,
														1063,
														1059,
														1060
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 46,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1057,
												1056,
												1064
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1058
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'select_all_files',\n        hotkeys: ['ctrl+a'],\n        button: {\n            name: 'Select all files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.selectAllFiles,\n        },\n        selectionTransform: (({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map((fileId) => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform,\n    } as const)"
				},
				{
					"id": 1131,
					"name": "SortFilesByDate",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that sorts files by `file.modDate`."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 157,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1132,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1133,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 158,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "sort_files_by_date"
											},
											"defaultValue": "\"sort_files_by_date\""
										},
										{
											"id": 1134,
											"name": "sortKeySelector",
											"kind": 64,
											"kindString": "Function",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1135,
													"name": "sortKeySelector",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1136,
															"name": "file",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 72,
																		"name": "FileData"
																	}
																],
																"name": "Nullable"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Date"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 159,
													"character": 23
												}
											]
										},
										{
											"id": 1137,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1140,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 164,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Options"
													},
													"defaultValue": "\"Options\""
												},
												{
													"id": 1138,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 162,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Sort by date"
													},
													"defaultValue": "\"Sort by date\""
												},
												{
													"id": 1139,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 163,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1140,
														1138,
														1139
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 161,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1133
											]
										},
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1134
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1137
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'sort_files_by_date',\n        sortKeySelector: (file: Nullable<FileData>) =>\n            file ? file.modDate : undefined,\n        button: {\n            name: 'Sort by date',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const)"
				},
				{
					"id": 1111,
					"name": "SortFilesByName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that sorts files by `file.name`."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 132,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1112,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1113,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 133,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "sort_files_by_name"
											},
											"defaultValue": "\"sort_files_by_name\""
										},
										{
											"id": 1114,
											"name": "sortKeySelector",
											"kind": 64,
											"kindString": "Function",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1115,
													"name": "sortKeySelector",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1116,
															"name": "file",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 72,
																		"name": "FileData"
																	}
																],
																"name": "Nullable"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 134,
													"character": 23
												}
											]
										},
										{
											"id": 1117,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1120,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 139,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Options"
													},
													"defaultValue": "\"Options\""
												},
												{
													"id": 1118,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 137,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Sort by name"
													},
													"defaultValue": "\"Sort by name\""
												},
												{
													"id": 1119,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 138,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1120,
														1118,
														1119
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 136,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1113
											]
										},
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1114
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1117
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'sort_files_by_name',\n        sortKeySelector: (file: Nullable<FileData>) =>\n            file ? file.name.toLowerCase() : undefined,\n        button: {\n            name: 'Sort by name',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const)"
				},
				{
					"id": 1121,
					"name": "SortFilesBySize",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that sorts files by `file.size`."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 145,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1122,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1123,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 146,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "sort_files_by_size"
											},
											"defaultValue": "\"sort_files_by_size\""
										},
										{
											"id": 1124,
											"name": "sortKeySelector",
											"kind": 64,
											"kindString": "Function",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1125,
													"name": "sortKeySelector",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1126,
															"name": "file",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 72,
																		"name": "FileData"
																	}
																],
																"name": "Nullable"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 147,
													"character": 23
												}
											]
										},
										{
											"id": 1127,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1130,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 151,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Options"
													},
													"defaultValue": "\"Options\""
												},
												{
													"id": 1128,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 149,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Sort by size"
													},
													"defaultValue": "\"Sort by size\""
												},
												{
													"id": 1129,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 150,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1130,
														1128,
														1129
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 148,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1123
											]
										},
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												1124
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1127
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'sort_files_by_size',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.size : undefined),\n        button: {\n            name: 'Sort by size',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const)"
				},
				{
					"id": 1141,
					"name": "ToggleHiddenFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that toggles whether hidden files are shown to the user or not."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 170,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1142,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1144,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 172,
													"character": 15
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "ctrl+h"
													}
												]
											},
											"defaultValue": "['ctrl+h']"
										},
										{
											"id": 1143,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 171,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "toggle_hidden_files"
											},
											"defaultValue": "\"toggle_hidden_files\""
										},
										{
											"id": 1148,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1151,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 180,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Options"
													},
													"defaultValue": "\"Options\""
												},
												{
													"id": 1149,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 178,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Show hidden files"
													},
													"defaultValue": "\"Show hidden files\""
												},
												{
													"id": 1150,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 179,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1151,
														1149,
														1150
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 177,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1145,
											"name": "option",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1147,
													"name": "defaultValue",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 175,
															"character": 24
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1146,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 174,
															"character": 14
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "show_hidden_files"
													},
													"defaultValue": "\"show_hidden_files\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1147,
														1146
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 173,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1144,
												1143
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1148,
												1145
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'toggle_hidden_files',\n        hotkeys: ['ctrl+h'],\n        option: {\n            id: 'show_hidden_files',\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show hidden files',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const)"
				},
				{
					"id": 1152,
					"name": "ToggleShowFoldersFirst",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that toggles whether folders should appear before files regardless of\ncurrent sort function."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/default.ts",
							"line": 187,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1153,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1154,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 188,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "toggle_show_folders_first"
											},
											"defaultValue": "\"toggle_show_folders_first\""
										},
										{
											"id": 1158,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1161,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 196,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Options"
													},
													"defaultValue": "\"Options\""
												},
												{
													"id": 1159,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 194,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Show folders first"
													},
													"defaultValue": "\"Show folders first\""
												},
												{
													"id": 1160,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 195,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1161,
														1159,
														1160
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 193,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1155,
											"name": "option",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1157,
													"name": "defaultValue",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 191,
															"character": 24
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 1156,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/default.ts",
															"line": 190,
															"character": 14
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "show_folders_first"
													},
													"defaultValue": "\"show_folders_first\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1157,
														1156
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/default.ts",
													"line": 189,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1154
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1158,
												1155
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'toggle_show_folders_first',\n        option: {\n            id: 'show_folders_first',\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show folders first',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const)"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1065,
						1087,
						1099,
						1076,
						1162,
						1042,
						1054,
						1131,
						1111,
						1121,
						1141,
						1152
					]
				}
			],
			"sources": [
				{
					"fileName": "src/action-definitions/default.ts",
					"line": 13,
					"character": 27
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 535,
			"name": "EssentialActions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 556,
					"name": "ChangeSelection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when the selection changes for any reason."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 209,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 557,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 559,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 211,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 504,
												"name": "ChangeSelectionPayload"
											},
											"defaultValue": "{} as ChangeSelectionPayload"
										},
										{
											"id": 558,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 210,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "change_selection"
											},
											"defaultValue": "\"change_selection\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												559,
												558
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'change_selection',\n        __payloadType: {} as ChangeSelectionPayload,\n    } as const)"
				},
				{
					"id": 548,
					"name": "EndDragNDrop",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when user either cancels the drag & drop interaction,\nor drops a file somewhere."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 176,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 549,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 551,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 179,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 497,
												"name": "EndDragNDropPayload"
											},
											"defaultValue": "{} as EndDragNDropPayload"
										},
										{
											"id": 550,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 178,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "end_drag_n_drop"
											},
											"defaultValue": "\"end_drag_n_drop\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												551,
												550
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'end_drag_n_drop',\n            __payloadType: {} as EndDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (getIsFileSelected(getReduxState(), payload.destination)) {\n                // Can't drop a selection into itself\n                return;\n            }\n\n            const { draggedFile, selectedFiles } = payload as EndDragNDropPayload;\n            const droppedFiles =\n                selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n            reduxDispatch(\n                thunkRequestFileAction(ChonkyActions.MoveFiles, {\n                    ...payload,\n                    files: droppedFiles,\n                })\n            );\n        }\n    )"
				},
				{
					"id": 540,
					"name": "KeyboardClickFile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when the user \"clicks\" on a file using their keyboard.\nUsing Space and Enter keys counts as clicking."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 121,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 541,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 543,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 124,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 477,
												"name": "KeyboardClickFilePayload"
											},
											"defaultValue": "{} as KeyboardClickFilePayload"
										},
										{
											"id": 542,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 123,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "keyboard_click_file"
											},
											"defaultValue": "\"keyboard_click_file\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												543,
												542
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'keyboard_click_file',\n            __payloadType: {} as KeyboardClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            reduxDispatch(reduxActions.setLastClickIndex(payload.fileDisplayIndex));\n            if (payload.enterKey) {\n                // We only dispatch the Open Files action here when the selection is\n                // empty. Otherwise, `Enter` key presses are handled by the\n                // hotkey manager for the Open Files action.\n                if (selectSelectionSize(getReduxState()) === 0) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n                reduxDispatch(\n                    reduxActions.toggleSelection({\n                        fileId: payload.file.id,\n                        exclusive: payload.ctrlKey,\n                    })\n                );\n            }\n        }\n    )"
				},
				{
					"id": 536,
					"name": "MouseClickFile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when the user clicks on a file entry using their mouse.\nBoth single clicks and double clicks trigger this action."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 32,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 537,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 539,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 35,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 470,
												"name": "MouseClickFilePayload"
											},
											"defaultValue": "{} as MouseClickFilePayload"
										},
										{
											"id": 538,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 34,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "mouse_click_file"
											},
											"defaultValue": "\"mouse_click_file\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												539,
												538
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'mouse_click_file',\n            __payloadType: {} as MouseClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (payload.clickType === 'double') {\n                if (FileHelper.isOpenable(payload.file)) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n\n                            // To simulate Windows Explorer and Nautilus behaviour,\n                            // a double click on a file only opens that file even if\n                            // there is a selection.\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else {\n                // We're dealing with a single click\n\n                const disableSelection = selectDisableSelection(getReduxState());\n                if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n                    if (payload.ctrlKey) {\n                        // Multiple selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: false,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex(payload.fileDisplayIndex)\n                        );\n                    } else if (payload.shiftKey) {\n                        // Range selection\n                        const lastClickIndex = selectLastClickIndex(getReduxState());\n                        if (typeof lastClickIndex === 'number') {\n                            // We have the index of the previous click\n                            let rangeStart = lastClickIndex;\n                            let rangeEnd = payload.fileDisplayIndex;\n                            if (rangeStart > rangeEnd) {\n                                [rangeStart, rangeEnd] = [rangeEnd, rangeStart];\n                            }\n\n                            reduxDispatch(\n                                reduxActions.selectRange({ rangeStart, rangeEnd })\n                            );\n                        } else {\n                            // Since we can't do a range selection, do a\n                            // multiple selection\n                            reduxDispatch(\n                                reduxActions.toggleSelection({\n                                    fileId: payload.file.id,\n                                    exclusive: false,\n                                })\n                            );\n                            reduxDispatch(\n                                reduxActions.setLastClickIndex(payload.fileDisplayIndex)\n                            );\n                        }\n                    } else {\n                        // Exclusive selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: true,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex(payload.fileDisplayIndex)\n                        );\n                    }\n                } else {\n                    if (!payload.ctrlKey && !disableSelection) {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                    reduxDispatch(\n                        reduxActions.setLastClickIndex(payload.fileDisplayIndex)\n                    );\n                }\n            }\n        }\n    )"
				},
				{
					"id": 552,
					"name": "MoveFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when user moves files from one folder to another,\nusually by dragging & dropping some files into the folder."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 202,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 553,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 555,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 204,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 501,
												"name": "MoveFilesPayload"
											},
											"defaultValue": "{} as MoveFilesPayload"
										},
										{
											"id": 554,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 203,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "move_files"
											},
											"defaultValue": "\"move_files\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												555,
												554
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'move_files',\n        __payloadType: {} as MoveFilesPayload,\n    } as const)"
				},
				{
					"id": 574,
					"name": "OpenFileContextMenu",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when user opens the context menu, either by right click\non something or using the context menu button on their keyboard."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 257,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 575,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 577,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 260,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 493,
												"name": "OpenFileContextMenuPayload"
											},
											"defaultValue": "{} as OpenFileContextMenuPayload"
										},
										{
											"id": 576,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 259,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "open_file_context_menu"
											},
											"defaultValue": "\"open_file_context_menu\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												577,
												576
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'open_file_context_menu',\n            __payloadType: {} as OpenFileContextMenuPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            // TODO: Check if the context menu component is actually enabled. There is a\n            //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n            //  the action will simply have no effect. It also allows users to provide\n            //  their own components - however, users could also flip the \"context menu\n            //  component mounted\" switch...\n            const triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n            if (triggerFile) {\n                const fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n                if (!fileSelected) {\n                    // If file is selected, we leave the selection as is. If it is not\n                    // selected, it means user right clicked the file with no selection.\n                    // We simulate the Windows Explorer/Nautilus behaviour of moving\n                    // selection to this file.\n                    if (FileHelper.isSelectable(triggerFile)) {\n                        reduxDispatch(\n                            reduxActions.selectFiles({\n                                fileIds: [payload.triggerFileId],\n                                reset: true,\n                            })\n                        );\n                    } else {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                }\n            }\n\n            reduxDispatch(\n                reduxActions.showContextMenu({\n                    triggerFileId: payload.triggerFileId,\n                    mouseX: payload.clientX - 2,\n                    mouseY: payload.clientY - 4,\n                })\n            );\n        }\n    )"
				},
				{
					"id": 560,
					"name": "OpenFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when user wants to open some files. This action is\noften triggered by other actions."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 217,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 561,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 563,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 219,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 490,
												"name": "OpenFilesPayload"
											},
											"defaultValue": "{} as OpenFilesPayload"
										},
										{
											"id": 562,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 218,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "open_files"
											},
											"defaultValue": "\"open_files\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												563,
												562
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'open_files',\n        __payloadType: {} as OpenFilesPayload,\n    } as const)"
				},
				{
					"id": 564,
					"name": "OpenParentFolder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is triggered when user wants to go up a directory."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 224,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 565,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 567,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 227,
													"character": 19
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "backspace"
													}
												]
											},
											"defaultValue": "['backspace']"
										},
										{
											"id": 566,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 226,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "open_parent_folder"
											},
											"defaultValue": "\"open_parent_folder\""
										},
										{
											"id": 568,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 571,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/essential.ts",
															"line": 231,
															"character": 27
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "false"
													},
													"defaultValue": "false"
												},
												{
													"id": 572,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/essential.ts",
															"line": 232,
															"character": 20
														}
													],
													"type": {
														"type": "reference",
														"id": 9,
														"name": "openParentFolder"
													},
													"defaultValue": "ChonkyIconName.openParentFolder"
												},
												{
													"id": 573,
													"name": "iconOnly",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/essential.ts",
															"line": 233,
															"character": 24
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 569,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/essential.ts",
															"line": 229,
															"character": 20
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Go up a directory"
													},
													"defaultValue": "\"Go up a directory\""
												},
												{
													"id": 570,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/essential.ts",
															"line": 230,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														571,
														572,
														573,
														569,
														570
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 228,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												567,
												566
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												568
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'open_parent_folder',\n            hotkeys: ['backspace'],\n            button: {\n                name: 'Go up a directory',\n                toolbar: true,\n                contextMenu: false,\n                icon: ChonkyIconName.openParentFolder,\n                iconOnly: true,\n            },\n        } as const,\n        ({ reduxDispatch, getReduxState }) => {\n            const parentFolder = selectParentFolder(getReduxState());\n            if (FileHelper.isOpenable(parentFolder)) {\n                reduxDispatch(\n                    thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                        targetFile: parentFolder,\n                        files: [parentFolder],\n                    })\n                );\n            } else {\n                Logger.warn(\n                    'Open parent folder effect was triggered  even though the parent folder' +\n                        ' is not openable. This indicates a bug in presentation components.'\n                );\n            }\n        }\n    )"
				},
				{
					"id": 544,
					"name": "StartDragNDrop",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that is dispatched when user starts dragging some file."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/essential.ts",
							"line": 153,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 545,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 547,
											"name": "__payloadType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 156,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 485,
												"name": "StartDragNDropPayload"
											},
											"defaultValue": "{} as StartDragNDropPayload"
										},
										{
											"id": 546,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/essential.ts",
													"line": 155,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "start_drag_n_drop"
											},
											"defaultValue": "\"start_drag_n_drop\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												547,
												546
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction(\n        {\n            id: 'start_drag_n_drop',\n            __payloadType: {} as StartDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            const file = payload.draggedFile;\n            if (!getIsFileSelected(getReduxState(), file)) {\n                if (FileHelper.isSelectable(file)) {\n                    reduxDispatch(\n                        reduxActions.selectFiles({\n                            fileIds: [file.id],\n                            reset: true,\n                        })\n                    );\n                }\n            }\n        }\n    )"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						556,
						548,
						540,
						536,
						552,
						574,
						560,
						564,
						544
					]
				}
			],
			"sources": [
				{
					"fileName": "src/action-definitions/essential.ts",
					"line": 27,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 578,
			"name": "ExtraActions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 579,
					"name": "CopyFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that adds a button and shortcut to copy files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/extra.ts",
							"line": 8,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 580,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 583,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 11,
													"character": 15
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "ctrl+c"
													}
												]
											},
											"defaultValue": "['ctrl+c']"
										},
										{
											"id": 581,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 9,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "copy_files"
											},
											"defaultValue": "\"copy_files\""
										},
										{
											"id": 582,
											"name": "requiresSelection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 10,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 584,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 587,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 15,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 588,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 16,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 589,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 17,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 10,
														"name": "copy"
													},
													"defaultValue": "ChonkyIconName.copy"
												},
												{
													"id": 585,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 13,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Copy selection"
													},
													"defaultValue": "\"Copy selection\""
												},
												{
													"id": 586,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 14,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														587,
														588,
														589,
														585,
														586
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 12,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												583,
												581,
												582
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												584
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'copy_files',\n        requiresSelection: true,\n        hotkeys: ['ctrl+c'],\n        button: {\n            name: 'Copy selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.copy,\n        },\n    } as const)"
				},
				{
					"id": 590,
					"name": "CreateFolder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that adds a button to create a new folder."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/extra.ts",
							"line": 23,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 591,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 592,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 24,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "create_folder"
											},
											"defaultValue": "\"create_folder\""
										},
										{
											"id": 593,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 597,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 29,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 25,
														"name": "folderCreate"
													},
													"defaultValue": "ChonkyIconName.folderCreate"
												},
												{
													"id": 594,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 26,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Create folder"
													},
													"defaultValue": "\"Create folder\""
												},
												{
													"id": 595,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 27,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 596,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 28,
															"character": 19
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Create a folder"
													},
													"defaultValue": "\"Create a folder\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														597,
														594,
														595,
														596
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 25,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												592
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												593
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'create_folder',\n        button: {\n            name: 'Create folder',\n            toolbar: true,\n            tooltip: 'Create a folder',\n            icon: ChonkyIconName.folderCreate,\n        },\n    } as const)"
				},
				{
					"id": 617,
					"name": "DeleteFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that adds a button and shortcut to delete files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/extra.ts",
							"line": 62,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 618,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 621,
											"name": "hotkeys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 65,
													"character": 15
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "stringLiteral",
														"value": "delete"
													}
												]
											},
											"defaultValue": "['delete']"
										},
										{
											"id": 619,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 63,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "delete_files"
											},
											"defaultValue": "\"delete_files\""
										},
										{
											"id": 620,
											"name": "requiresSelection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 64,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 622,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 625,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 69,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 626,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 70,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 628,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 72,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 30,
														"name": "trash"
													},
													"defaultValue": "ChonkyIconName.trash"
												},
												{
													"id": 623,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 67,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Delete files"
													},
													"defaultValue": "\"Delete files\""
												},
												{
													"id": 624,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 68,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 627,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 71,
															"character": 19
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Delete files"
													},
													"defaultValue": "\"Delete files\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														625,
														626,
														628,
														623,
														624,
														627
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 66,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												621,
												619,
												620
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												622
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'delete_files',\n        requiresSelection: true,\n        hotkeys: ['delete'],\n        button: {\n            name: 'Delete files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            tooltip: 'Delete files',\n            icon: ChonkyIconName.trash,\n        },\n    } as const)"
				},
				{
					"id": 606,
					"name": "DownloadFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that adds a button to download files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/extra.ts",
							"line": 47,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 607,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 608,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 48,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "download_files"
											},
											"defaultValue": "\"download_files\""
										},
										{
											"id": 609,
											"name": "requiresSelection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 49,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 610,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 613,
													"name": "contextMenu",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 53,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 614,
													"name": "group",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 54,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Actions"
													},
													"defaultValue": "\"Actions\""
												},
												{
													"id": 616,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 56,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 28,
														"name": "download"
													},
													"defaultValue": "ChonkyIconName.download"
												},
												{
													"id": 611,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 51,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Download files"
													},
													"defaultValue": "\"Download files\""
												},
												{
													"id": 612,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 52,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 615,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 55,
															"character": 19
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Download files"
													},
													"defaultValue": "\"Download files\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														613,
														614,
														616,
														611,
														612,
														615
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 50,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												608,
												609
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												610
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'download_files',\n        requiresSelection: true,\n        button: {\n            name: 'Download files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            tooltip: 'Download files',\n            icon: ChonkyIconName.download,\n        },\n    } as const)"
				},
				{
					"id": 598,
					"name": "UploadFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action that adds a button to upload files."
					},
					"sources": [
						{
							"fileName": "src/action-definitions/extra.ts",
							"line": 35,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 599,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 600,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 36,
													"character": 10
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "upload_files"
											},
											"defaultValue": "\"upload_files\""
										},
										{
											"id": 601,
											"name": "button",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 605,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 41,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"id": 29,
														"name": "upload"
													},
													"defaultValue": "ChonkyIconName.upload"
												},
												{
													"id": 602,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 38,
															"character": 16
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Upload files"
													},
													"defaultValue": "\"Upload files\""
												},
												{
													"id": 603,
													"name": "toolbar",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 39,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 604,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/action-definitions/extra.ts",
															"line": 40,
															"character": 19
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "Upload files"
													},
													"defaultValue": "\"Upload files\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														605,
														602,
														603,
														604
													]
												}
											],
											"sources": [
												{
													"fileName": "src/action-definitions/extra.ts",
													"line": 37,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												600
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												601
											]
										}
									]
								}
							}
						],
						"name": "WritableProps"
					},
					"defaultValue": "defineFileAction({\n        id: 'upload_files',\n        button: {\n            name: 'Upload files',\n            toolbar: true,\n            tooltip: 'Upload files',\n            icon: ChonkyIconName.upload,\n        },\n    } as const)"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						579,
						590,
						617,
						606,
						598
					]
				}
			],
			"sources": [
				{
					"fileName": "src/action-definitions/extra.ts",
					"line": 4,
					"character": 25
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1255,
			"name": "defaultConfig",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1266,
					"name": "clearSelectionOnOutsideClick",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 32,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 1265,
					"name": "defaultFileViewActionId",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 31,
							"character": 27
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "enable_grid_view"
					},
					"defaultValue": "ChonkyActions.EnableGridView.id"
				},
				{
					"id": 1264,
					"name": "defaultSortActionId",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 30,
							"character": 23
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "sort_files_by_name"
					},
					"defaultValue": "ChonkyActions.SortFilesByName.id"
				},
				{
					"id": 1261,
					"name": "disableDefaultFileActions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 27,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1262,
					"name": "disableDragAndDrop",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 28,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1263,
					"name": "disableDragAndDropProvider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 29,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1260,
					"name": "disableSelection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 26,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1259,
					"name": "doubleClickDelay",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 25,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "300"
				},
				{
					"id": 1256,
					"name": "fileActions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 22,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 1267,
					"name": "iconComponent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 33,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 66,
								"name": "ChonkyIconProps"
							}
						],
						"name": "FC"
					},
					"defaultValue": "ChonkyIconPlaceholder"
				},
				{
					"id": 1257,
					"name": "onFileAction",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 23,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 1258,
					"name": "thumbnailGenerator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/default-config.ts",
							"line": 24,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1266,
						1265,
						1264,
						1261,
						1262,
						1263,
						1260,
						1259,
						1256,
						1267,
						1257,
						1258
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/default-config.ts",
					"line": 21,
					"character": 26
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1713,
			"name": "disabledDndState",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1716,
					"name": "dndCanDrop",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 31,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1714,
					"name": "dndIsDragging",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 29,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 1715,
					"name": "dndIsOver",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/FileEntry.tsx",
							"line": 30,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1716,
						1714,
						1715
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/FileEntry.tsx",
					"line": 28,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 766,
			"name": "initialRootState",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 784,
					"name": "cleanFileIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 25,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 807,
					"name": "clearSelectionOnOutsideClick",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 48,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 810,
					"name": "contextMenuConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 53,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 775,
					"name": "contextMenuItems",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 15,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 809,
					"name": "contextMenuMounted",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 52,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 806,
					"name": "disableDragAndDrop",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 47,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 794,
					"name": "disableSelection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 36,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					},
					"defaultValue": "false"
				},
				{
					"id": 788,
					"name": "displayFileIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 29,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 805,
					"name": "doubleClickDelay",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 46,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "300"
				},
				{
					"id": 768,
					"name": "externalFileActionHandler",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 8,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 773,
					"name": "fileActionIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 13,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 771,
					"name": "fileActionMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 12,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 772,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							}
						}
					}
				},
				{
					"id": 770,
					"name": "fileActionsErrorMessages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 11,
							"character": 28
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 783,
					"name": "fileIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 781,
					"name": "fileMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 782,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							}
						}
					}
				},
				{
					"id": 795,
					"name": "fileViewConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 38,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 796,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 799,
									"name": "entryHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/action-definitions/default.ts",
											"line": 121,
											"character": 79
										}
									],
									"type": {
										"type": "unknown",
										"name": "130"
									},
									"defaultValue": "130"
								},
								{
									"id": 798,
									"name": "entryWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/action-definitions/default.ts",
											"line": 121,
											"character": 61
										}
									],
									"type": {
										"type": "unknown",
										"name": "165"
									},
									"defaultValue": "165"
								},
								{
									"id": 797,
									"name": "mode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/action-definitions/default.ts",
											"line": 121,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 110,
										"name": "Grid"
									},
									"defaultValue": "FileViewMode.Grid"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										799,
										798,
										797
									]
								}
							]
						}
					},
					"defaultValue": "ChonkyActions.EnableGridView.fileViewConfig"
				},
				{
					"id": 780,
					"name": "filesErrorMessages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 22,
							"character": 22
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 789,
					"name": "focusSearchInput",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 31,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 778,
					"name": "folderChain",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 19,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 777,
					"name": "folderChainErrorMessages",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 18,
							"character": 28
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 786,
					"name": "hiddenFileIdMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 28,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 787,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							}
						}
					}
				},
				{
					"id": 767,
					"name": "instanceId",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 6,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"CHONKY_INVALID_ID\""
				},
				{
					"id": 808,
					"name": "lastClickIndex",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 50,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 802,
					"name": "optionMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 803,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							}
						}
					}
				},
				{
					"id": 769,
					"name": "rawFileActions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 10,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 779,
					"name": "rawFiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 776,
					"name": "rawFolderChain",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 17,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 791,
					"name": "searchMode",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 33,
							"character": 14
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "currentFolder"
					},
					"defaultValue": "\"currentFolder\""
				},
				{
					"id": 790,
					"name": "searchString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 32,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 792,
					"name": "selectionMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 35,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 793,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							}
						}
					}
				},
				{
					"id": 800,
					"name": "sortActionId",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 40,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 801,
					"name": "sortOrder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "ASC"
					},
					"defaultValue": "SortOrder.ASC"
				},
				{
					"id": 785,
					"name": "sortedFileIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 27,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 804,
					"name": "thumbnailGenerator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 45,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "null"
					},
					"defaultValue": "null"
				},
				{
					"id": 774,
					"name": "toolbarItems",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/redux/state.ts",
							"line": 14,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						784,
						807,
						810,
						775,
						809,
						806,
						794,
						788,
						805,
						768,
						773,
						771,
						770,
						783,
						781,
						795,
						780,
						789,
						778,
						777,
						786,
						767,
						808,
						802,
						769,
						779,
						776,
						791,
						790,
						792,
						800,
						801,
						785,
						804,
						774
					]
				}
			],
			"sources": [
				{
					"fileName": "src/redux/state.ts",
					"line": 5,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1398,
			"name": "layerStyles",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1405,
					"name": "height",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 23,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"100%\""
				},
				{
					"id": 1402,
					"name": "left",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 20,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1400,
					"name": "pointerEvents",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 18,
							"character": 17
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "none"
					},
					"defaultValue": "\"none\""
				},
				{
					"id": 1399,
					"name": "position",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "fixed"
					},
					"defaultValue": "\"fixed\""
				},
				{
					"id": 1403,
					"name": "top",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 21,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1404,
					"name": "width",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"100%\""
				},
				{
					"id": 1401,
					"name": "zIndex",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
							"line": 19,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1405,
						1402,
						1400,
						1399,
						1403,
						1404,
						1401
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/file-list/DnDFileListDragLayer.tsx",
					"line": 16,
					"character": 17
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1281,
			"name": "lightTheme",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1333,
					"name": "rootBorder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 79,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"solid 1px #e4e4e4\""
				},
				{
					"id": 1282,
					"name": "colors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1288,
							"name": "bgPrimary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#fff\""
						},
						{
							"id": 1284,
							"name": "debugBlue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#bdd8fa\""
						},
						{
							"id": 1285,
							"name": "debugGreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 11,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#d2fabd\""
						},
						{
							"id": 1286,
							"name": "debugPurple",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 12,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#d2bdfa\""
						},
						{
							"id": 1283,
							"name": "debugRed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 9,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#fabdbd\""
						},
						{
							"id": 1287,
							"name": "debugYellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#fae9bd\""
						},
						{
							"id": 1291,
							"name": "textActive",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 19,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#09f\""
						},
						{
							"id": 1289,
							"name": "textPrimary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 17,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#000\""
						},
						{
							"id": 1290,
							"name": "textSubtle",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 18,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#bbb\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1288,
								1284,
								1285,
								1286,
								1283,
								1287,
								1291,
								1289,
								1290
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 8,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1301,
					"name": "dnd",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1302,
							"name": "canDropColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 38,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"green\""
						},
						{
							"id": 1304,
							"name": "canDropMask",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 40,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(180, 235, 180, 0.75)\""
						},
						{
							"id": 1303,
							"name": "cannotDropColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 39,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"red\""
						},
						{
							"id": 1305,
							"name": "cannotDropMask",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 41,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(235, 180, 180, 0.75)\""
						},
						{
							"id": 1306,
							"name": "fileListCanDropMaskOne",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 42,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(180, 235, 180, 0.1)\""
						},
						{
							"id": 1307,
							"name": "fileListCanDropMaskTwo",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 43,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(180, 235, 180, 0.2)\""
						},
						{
							"id": 1308,
							"name": "fileListCannotDropMaskOne",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 44,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(235, 180, 180, 0.1)\""
						},
						{
							"id": 1309,
							"name": "fileListCannotDropMaskTwo",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 45,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"rgba(235, 180, 180, 0.2)\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1302,
								1304,
								1303,
								1305,
								1306,
								1307,
								1308,
								1309
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 37,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1310,
					"name": "dragLayer",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1312,
							"name": "backgroundColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 50,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#f5f5f5\""
						},
						{
							"id": 1313,
							"name": "border",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 51,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"solid 2px #09f\""
						},
						{
							"id": 1315,
							"name": "borderRadius",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 53,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2"
						},
						{
							"id": 1311,
							"name": "boxShadow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"2px 2px 5px #888\""
						},
						{
							"id": 1314,
							"name": "padding",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 52,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"7px 10px\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1312,
								1313,
								1315,
								1311,
								1314
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1316,
					"name": "fileList",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1317,
							"name": "desktopGridGutter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 57,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "8"
						},
						{
							"id": 1318,
							"name": "mobileGridGutter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 58,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "5"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1317,
								1318
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1292,
					"name": "fontSizes",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1293,
							"name": "rootPrimary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 23,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "15"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1293
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 22,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1319,
					"name": "gridFileEntry",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1325,
							"name": "borderRadius",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 67,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "5"
						},
						{
							"id": 1320,
							"name": "childrenCountSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 62,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"1.6em\""
						},
						{
							"id": 1326,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 68,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "14"
						},
						{
							"id": 1324,
							"name": "iconColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 66,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#fff\""
						},
						{
							"id": 1321,
							"name": "iconColorFocused",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 63,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#000\""
						},
						{
							"id": 1323,
							"name": "iconSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 65,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"2.4em\""
						},
						{
							"id": 1322,
							"name": "modifiersColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 64,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#888\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1325,
								1320,
								1326,
								1324,
								1321,
								1323,
								1322
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 61,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1327,
					"name": "listFileEntry",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1331,
							"name": "borderColor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 75,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#eee\""
						},
						{
							"id": 1332,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 76,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "14"
						},
						{
							"id": 1330,
							"name": "iconBorderRadius",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 74,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "5"
						},
						{
							"id": 1329,
							"name": "iconFontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 73,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"1.1em\""
						},
						{
							"id": 1328,
							"name": "propertyFontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 72,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "14"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1331,
								1332,
								1330,
								1329,
								1328
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 71,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1294,
					"name": "margins",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1295,
							"name": "rootLayoutMargin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 27,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "8"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1295
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1296,
					"name": "toolbar",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1300,
							"name": "buttonRadius",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 34,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "4"
						},
						{
							"id": 1299,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 33,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "15"
						},
						{
							"id": 1298,
							"name": "lineHeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"30px\""
						},
						{
							"id": 1297,
							"name": "size",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 31,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "30"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1300,
								1299,
								1298,
								1297
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 30,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1333
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1282,
						1301,
						1310,
						1316,
						1292,
						1319,
						1327,
						1294,
						1296
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 7,
					"character": 23
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1335,
			"name": "mobileOverrideTheme",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 1336,
					"name": "fontSizes",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1337,
							"name": "rootPrimary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 86,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "13"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1337
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 85,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1344,
					"name": "gridFileEntry",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1345,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 97,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "13"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1345
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 96,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1346,
					"name": "listFileEntry",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1349,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 102,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "13"
						},
						{
							"id": 1348,
							"name": "iconFontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 101,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"1em\""
						},
						{
							"id": 1347,
							"name": "propertyFontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 100,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "12"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1349,
								1348,
								1347
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 99,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1338,
					"name": "margins",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1339,
							"name": "rootLayoutMargin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 89,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1339
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 88,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1340,
					"name": "toolbar",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1343,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 94,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "13"
						},
						{
							"id": 1342,
							"name": "lineHeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 93,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"28px\""
						},
						{
							"id": 1341,
							"name": "size",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/util/styles.ts",
									"line": 92,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "28"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1343,
								1342,
								1341
							]
						}
					],
					"sources": [
						{
							"fileName": "src/util/styles.ts",
							"line": 91,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1336,
						1344,
						1346,
						1338,
						1340
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/styles.ts",
					"line": 84,
					"character": 32
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				1,
				107,
				121
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				430,
				417,
				1183
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1390,
				66,
				1431,
				231,
				1545,
				204,
				1687,
				1397,
				1570,
				1475,
				1754,
				128,
				141,
				200,
				149,
				1223,
				1235,
				1465,
				72,
				1676,
				1577,
				1479,
				63,
				1670,
				1718,
				1736,
				1743,
				1660,
				1566,
				1668,
				1652,
				1467,
				1721,
				1428,
				1539,
				477,
				1535,
				470,
				493,
				490,
				964,
				212,
				1709,
				1648,
				1458,
				485,
				1702,
				1517,
				1635,
				1450,
				1664,
				1666,
				1484
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				504,
				1251,
				1254,
				278,
				1393,
				1753,
				1334,
				276,
				497,
				179,
				161,
				1752,
				175,
				203,
				186,
				94,
				1581,
				95,
				103,
				99,
				226,
				152,
				124,
				120,
				115,
				111,
				195,
				1559,
				193,
				1555,
				501,
				208,
				237,
				227,
				1662
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1278,
				1382,
				1381,
				1396,
				1271,
				1280,
				1279,
				1683,
				664,
				1693,
				630,
				1437,
				1466,
				1679,
				1746,
				1661,
				1569,
				1669,
				1656,
				1751,
				1735,
				1697,
				1573,
				1595,
				1590,
				1430,
				1277,
				1739,
				1705,
				1764,
				1717,
				1651,
				1464,
				1524,
				1650,
				1663,
				1463,
				1665,
				1667,
				1171,
				1276,
				1377,
				1272,
				811,
				963,
				1600,
				1698,
				1596,
				1591,
				1747,
				1427
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1252,
				1432,
				1563,
				1425,
				1673,
				507,
				514,
				526,
				1383,
				519,
				401,
				1729,
				405,
				1406,
				1520,
				409,
				413,
				1352,
				529,
				1373,
				1727,
				510,
				1366,
				1356,
				1005,
				983,
				315,
				386,
				395,
				297,
				392,
				398,
				303,
				359,
				327,
				380,
				282,
				291,
				288,
				285,
				318,
				312,
				362,
				330,
				300,
				324,
				321,
				279,
				383,
				347,
				389,
				371,
				374,
				306,
				309,
				335,
				341,
				350,
				353,
				356,
				338,
				344,
				365,
				368,
				377,
				294,
				1268,
				1018,
				1024,
				1027,
				1030,
				996,
				1021,
				1015,
				1000,
				998,
				1008,
				993,
				990,
				1002,
				1012,
				1035,
				1198,
				1528,
				1388,
				1386,
				1214,
				1166,
				1513,
				1612,
				1443,
				1440,
				1378,
				1627,
				1488,
				1494,
				1506,
				1604,
				1607,
				1618,
				1473,
				1273,
				1179,
				1350,
				1532,
				1615,
				1202,
				1173,
				1195,
				1621,
				1757
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				629,
				1041,
				535,
				578,
				1255,
				1713,
				766,
				1398,
				1281,
				1335
			]
		}
	]
}